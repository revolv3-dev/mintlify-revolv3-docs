{
  "openapi": "3.0.1",
  "info": {
    "title": "Revolv3 OpenApi Spec",
    "description": "Spec for Revolv3",
    "version": "1.25.0"
  },
  "servers": [
    {
      "url": "https://api.revolv3.com"
    }
  ],
  "paths": {
    "/api/account-verification/ach/person": {
      "post": {
        "tags": [
          "AccountVerification"
        ],
        "summary": "Validate ACH person account",
        "description": "<div><p></p><p>The purpose of this service is to provide merchants with a streamlined and secure method to verify their customers' ACH (Automated Clearing House) accounts.</p><p></p><p>Upon success, this operation returns a status of 200 (OK).</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><p></p><p>If the account number is not approved, a status code of 400 will be returned with error code and message.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>Address</td><td>Address at which the customer should be billed. A required set of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode</td></tr><tr><td>Ach</td><td>Object structure according to the ach payment method type: routingNumber, accountNumber, accountType</td></tr><tr><td>FirstName</td><td>Customer's first name</td></tr><tr><td>LastName</td><td>Customer's last name</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>CompanyName</td><td>Company Name</td><td>null</td></tr></tbody></table></div></div></div></div></div>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AchPaymentAccountVerificationDto"
              },
              "example": {
                "amount": null,
                "firstName": "Joe",
                "lastName": "Doe",
                "companyName": null,
                "address": {
                  "addressId": null,
                  "addressLine1": "26 River Street",
                  "addressLine2": "",
                  "city": "Cambridge",
                  "state": "MA",
                  "postalCode": "02125",
                  "phoneNumber": "123-456-789",
                  "email": null,
                  "country": "US"
                },
                "ach": {
                  "routingNumber": "123456789",
                  "accountNumber": "123456789",
                  "accountType": "Checking",
                  "processingMethodType": 4
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AchPaymentAccountVerificationDto"
              },
              "example": {
                "amount": null,
                "firstName": "Joe",
                "lastName": "Doe",
                "companyName": null,
                "address": {
                  "addressId": null,
                  "addressLine1": "26 River Street",
                  "addressLine2": "",
                  "city": "Cambridge",
                  "state": "MA",
                  "postalCode": "02125",
                  "phoneNumber": "123-456-789",
                  "email": null,
                  "country": "US"
                },
                "ach": {
                  "routingNumber": "123456789",
                  "accountNumber": "123456789",
                  "accountType": "Checking",
                  "processingMethodType": 4
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AchPaymentAccountVerificationDto"
              },
              "example": {
                "amount": null,
                "firstName": "Joe",
                "lastName": "Doe",
                "companyName": null,
                "address": {
                  "addressId": null,
                  "addressLine1": "26 River Street",
                  "addressLine2": "",
                  "city": "Cambridge",
                  "state": "MA",
                  "postalCode": "02125",
                  "phoneNumber": "123-456-789",
                  "email": null,
                  "country": "US"
                },
                "ach": {
                  "routingNumber": "123456789",
                  "accountNumber": "123456789",
                  "accountType": "Checking",
                  "processingMethodType": 4
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AchPaymentAccountVerificationDto"
              },
              "example": {
                "amount": null,
                "firstName": "Joe",
                "lastName": "Doe",
                "companyName": null,
                "address": {
                  "addressId": null,
                  "addressLine1": "26 River Street",
                  "addressLine2": "",
                  "city": "Cambridge",
                  "state": "MA",
                  "postalCode": "02125",
                  "phoneNumber": "123-456-789",
                  "email": null,
                  "country": "US"
                },
                "ach": {
                  "routingNumber": "123456789",
                  "accountNumber": "123456789",
                  "accountType": "Checking",
                  "processingMethodType": 4
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The ACH account was successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAchAccountResponse"
                },
                "example": {
                  "isVerified": true,
                  "message": "Approved",
                  "responseCode": "000"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAchAccountResponse"
                },
                "example": {
                  "isVerified": true,
                  "message": "Approved",
                  "responseCode": "000"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAchAccountResponse"
                },
                "example": {
                  "isVerified": true,
                  "message": "Approved",
                  "responseCode": "000"
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted, or if the account number is not approved",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/account-verification/ach/corporate": {
      "post": {
        "tags": [
          "AccountVerification"
        ],
        "summary": "Validate ACH corporate account",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AchPaymentAccountVerificationDto"
              },
              "example": {
                "amount": null,
                "firstName": null,
                "lastName": null,
                "companyName": "Company Inc.",
                "address": {
                  "addressId": null,
                  "addressLine1": "26 River Street",
                  "addressLine2": "",
                  "city": "Cambridge",
                  "state": "MA",
                  "postalCode": "02125",
                  "phoneNumber": "123-456-789",
                  "email": null,
                  "country": "US"
                },
                "ach": {
                  "routingNumber": "123456789",
                  "accountNumber": "123456789",
                  "accountType": "Checking",
                  "processingMethodType": 4
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AchPaymentAccountVerificationDto"
              },
              "example": {
                "amount": null,
                "firstName": null,
                "lastName": null,
                "companyName": "Company Inc.",
                "address": {
                  "addressId": null,
                  "addressLine1": "26 River Street",
                  "addressLine2": "",
                  "city": "Cambridge",
                  "state": "MA",
                  "postalCode": "02125",
                  "phoneNumber": "123-456-789",
                  "email": null,
                  "country": "US"
                },
                "ach": {
                  "routingNumber": "123456789",
                  "accountNumber": "123456789",
                  "accountType": "Checking",
                  "processingMethodType": 4
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AchPaymentAccountVerificationDto"
              },
              "example": {
                "amount": null,
                "firstName": null,
                "lastName": null,
                "companyName": "Company Inc.",
                "address": {
                  "addressId": null,
                  "addressLine1": "26 River Street",
                  "addressLine2": "",
                  "city": "Cambridge",
                  "state": "MA",
                  "postalCode": "02125",
                  "phoneNumber": "123-456-789",
                  "email": null,
                  "country": "US"
                },
                "ach": {
                  "routingNumber": "123456789",
                  "accountNumber": "123456789",
                  "accountType": "Checking",
                  "processingMethodType": 4
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AchPaymentAccountVerificationDto"
              },
              "example": {
                "amount": null,
                "firstName": null,
                "lastName": null,
                "companyName": "Company Inc.",
                "address": {
                  "addressId": null,
                  "addressLine1": "26 River Street",
                  "addressLine2": "",
                  "city": "Cambridge",
                  "state": "MA",
                  "postalCode": "02125",
                  "phoneNumber": "123-456-789",
                  "email": null,
                  "country": "US"
                },
                "ach": {
                  "routingNumber": "123456789",
                  "accountNumber": "123456789",
                  "accountType": "Checking",
                  "processingMethodType": 4
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The ACH account was successfully verified",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAchAccountResponse"
                },
                "example": {
                  "isVerified": true,
                  "message": "Approved",
                  "responseCode": "000"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAchAccountResponse"
                },
                "example": {
                  "isVerified": true,
                  "message": "Approved",
                  "responseCode": "000"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAchAccountResponse"
                },
                "example": {
                  "isVerified": true,
                  "message": "Approved",
                  "responseCode": "000"
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted, or if the account number is not approved",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>The purpose of this service is to provide merchants with a streamlined and secure method to verify their customers' ACH (Automated Clearing House) accounts.</p><p></p><p>Upon success, this operation returns a status of 200 (OK).</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><p></p><p>If the account number is not approved, a status code of 400 will be returned with error code and message.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>Address</td><td>Address at which the customer should be billed. A required set of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode</td></tr><tr><td>Ach</td><td>Object structure according to the ach payment method type: routingNumber, accountNumber, accountType</td></tr><tr><td>CompanyName</td><td>Company Name</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>FirstName</td><td>Customer's first name</td><td></td></tr><tr><td>LastName</td><td>Customer's last name</td><td></td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Authentication/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Merchant Access Token",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetAzureAdTokenRequestDTO"
              },
              "example": {
                "clientId": "clientIdentifier",
                "clientSecret": "clientSecret"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAzureAdTokenRequestDTO"
              },
              "example": {
                "clientId": "clientIdentifier",
                "clientSecret": "clientSecret"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAzureAdTokenRequestDTO"
              },
              "example": {
                "clientId": "clientIdentifier",
                "clientSecret": "clientSecret"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetAzureAdTokenRequestDTO"
              },
              "example": {
                "clientId": "clientIdentifier",
                "clientSecret": "clientSecret"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The token successfully received",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                },
                "example": {
                  "token_type": "Bearer",
                  "expires_in": 3599,
                  "ext_expires_in": 3599,
                  "access_token": "thisisagianttokenhash1NiIsImtpZCI6IlNzWnNCTmhaY0YzUTlTNHRycFFCVEJ5TlthisisagianttokenhashTQ0MTMiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vZjAyMzQ1MDEtMjdkZC00NTY1LWI1NDUtNDBlZDFmZjNjZDU1L3YyLjAiLCJpYXQiOjE1OTEyODthisisagianttokenhashhwIjoxNTkxMjkzODYzLCJhaW8iOiI0MmRnWURBTDhGTU5iNUgwOGF4thisisagianttokenhashYmExN2VkLTExMGMtNDVmthisisagianttokenhashmF6cGFjciI6IjEiLCJ0aWQiOiJmMDIzNDUwMS0yN2RkLTQ1NjUtYjU0NS00MGVkMWZmM2NkNTUiLCJ1dGkiOiJWOEhIbXVfZ1RVZUZQQ0pKNF91b0FBIiwidmVyIjoiMi4wIn0.rrQVOMQ2M3xhBeA96fOeidrghJep_DEC0-y-WTlsZu37rO18FgTBAp-tNeMasrLZlEcP6O2Ij8OqxY8yqxmIaPoaXpH9f8DN6nkthisisagianttokenhashlCDGp6zUdEb0XDA2-JXbSbs918g9DPBjuTDio1-Cithisisagianttokenhash8C4-H1XZfRN4Z7IMthisisagianttokenhashxp8lqK66NrXI2RtihtBs6gI3GKpfhok-H6_NvUaQQthisisagianttokenhashOHlKrKQ6D2fUIcXg"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                },
                "example": {
                  "token_type": "Bearer",
                  "expires_in": 3599,
                  "ext_expires_in": 3599,
                  "access_token": "thisisagianttokenhash1NiIsImtpZCI6IlNzWnNCTmhaY0YzUTlTNHRycFFCVEJ5TlthisisagianttokenhashTQ0MTMiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vZjAyMzQ1MDEtMjdkZC00NTY1LWI1NDUtNDBlZDFmZjNjZDU1L3YyLjAiLCJpYXQiOjE1OTEyODthisisagianttokenhashhwIjoxNTkxMjkzODYzLCJhaW8iOiI0MmRnWURBTDhGTU5iNUgwOGF4thisisagianttokenhashYmExN2VkLTExMGMtNDVmthisisagianttokenhashmF6cGFjciI6IjEiLCJ0aWQiOiJmMDIzNDUwMS0yN2RkLTQ1NjUtYjU0NS00MGVkMWZmM2NkNTUiLCJ1dGkiOiJWOEhIbXVfZ1RVZUZQQ0pKNF91b0FBIiwidmVyIjoiMi4wIn0.rrQVOMQ2M3xhBeA96fOeidrghJep_DEC0-y-WTlsZu37rO18FgTBAp-tNeMasrLZlEcP6O2Ij8OqxY8yqxmIaPoaXpH9f8DN6nkthisisagianttokenhashlCDGp6zUdEb0XDA2-JXbSbs918g9DPBjuTDio1-Cithisisagianttokenhash8C4-H1XZfRN4Z7IMthisisagianttokenhashxp8lqK66NrXI2RtihtBs6gI3GKpfhok-H6_NvUaQQthisisagianttokenhashOHlKrKQ6D2fUIcXg"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                },
                "example": {
                  "token_type": "Bearer",
                  "expires_in": 3599,
                  "ext_expires_in": 3599,
                  "access_token": "thisisagianttokenhash1NiIsImtpZCI6IlNzWnNCTmhaY0YzUTlTNHRycFFCVEJ5TlthisisagianttokenhashTQ0MTMiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vZjAyMzQ1MDEtMjdkZC00NTY1LWI1NDUtNDBlZDFmZjNjZDU1L3YyLjAiLCJpYXQiOjE1OTEyODthisisagianttokenhashhwIjoxNTkxMjkzODYzLCJhaW8iOiI0MmRnWURBTDhGTU5iNUgwOGF4thisisagianttokenhashYmExN2VkLTExMGMtNDVmthisisagianttokenhashmF6cGFjciI6IjEiLCJ0aWQiOiJmMDIzNDUwMS0yN2RkLTQ1NjUtYjU0NS00MGVkMWZmM2NkNTUiLCJ1dGkiOiJWOEhIbXVfZ1RVZUZQQ0pKNF91b0FBIiwidmVyIjoiMi4wIn0.rrQVOMQ2M3xhBeA96fOeidrghJep_DEC0-y-WTlsZu37rO18FgTBAp-tNeMasrLZlEcP6O2Ij8OqxY8yqxmIaPoaXpH9f8DN6nkthisisagianttokenhashlCDGp6zUdEb0XDA2-JXbSbs918g9DPBjuTDio1-Cithisisagianttokenhash8C4-H1XZfRN4Z7IMthisisagianttokenhashxp8lqK66NrXI2RtihtBs6gI3GKpfhok-H6_NvUaQQthisisagianttokenhashOHlKrKQ6D2fUIcXg"
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "If the AzureAD token cannot be retrieved",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to retrieve AzureAD token"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to retrieve AzureAD token"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to retrieve AzureAD token"
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>For production access to the API, merchants will need an access token.</p><p></p><p>The access tokens are retrieved by sending the merchant client identifier and the merchant secret which can be generated in the Merchant Settings Profile page.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>ClientId</td><td>Client's unique identifier</td></tr><tr><td>ClientSecret</td><td>Client's unique secret API key</td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Checkout": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "Create Checkout Link",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckoutLinkRequestDto"
              },
              "example": {
                "returnUrl": "https%3A%2F%2Fsite.com",
                "oneTimePayment": {
                  "checkoutLineItems": [
                    {
                      "name": "Item 1",
                      "description": "Item Description",
                      "value": 9.99,
                      "valueType": "Standard"
                    },
                    {
                      "name": "Item 2",
                      "description": "Item Description",
                      "value": 21.99,
                      "valueType": "Standard"
                    }
                  ]
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckoutLinkRequestDto"
              },
              "example": {
                "returnUrl": "https%3A%2F%2Fsite.com",
                "oneTimePayment": {
                  "checkoutLineItems": [
                    {
                      "name": "Item 1",
                      "description": "Item Description",
                      "value": 9.99,
                      "valueType": "Standard"
                    },
                    {
                      "name": "Item 2",
                      "description": "Item Description",
                      "value": 21.99,
                      "valueType": "Standard"
                    }
                  ]
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckoutLinkRequestDto"
              },
              "example": {
                "returnUrl": "https%3A%2F%2Fsite.com",
                "oneTimePayment": {
                  "checkoutLineItems": [
                    {
                      "name": "Item 1",
                      "description": "Item Description",
                      "value": 9.99,
                      "valueType": "Standard"
                    },
                    {
                      "name": "Item 2",
                      "description": "Item Description",
                      "value": 21.99,
                      "valueType": "Standard"
                    }
                  ]
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckoutLinkRequestDto"
              },
              "example": {
                "returnUrl": "https%3A%2F%2Fsite.com",
                "oneTimePayment": {
                  "checkoutLineItems": [
                    {
                      "name": "Item 1",
                      "description": "Item Description",
                      "value": 9.99,
                      "valueType": "Standard"
                    },
                    {
                      "name": "Item 2",
                      "description": "Item Description",
                      "value": 21.99,
                      "valueType": "Standard"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The checkout link was successfully created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCheckoutLinkResponseDto"
                },
                "example": {
                  "checkoutId": "12345678-ABCD-1234-EFGH-987654321000",
                  "checkoutLink": "http://localhost:4200/checkout/12345678-ABCD-1234-EFGH-987654321000"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCheckoutLinkResponseDto"
                },
                "example": {
                  "checkoutId": "12345678-ABCD-1234-EFGH-987654321000",
                  "checkoutLink": "http://localhost:4200/checkout/12345678-ABCD-1234-EFGH-987654321000"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCheckoutLinkResponseDto"
                },
                "example": {
                  "checkoutId": "12345678-ABCD-1234-EFGH-987654321000",
                  "checkoutLink": "http://localhost:4200/checkout/12345678-ABCD-1234-EFGH-987654321000"
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Create a URL for a checkout page to accept payments. </p><p></p><p>This URL can be seamlessly integrated into your payment flow, embedded into your payment page, or used to direct customers to a hosted payment page. The link will be deactivated once the customer opens the checkout page.</p><p></p><p>The required arguments for this endpoint are checkout line items. Optionally, you can provide a return URL to redirect the customer to a specific webpage after the payment is completed.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>CheckoutSubscription</td><td>Information for creating a checkout subscription</td></tr><tr><td>BillingFrequencyType</td><td>How often the subscription should be attempted for billing</td></tr><tr><td>SubscriptionBillingPlans</td><td>The subscription's individual billing items</td></tr><tr><td>BillingPlanName</td><td>The subscription's primary payment information</td></tr><tr><td>BillingPlanValue</td><td>Value for which the billing plan should be executed for</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>CustomerId</td><td>Customer's unique identifier</td><td>null</td></tr><tr><td>MerchantCustomerRefId</td><td>Merchant's identifier for the customer</td><td>null</td></tr><tr><td>MerchantSubscriptionRefId</td><td>Merchant's unique identifier for the subscription</td><td>null</td></tr><tr><td>SubscriptionCancelType</td><td>The circumstances under which a subscription must be cancelled (e.g. Immediate or EndOfCycle)</td><td></td></tr><tr><td>TrialDuration</td><td>The amount of trial duration time in the unit of TrialDurationType</td><td>0</td></tr><tr><td>TrialDurationType</td><td>The type of trial duration</td><td>Daily</td></tr><tr><td>BillingPlanCycleCount</td><td>The number of times the billing plan should be billed before expiration</td><td>-1</td></tr><tr><td>BillingPlanValueType</td><td>A qualifier for how the value should be interpreted (e.g. standard, discount, discountPercentage, finalDiscount, or priceOverride)</td><td>Standard</td></tr><tr><td>BillingPlanStartCycleDelay</td><td>Amount of subscription cycle to delay the start date of the billing plan</td><td>0</td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Checkout/{checkoutUid}": {
      "get": {
        "tags": [
          "Checkout"
        ],
        "summary": "Get Complete Checkout Information",
        "parameters": [
          {
            "name": "checkoutUid",
            "in": "path",
            "description": "The checkout Uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompleteCheckoutInformationResponseDto"
                },
                "example": {
                  "checkoutId": "12345678-ABCD-1234-EFGH-987654321000",
                  "checkoutStatus": "Pending",
                  "returnUrl": "https://mysite.com/order/12345678",
                  "completionDate": null,
                  "customer": {
                    "customerId": 328,
                    "firstName": "Joe",
                    "lastName": "Doe",
                    "email": "aa@aa.com"
                  },
                  "invoice": {
                    "invoiceId": 8786,
                    "invoiceStatus": "Paid",
                    "total": 10.0,
                    "billingDate": "2025-09-08T14:50:26.8124152+02:00",
                    "paymentMethod": {
                      "paymentMethodId": 0,
                      "billingAddress": {
                        "addressId": 4232,
                        "addressLine1": "20 Bitterwater Street",
                        "addressLine2": null,
                        "city": "King City",
                        "state": "CA",
                        "postalCode": "11111",
                        "phoneNumber": "43823527092",
                        "email": "aa@aa.com",
                        "country": "US"
                      },
                      "billingFirstName": "Joe",
                      "billingLastName": "Doe",
                      "type": null,
                      "achDetails": null,
                      "creditCardDetails": {
                        "last4Digit": "1111",
                        "expirationDate": "11/11"
                      }
                    },
                    "invoiceAttempts": null
                  },
                  "checkoutLineItems": [
                    {
                      "name": "Checkout Line Item Name",
                      "description": "Checkout Line Item Description",
                      "value": 10.0,
                      "valueType": "Standard"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompleteCheckoutInformationResponseDto"
                },
                "example": {
                  "checkoutId": "12345678-ABCD-1234-EFGH-987654321000",
                  "checkoutStatus": "Pending",
                  "returnUrl": "https://mysite.com/order/12345678",
                  "completionDate": null,
                  "customer": {
                    "customerId": 328,
                    "firstName": "Joe",
                    "lastName": "Doe",
                    "email": "aa@aa.com"
                  },
                  "invoice": {
                    "invoiceId": 8786,
                    "invoiceStatus": "Paid",
                    "total": 10.0,
                    "billingDate": "2025-09-08T14:50:26.8124152+02:00",
                    "paymentMethod": {
                      "paymentMethodId": 0,
                      "billingAddress": {
                        "addressId": 4232,
                        "addressLine1": "20 Bitterwater Street",
                        "addressLine2": null,
                        "city": "King City",
                        "state": "CA",
                        "postalCode": "11111",
                        "phoneNumber": "43823527092",
                        "email": "aa@aa.com",
                        "country": "US"
                      },
                      "billingFirstName": "Joe",
                      "billingLastName": "Doe",
                      "type": null,
                      "achDetails": null,
                      "creditCardDetails": {
                        "last4Digit": "1111",
                        "expirationDate": "11/11"
                      }
                    },
                    "invoiceAttempts": null
                  },
                  "checkoutLineItems": [
                    {
                      "name": "Checkout Line Item Name",
                      "description": "Checkout Line Item Description",
                      "value": 10.0,
                      "valueType": "Standard"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompleteCheckoutInformationResponseDto"
                },
                "example": {
                  "checkoutId": "12345678-ABCD-1234-EFGH-987654321000",
                  "checkoutStatus": "Pending",
                  "returnUrl": "https://mysite.com/order/12345678",
                  "completionDate": null,
                  "customer": {
                    "customerId": 328,
                    "firstName": "Joe",
                    "lastName": "Doe",
                    "email": "aa@aa.com"
                  },
                  "invoice": {
                    "invoiceId": 8786,
                    "invoiceStatus": "Paid",
                    "total": 10.0,
                    "billingDate": "2025-09-08T14:50:26.8124152+02:00",
                    "paymentMethod": {
                      "paymentMethodId": 0,
                      "billingAddress": {
                        "addressId": 4232,
                        "addressLine1": "20 Bitterwater Street",
                        "addressLine2": null,
                        "city": "King City",
                        "state": "CA",
                        "postalCode": "11111",
                        "phoneNumber": "43823527092",
                        "email": "aa@aa.com",
                        "country": "US"
                      },
                      "billingFirstName": "Joe",
                      "billingLastName": "Doe",
                      "type": null,
                      "achDetails": null,
                      "creditCardDetails": {
                        "last4Digit": "1111",
                        "expirationDate": "11/11"
                      }
                    },
                    "invoiceAttempts": null
                  },
                  "checkoutLineItems": [
                    {
                      "name": "Checkout Line Item Name",
                      "description": "Checkout Line Item Description",
                      "value": 10.0,
                      "valueType": "Standard"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "404": {
            "description": "If the checkout ID cannot be associated with a checkout",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Retrieve a complete checkout information (specified with Checkout ID) with a status code of 200 (OK).</p><p>If the checkout ID cannot be associated with a checkout, a status code of 404 will be returned.</p></div>"
      }
    },
    "/api/Customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create Customer",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequestDTO"
              },
              "example": {
                "merchantCustomerRefId": null,
                "firstName": "John",
                "lastName": "Doe",
                "email": null,
                "billingAddresses": [
                  {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": "",
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  }
                ],
                "shippingAddresses": [
                  {
                    "addressId": null,
                    "addressLine1": "101 First Street",
                    "addressLine2": "",
                    "city": "Costa Mesa",
                    "state": "CA",
                    "postalCode": "90001",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  }
                ],
                "subscriptions": [
                  {
                    "paymentMethods": [
                      {
                        "paymentMethodTypes": [
                          1
                        ],
                        "priority": 0,
                        "taxAmount": null,
                        "originalNetworkTransactionId": null,
                        "billingAddress": {
                          "addressId": null,
                          "addressLine1": "100 Main Street",
                          "addressLine2": "",
                          "city": "Irvine",
                          "state": "CA",
                          "postalCode": "92602",
                          "phoneNumber": null,
                          "email": null,
                          "country": "US"
                        },
                        "creditCard": {
                          "paymentAccountNumber": "4111111111111111",
                          "expirationDate": "1025",
                          "securityCode": null,
                          "networkToken": null,
                          "processingMethodType": 5
                        },
                        "ach": null,
                        "googlePay": null,
                        "applePay": null,
                        "merchantPaymentMethodRefId": null,
                        "billingFirstName": "John",
                        "billingLastName": "Doe",
                        "billingFullName": null
                      }
                    ],
                    "existingPaymentMethod": null,
                    "merchantSubscriptionRefId": "1234-5678-9101",
                    "billingFrequency": {
                      "intervalType": 1,
                      "intervalCount": 1
                    },
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": "EndOfCycle",
                    "startDate": "2025-09-08T00:00:00Z",
                    "trialDuration": 0,
                    "trialDurationType": 1,
                    "taxAddress": {
                      "addressId": null,
                      "addressLine1": "101 Update Street",
                      "addressLine2": "",
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "includeRawProcessorResponse": false,
                    "customer": null,
                    "subscriptionBillingPlans": [
                      {
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "cycleCount": -1,
                        "valueType": "Standard",
                        "startCycleDelay": 0
                      },
                      {
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "cycleCount": 12,
                        "valueType": "Standard",
                        "startCycleDelay": 1
                      }
                    ],
                    "recycleImmediatePayment": false,
                    "currency": 1
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequestDTO"
              },
              "example": {
                "merchantCustomerRefId": null,
                "firstName": "John",
                "lastName": "Doe",
                "email": null,
                "billingAddresses": [
                  {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": "",
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  }
                ],
                "shippingAddresses": [
                  {
                    "addressId": null,
                    "addressLine1": "101 First Street",
                    "addressLine2": "",
                    "city": "Costa Mesa",
                    "state": "CA",
                    "postalCode": "90001",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  }
                ],
                "subscriptions": [
                  {
                    "paymentMethods": [
                      {
                        "paymentMethodTypes": [
                          1
                        ],
                        "priority": 0,
                        "taxAmount": null,
                        "originalNetworkTransactionId": null,
                        "billingAddress": {
                          "addressId": null,
                          "addressLine1": "100 Main Street",
                          "addressLine2": "",
                          "city": "Irvine",
                          "state": "CA",
                          "postalCode": "92602",
                          "phoneNumber": null,
                          "email": null,
                          "country": "US"
                        },
                        "creditCard": {
                          "paymentAccountNumber": "4111111111111111",
                          "expirationDate": "1025",
                          "securityCode": null,
                          "networkToken": null,
                          "processingMethodType": 5
                        },
                        "ach": null,
                        "googlePay": null,
                        "applePay": null,
                        "merchantPaymentMethodRefId": null,
                        "billingFirstName": "John",
                        "billingLastName": "Doe",
                        "billingFullName": null
                      }
                    ],
                    "existingPaymentMethod": null,
                    "merchantSubscriptionRefId": "1234-5678-9101",
                    "billingFrequency": {
                      "intervalType": 1,
                      "intervalCount": 1
                    },
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": "EndOfCycle",
                    "startDate": "2025-09-08T00:00:00Z",
                    "trialDuration": 0,
                    "trialDurationType": 1,
                    "taxAddress": {
                      "addressId": null,
                      "addressLine1": "101 Update Street",
                      "addressLine2": "",
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "includeRawProcessorResponse": false,
                    "customer": null,
                    "subscriptionBillingPlans": [
                      {
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "cycleCount": -1,
                        "valueType": "Standard",
                        "startCycleDelay": 0
                      },
                      {
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "cycleCount": 12,
                        "valueType": "Standard",
                        "startCycleDelay": 1
                      }
                    ],
                    "recycleImmediatePayment": false,
                    "currency": 1
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequestDTO"
              },
              "example": {
                "merchantCustomerRefId": null,
                "firstName": "John",
                "lastName": "Doe",
                "email": null,
                "billingAddresses": [
                  {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": "",
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  }
                ],
                "shippingAddresses": [
                  {
                    "addressId": null,
                    "addressLine1": "101 First Street",
                    "addressLine2": "",
                    "city": "Costa Mesa",
                    "state": "CA",
                    "postalCode": "90001",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  }
                ],
                "subscriptions": [
                  {
                    "paymentMethods": [
                      {
                        "paymentMethodTypes": [
                          1
                        ],
                        "priority": 0,
                        "taxAmount": null,
                        "originalNetworkTransactionId": null,
                        "billingAddress": {
                          "addressId": null,
                          "addressLine1": "100 Main Street",
                          "addressLine2": "",
                          "city": "Irvine",
                          "state": "CA",
                          "postalCode": "92602",
                          "phoneNumber": null,
                          "email": null,
                          "country": "US"
                        },
                        "creditCard": {
                          "paymentAccountNumber": "4111111111111111",
                          "expirationDate": "1025",
                          "securityCode": null,
                          "networkToken": null,
                          "processingMethodType": 5
                        },
                        "ach": null,
                        "googlePay": null,
                        "applePay": null,
                        "merchantPaymentMethodRefId": null,
                        "billingFirstName": "John",
                        "billingLastName": "Doe",
                        "billingFullName": null
                      }
                    ],
                    "existingPaymentMethod": null,
                    "merchantSubscriptionRefId": "1234-5678-9101",
                    "billingFrequency": {
                      "intervalType": 1,
                      "intervalCount": 1
                    },
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": "EndOfCycle",
                    "startDate": "2025-09-08T00:00:00Z",
                    "trialDuration": 0,
                    "trialDurationType": 1,
                    "taxAddress": {
                      "addressId": null,
                      "addressLine1": "101 Update Street",
                      "addressLine2": "",
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "includeRawProcessorResponse": false,
                    "customer": null,
                    "subscriptionBillingPlans": [
                      {
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "cycleCount": -1,
                        "valueType": "Standard",
                        "startCycleDelay": 0
                      },
                      {
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "cycleCount": 12,
                        "valueType": "Standard",
                        "startCycleDelay": 1
                      }
                    ],
                    "recycleImmediatePayment": false,
                    "currency": 1
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequestDTO"
              },
              "example": {
                "merchantCustomerRefId": null,
                "firstName": "John",
                "lastName": "Doe",
                "email": null,
                "billingAddresses": [
                  {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": "",
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  }
                ],
                "shippingAddresses": [
                  {
                    "addressId": null,
                    "addressLine1": "101 First Street",
                    "addressLine2": "",
                    "city": "Costa Mesa",
                    "state": "CA",
                    "postalCode": "90001",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  }
                ],
                "subscriptions": [
                  {
                    "paymentMethods": [
                      {
                        "paymentMethodTypes": [
                          1
                        ],
                        "priority": 0,
                        "taxAmount": null,
                        "originalNetworkTransactionId": null,
                        "billingAddress": {
                          "addressId": null,
                          "addressLine1": "100 Main Street",
                          "addressLine2": "",
                          "city": "Irvine",
                          "state": "CA",
                          "postalCode": "92602",
                          "phoneNumber": null,
                          "email": null,
                          "country": "US"
                        },
                        "creditCard": {
                          "paymentAccountNumber": "4111111111111111",
                          "expirationDate": "1025",
                          "securityCode": null,
                          "networkToken": null,
                          "processingMethodType": 5
                        },
                        "ach": null,
                        "googlePay": null,
                        "applePay": null,
                        "merchantPaymentMethodRefId": null,
                        "billingFirstName": "John",
                        "billingLastName": "Doe",
                        "billingFullName": null
                      }
                    ],
                    "existingPaymentMethod": null,
                    "merchantSubscriptionRefId": "1234-5678-9101",
                    "billingFrequency": {
                      "intervalType": 1,
                      "intervalCount": 1
                    },
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": "EndOfCycle",
                    "startDate": "2025-09-08T00:00:00Z",
                    "trialDuration": 0,
                    "trialDurationType": 1,
                    "taxAddress": {
                      "addressId": null,
                      "addressLine1": "101 Update Street",
                      "addressLine2": "",
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "includeRawProcessorResponse": false,
                    "customer": null,
                    "subscriptionBillingPlans": [
                      {
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "cycleCount": -1,
                        "valueType": "Standard",
                        "startCycleDelay": 0
                      },
                      {
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "cycleCount": 12,
                        "valueType": "Standard",
                        "startCycleDelay": 1
                      }
                    ],
                    "recycleImmediatePayment": false,
                    "currency": 1
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [
                    {
                      "addressId": 2,
                      "addressLine1": "101 First Street",
                      "addressLine2": "",
                      "city": "Costa Mesa",
                      "state": "CA",
                      "postalCode": "90001",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "taxAddresses": [],
                  "subscriptions": [
                    {
                      "subscriptionId": 1,
                      "customerId": 1,
                      "merchantSubscriptionRefId": "1234-5678-9101",
                      "networkTransactionId": null,
                      "billingIntervalType": "Days",
                      "billingIntervalCount": 1,
                      "subscriptionStatusType": "current",
                      "subscriptionCancelType": null,
                      "initialBillDate": "08-Sep-25",
                      "nextBillDate": "09-Sep-25",
                      "taxAddress": null,
                      "paymentMethodIds": null,
                      "cancelledAt": null,
                      "billingPlans": [
                        {
                          "subscriptionBillingPlanId": 1,
                          "subscriptionId": 0,
                          "name": "Billing Plan 1",
                          "value": 10.99,
                          "startDate": "08-Sep-25",
                          "cyclesRemaining": -1,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        },
                        {
                          "subscriptionBillingPlanId": 2,
                          "subscriptionId": 0,
                          "name": "Billing Plan 2",
                          "value": 14.99,
                          "startDate": "09-Sep-25",
                          "cyclesRemaining": 12,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        }
                      ],
                      "message": null,
                      "paymentProcessor": null,
                      "processorMerchantId": null,
                      "processorRawResponse": null,
                      "currency": null
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [
                    {
                      "addressId": 2,
                      "addressLine1": "101 First Street",
                      "addressLine2": "",
                      "city": "Costa Mesa",
                      "state": "CA",
                      "postalCode": "90001",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "taxAddresses": [],
                  "subscriptions": [
                    {
                      "subscriptionId": 1,
                      "customerId": 1,
                      "merchantSubscriptionRefId": "1234-5678-9101",
                      "networkTransactionId": null,
                      "billingIntervalType": "Days",
                      "billingIntervalCount": 1,
                      "subscriptionStatusType": "current",
                      "subscriptionCancelType": null,
                      "initialBillDate": "08-Sep-25",
                      "nextBillDate": "09-Sep-25",
                      "taxAddress": null,
                      "paymentMethodIds": null,
                      "cancelledAt": null,
                      "billingPlans": [
                        {
                          "subscriptionBillingPlanId": 1,
                          "subscriptionId": 0,
                          "name": "Billing Plan 1",
                          "value": 10.99,
                          "startDate": "08-Sep-25",
                          "cyclesRemaining": -1,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        },
                        {
                          "subscriptionBillingPlanId": 2,
                          "subscriptionId": 0,
                          "name": "Billing Plan 2",
                          "value": 14.99,
                          "startDate": "09-Sep-25",
                          "cyclesRemaining": 12,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        }
                      ],
                      "message": null,
                      "paymentProcessor": null,
                      "processorMerchantId": null,
                      "processorRawResponse": null,
                      "currency": null
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [
                    {
                      "addressId": 2,
                      "addressLine1": "101 First Street",
                      "addressLine2": "",
                      "city": "Costa Mesa",
                      "state": "CA",
                      "postalCode": "90001",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "taxAddresses": [],
                  "subscriptions": [
                    {
                      "subscriptionId": 1,
                      "customerId": 1,
                      "merchantSubscriptionRefId": "1234-5678-9101",
                      "networkTransactionId": null,
                      "billingIntervalType": "Days",
                      "billingIntervalCount": 1,
                      "subscriptionStatusType": "current",
                      "subscriptionCancelType": null,
                      "initialBillDate": "08-Sep-25",
                      "nextBillDate": "09-Sep-25",
                      "taxAddress": null,
                      "paymentMethodIds": null,
                      "cancelledAt": null,
                      "billingPlans": [
                        {
                          "subscriptionBillingPlanId": 1,
                          "subscriptionId": 0,
                          "name": "Billing Plan 1",
                          "value": 10.99,
                          "startDate": "08-Sep-25",
                          "cyclesRemaining": -1,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        },
                        {
                          "subscriptionBillingPlanId": 2,
                          "subscriptionId": 0,
                          "name": "Billing Plan 2",
                          "value": 14.99,
                          "startDate": "09-Sep-25",
                          "cyclesRemaining": 12,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        }
                      ],
                      "message": null,
                      "paymentProcessor": null,
                      "processorMerchantId": null,
                      "processorRawResponse": null,
                      "currency": null
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          },
          "207": {
            "description": "Multi-Status",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleObjectResult"
                  }
                },
                "example": [
                  {
                    "response": {
                      "customerId": 1,
                      "merchantCustomerRefId": "1234-5678-9101",
                      "firstName": "John",
                      "lastName": "Doe",
                      "billingAddresses": [
                        {
                          "addressId": 1,
                          "addressLine1": "100 Main Street",
                          "addressLine2": "",
                          "city": "Santa Ana",
                          "state": "CA",
                          "postalCode": "90000",
                          "phoneNumber": null,
                          "email": null,
                          "country": "US"
                        }
                      ],
                      "shippingAddresses": [
                        {
                          "addressId": 2,
                          "addressLine1": "101 First Street",
                          "addressLine2": "",
                          "city": "Costa Mesa",
                          "state": "CA",
                          "postalCode": "90001",
                          "phoneNumber": null,
                          "email": null,
                          "country": "US"
                        }
                      ],
                      "taxAddresses": [],
                      "subscriptions": []
                    },
                    "statusCode": 201,
                    "name": "Customer"
                  },
                  {
                    "response": {
                      "subscriptionId": 1,
                      "customerId": 1,
                      "merchantSubscriptionRefId": "1234-5678-9101",
                      "networkTransactionId": null,
                      "billingIntervalType": "Days",
                      "billingIntervalCount": 1,
                      "subscriptionStatusType": "current",
                      "subscriptionCancelType": null,
                      "initialBillDate": "09-Sep-25",
                      "nextBillDate": null,
                      "taxAddress": null,
                      "paymentMethodIds": null,
                      "cancelledAt": null,
                      "billingPlans": [
                        {
                          "subscriptionBillingPlanId": 1,
                          "subscriptionId": 0,
                          "name": "Billing Plan 1",
                          "value": 10.99,
                          "startDate": "08-Sep-25",
                          "cyclesRemaining": -1,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        },
                        {
                          "subscriptionBillingPlanId": 2,
                          "subscriptionId": 0,
                          "name": "Billing Plan 2",
                          "value": 14.99,
                          "startDate": "08-Sep-25",
                          "cyclesRemaining": 12,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        }
                      ],
                      "message": null,
                      "paymentProcessor": null,
                      "processorMerchantId": null,
                      "processorRawResponse": null,
                      "currency": null
                    },
                    "statusCode": 201,
                    "name": "Subscription"
                  },
                  {
                    "response": {
                      "merchantSubscriptionRefId": "1234-5678-9101",
                      "errorMessage": "Subscription creation fail"
                    },
                    "statusCode": 400,
                    "name": "CreateSubscriptionFailure"
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleObjectResult"
                  }
                },
                "example": [
                  {
                    "response": {
                      "customerId": 1,
                      "merchantCustomerRefId": "1234-5678-9101",
                      "firstName": "John",
                      "lastName": "Doe",
                      "billingAddresses": [
                        {
                          "addressId": 1,
                          "addressLine1": "100 Main Street",
                          "addressLine2": "",
                          "city": "Santa Ana",
                          "state": "CA",
                          "postalCode": "90000",
                          "phoneNumber": null,
                          "email": null,
                          "country": "US"
                        }
                      ],
                      "shippingAddresses": [
                        {
                          "addressId": 2,
                          "addressLine1": "101 First Street",
                          "addressLine2": "",
                          "city": "Costa Mesa",
                          "state": "CA",
                          "postalCode": "90001",
                          "phoneNumber": null,
                          "email": null,
                          "country": "US"
                        }
                      ],
                      "taxAddresses": [],
                      "subscriptions": []
                    },
                    "statusCode": 201,
                    "name": "Customer"
                  },
                  {
                    "response": {
                      "subscriptionId": 1,
                      "customerId": 1,
                      "merchantSubscriptionRefId": "1234-5678-9101",
                      "networkTransactionId": null,
                      "billingIntervalType": "Days",
                      "billingIntervalCount": 1,
                      "subscriptionStatusType": "current",
                      "subscriptionCancelType": null,
                      "initialBillDate": "09-Sep-25",
                      "nextBillDate": null,
                      "taxAddress": null,
                      "paymentMethodIds": null,
                      "cancelledAt": null,
                      "billingPlans": [
                        {
                          "subscriptionBillingPlanId": 1,
                          "subscriptionId": 0,
                          "name": "Billing Plan 1",
                          "value": 10.99,
                          "startDate": "08-Sep-25",
                          "cyclesRemaining": -1,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        },
                        {
                          "subscriptionBillingPlanId": 2,
                          "subscriptionId": 0,
                          "name": "Billing Plan 2",
                          "value": 14.99,
                          "startDate": "08-Sep-25",
                          "cyclesRemaining": 12,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        }
                      ],
                      "message": null,
                      "paymentProcessor": null,
                      "processorMerchantId": null,
                      "processorRawResponse": null,
                      "currency": null
                    },
                    "statusCode": 201,
                    "name": "Subscription"
                  },
                  {
                    "response": {
                      "merchantSubscriptionRefId": "1234-5678-9101",
                      "errorMessage": "Subscription creation fail"
                    },
                    "statusCode": 400,
                    "name": "CreateSubscriptionFailure"
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleObjectResult"
                  }
                },
                "example": [
                  {
                    "response": {
                      "customerId": 1,
                      "merchantCustomerRefId": "1234-5678-9101",
                      "firstName": "John",
                      "lastName": "Doe",
                      "billingAddresses": [
                        {
                          "addressId": 1,
                          "addressLine1": "100 Main Street",
                          "addressLine2": "",
                          "city": "Santa Ana",
                          "state": "CA",
                          "postalCode": "90000",
                          "phoneNumber": null,
                          "email": null,
                          "country": "US"
                        }
                      ],
                      "shippingAddresses": [
                        {
                          "addressId": 2,
                          "addressLine1": "101 First Street",
                          "addressLine2": "",
                          "city": "Costa Mesa",
                          "state": "CA",
                          "postalCode": "90001",
                          "phoneNumber": null,
                          "email": null,
                          "country": "US"
                        }
                      ],
                      "taxAddresses": [],
                      "subscriptions": []
                    },
                    "statusCode": 201,
                    "name": "Customer"
                  },
                  {
                    "response": {
                      "subscriptionId": 1,
                      "customerId": 1,
                      "merchantSubscriptionRefId": "1234-5678-9101",
                      "networkTransactionId": null,
                      "billingIntervalType": "Days",
                      "billingIntervalCount": 1,
                      "subscriptionStatusType": "current",
                      "subscriptionCancelType": null,
                      "initialBillDate": "09-Sep-25",
                      "nextBillDate": null,
                      "taxAddress": null,
                      "paymentMethodIds": null,
                      "cancelledAt": null,
                      "billingPlans": [
                        {
                          "subscriptionBillingPlanId": 1,
                          "subscriptionId": 0,
                          "name": "Billing Plan 1",
                          "value": 10.99,
                          "startDate": "08-Sep-25",
                          "cyclesRemaining": -1,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        },
                        {
                          "subscriptionBillingPlanId": 2,
                          "subscriptionId": 0,
                          "name": "Billing Plan 2",
                          "value": 14.99,
                          "startDate": "08-Sep-25",
                          "cyclesRemaining": 12,
                          "cycleCount": 0,
                          "valueType": "Standard"
                        }
                      ],
                      "message": null,
                      "paymentProcessor": null,
                      "processorMerchantId": null,
                      "processorRawResponse": null,
                      "currency": null
                    },
                    "statusCode": 201,
                    "name": "Subscription"
                  },
                  {
                    "response": {
                      "merchantSubscriptionRefId": "1234-5678-9101",
                      "errorMessage": "Subscription creation fail"
                    },
                    "statusCode": 400,
                    "name": "CreateSubscriptionFailure"
                  }
                ]
              }
            }
          }
        },
        "description": "<div><p></p><p>Create a customer for a merchant with a first name, last name, and optional merchant customer reference ID.</p><p>Upon success, a status code of 201 (Created) will be returned. If a customer cannot be created with the provided data, a status code of 400 (Bad Request) will be returned.</p><p>Additionally, subscriptions can be created simultaneously with the customer. If there are one of more subscription failed during the creation, a status code of 207 (Multi-Status) will be returned. A 207 status code response is an array of success (201) and failure (400) responses. The response field can be either Customer (Create Customer 201 response), Subscription (Create Subscription 201 response) or CreateSubscriptionFailure type. CreateSubscriptionFailure response type has a MerchantSubscriptionRefId field for the failure subscription, and an ErrorMessage field for the error description. For a sample of each response type, refer to the 207 response sample below.</p><p>For additional details on how to create subscriptions, refer to the specifications at Create Subscription.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>FirstName</td><td>Customer's first name</td></tr><tr><td>LastName</td><td>Customer's last name</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantCustomerRefId</td><td>Merchant's identifier for the customer</td><td>null</td></tr><tr><td>BillingAddresses</td><td>Customer's associated address(es) for billing purposes. A required set of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode</td><td>[]</td></tr><tr><td>ShippingAddresses</td><td>Customer's associated address(es) for shipping purposes</td><td>[]</td></tr></tbody></table></div></div></div></div></div>"
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Customers",
        "parameters": [
          {
            "name": "merchantCustomerRefId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCustomersQueryResultDTO"
                  }
                },
                "example": [
                  {
                    "customerId": 1,
                    "merchantCustomerRefId": "1234-5678-9101",
                    "firstName": "John",
                    "lastName": "Doe"
                  },
                  {
                    "customerId": 2,
                    "merchantCustomerRefId": "5678-1234-9101",
                    "firstName": "Jane",
                    "lastName": "Doe"
                  },
                  {
                    "customerId": 3,
                    "merchantCustomerRefId": "9101-5678-1234",
                    "firstName": "Jeremy",
                    "lastName": "Doe"
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCustomersQueryResultDTO"
                  }
                },
                "example": [
                  {
                    "customerId": 1,
                    "merchantCustomerRefId": "1234-5678-9101",
                    "firstName": "John",
                    "lastName": "Doe"
                  },
                  {
                    "customerId": 2,
                    "merchantCustomerRefId": "5678-1234-9101",
                    "firstName": "Jane",
                    "lastName": "Doe"
                  },
                  {
                    "customerId": 3,
                    "merchantCustomerRefId": "9101-5678-1234",
                    "firstName": "Jeremy",
                    "lastName": "Doe"
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCustomersQueryResultDTO"
                  }
                },
                "example": [
                  {
                    "customerId": 1,
                    "merchantCustomerRefId": "1234-5678-9101",
                    "firstName": "John",
                    "lastName": "Doe"
                  },
                  {
                    "customerId": 2,
                    "merchantCustomerRefId": "5678-1234-9101",
                    "firstName": "Jane",
                    "lastName": "Doe"
                  },
                  {
                    "customerId": 3,
                    "merchantCustomerRefId": "9101-5678-1234",
                    "firstName": "Jeremy",
                    "lastName": "Doe"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Search for a customer given a Merchant Customer Ref ID, first name, or last name.</p><p>If no customer with the provided Merchant Customer Ref ID, first name, or last name is found, a status of 404 (Not Found) will be returned.</p></div>"
      }
    },
    "/api/Customers/{customerId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Customer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [
                    {
                      "addressId": 2,
                      "addressLine1": "101 First Street",
                      "addressLine2": null,
                      "city": "Costa Mesa",
                      "state": "CA",
                      "postalCode": "90001",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [
                    {
                      "addressId": 2,
                      "addressLine1": "101 First Street",
                      "addressLine2": null,
                      "city": "Costa Mesa",
                      "state": "CA",
                      "postalCode": "90001",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [
                    {
                      "addressId": 2,
                      "addressLine1": "101 First Street",
                      "addressLine2": null,
                      "city": "Costa Mesa",
                      "state": "CA",
                      "postalCode": "90001",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "If the customer ID cannot be associated with an active customer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Retrieve information for a single customer by their Customer ID.</p><p>If no customer with the provided Customer ID is found, a status of 404 (Not Found) will be returned.</p></div>"
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete Customer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "If the customer ID cannot be associated with an active customer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Delete a customer by their Customer ID.</p><p></p><p>If no customer with the provided Customer ID is found, a status of 404 (Not Found) will be returned.</p></div>"
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Update Customer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequestDTO"
              },
              "example": {
                "merchantCustomerRefId": "1234-5678-9101",
                "firstName": "Jonathan",
                "lastName": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequestDTO"
              },
              "example": {
                "merchantCustomerRefId": "1234-5678-9101",
                "firstName": "Jonathan",
                "lastName": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequestDTO"
              },
              "example": {
                "merchantCustomerRefId": "1234-5678-9101",
                "firstName": "Jonathan",
                "lastName": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequestDTO"
              },
              "example": {
                "merchantCustomerRefId": "1234-5678-9101",
                "firstName": "Jonathan",
                "lastName": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "Jonathan",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [
                    {
                      "addressId": 2,
                      "addressLine1": "101 First Street",
                      "addressLine2": null,
                      "city": "Costa Mesa",
                      "state": "CA",
                      "postalCode": "90001",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "Jonathan",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [
                    {
                      "addressId": 2,
                      "addressLine1": "101 First Street",
                      "addressLine2": null,
                      "city": "Costa Mesa",
                      "state": "CA",
                      "postalCode": "90001",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "Jonathan",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [
                    {
                      "addressId": 2,
                      "addressLine1": "101 First Street",
                      "addressLine2": null,
                      "city": "Costa Mesa",
                      "state": "CA",
                      "postalCode": "90001",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "If the customer ID cannot be associated with an active customer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Update a customer by their Customer ID.</p><p></p><p>This action currently accepts any number of the following fields: Merchant Customer Ref ID, first name, and last name.</p><p></p><p>Only fields present in the request will be updated.</p><p></p><p>Upon successful update, a status code of 200 (Success) will be returned.</p><p></p><p>If no existing customer with the provided Customer ID is found, a status of 404 (Not Found) will be returned.</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantCustomerRefId</td><td>Merchant's identifier for the customer</td><td></td></tr><tr><td>FirstName</td><td>Customer's first name</td><td></td></tr><tr><td>LastName</td><td>Customer's last name</td><td></td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Customers/{customerId}/subscriptions": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Subscriptions by Customer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": [
                  {
                    "subscriptionId": 1,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Days",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": {
                      "addressId": 0,
                      "addressLine1": "101 Update Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodIds": [
                      1
                    ],
                    "cancelledAt": null,
                    "billingPlans": [
                      {
                        "subscriptionBillingPlanId": 1,
                        "subscriptionId": 0,
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": -1,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      },
                      {
                        "subscriptionBillingPlanId": 2,
                        "subscriptionId": 0,
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": 12,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      }
                    ],
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  },
                  {
                    "subscriptionId": 2,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Months",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "recycled",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": null,
                    "paymentMethodIds": null,
                    "cancelledAt": null,
                    "billingPlans": null,
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": [
                  {
                    "subscriptionId": 1,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Days",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": {
                      "addressId": 0,
                      "addressLine1": "101 Update Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodIds": [
                      1
                    ],
                    "cancelledAt": null,
                    "billingPlans": [
                      {
                        "subscriptionBillingPlanId": 1,
                        "subscriptionId": 0,
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": -1,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      },
                      {
                        "subscriptionBillingPlanId": 2,
                        "subscriptionId": 0,
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": 12,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      }
                    ],
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  },
                  {
                    "subscriptionId": 2,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Months",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "recycled",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": null,
                    "paymentMethodIds": null,
                    "cancelledAt": null,
                    "billingPlans": null,
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": [
                  {
                    "subscriptionId": 1,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Days",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": {
                      "addressId": 0,
                      "addressLine1": "101 Update Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodIds": [
                      1
                    ],
                    "cancelledAt": null,
                    "billingPlans": [
                      {
                        "subscriptionBillingPlanId": 1,
                        "subscriptionId": 0,
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": -1,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      },
                      {
                        "subscriptionBillingPlanId": 2,
                        "subscriptionId": 0,
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": 12,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      }
                    ],
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  },
                  {
                    "subscriptionId": 2,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Months",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "recycled",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": null,
                    "paymentMethodIds": null,
                    "cancelledAt": null,
                    "billingPlans": null,
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  }
                ]
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "If the customer ID cannot be associated with an active customer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Retrieve subscriptions for a customer (specified by Customer ID) with a status code of 200 (OK).</p><p></p><p>If no subscriptions exist for the customer, a status code of 204 (No Content) will be returned.</p><p></p><p>If the Customer ID cannot be associated with an active customer, a status code of 404 will be returned.</p></div>"
      }
    },
    "/api/Customers/{customerId}/address/{addressId}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete Customer Address",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [],
                  "shippingAddresses": [],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [],
                  "shippingAddresses": [],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [],
                  "shippingAddresses": [],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "If the customer ID or address ID cannot be associated with a corresponding active entity",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Delete an associated address for a given Customer ID.</p><p></p><p>Upon a successful delete, the operation returns the updated Customer object.</p><p></p><p>If no existing customer with the provided Customer ID is found, a status of 404 (Not Found) will be returned.</p></div>"
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Update Address",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressRequestDTO"
              },
              "example": {
                "addressLine1": "101 Update Street",
                "addressLine2": null,
                "city": "Irvine",
                "state": null,
                "postalCode": "92602",
                "phoneNumber": null,
                "email": null,
                "country": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressRequestDTO"
              },
              "example": {
                "addressLine1": "101 Update Street",
                "addressLine2": null,
                "city": "Irvine",
                "state": null,
                "postalCode": "92602",
                "phoneNumber": null,
                "email": null,
                "country": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressRequestDTO"
              },
              "example": {
                "addressLine1": "101 Update Street",
                "addressLine2": null,
                "city": "Irvine",
                "state": null,
                "postalCode": "92602",
                "phoneNumber": null,
                "email": null,
                "country": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressRequestDTO"
              },
              "example": {
                "addressLine1": "101 Update Street",
                "addressLine2": null,
                "city": "Irvine",
                "state": null,
                "postalCode": "92602",
                "phoneNumber": null,
                "email": null,
                "country": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "101 Update Street",
                      "addressLine2": "",
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "101 Update Street",
                      "addressLine2": "",
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 1,
                      "addressLine1": "101 Update Street",
                      "addressLine2": "",
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "If the customer ID cannot be associated with an active customer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Update an address for a given Customer ID and Address ID.</p><p></p><p>An address type (e.g. Shipping, Billing, etc.) may be provided to change the address type for a given address.</p><p></p><p>If an invalid address type is supplied, a status of 400 (Bad Request) will be returned.</p><p></p><p>If no existing, active customer or address with the provided Customer ID and Address ID respectively can be found, a status of 404 (Not Found) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>AddressType</td><td>Usage type of the address (e.g. shipping, billing or tax)</td><td></td></tr><tr><td>AddressLine1</td><td>Address Line 1</td><td></td></tr><tr><td>AddressLine2</td><td>Addresss's supplemental information</td><td>null</td></tr><tr><td>City</td><td>City</td><td></td></tr><tr><td>State</td><td>State</td><td></td></tr><tr><td>PostalCode</td><td>PostalCode</td><td></td></tr><tr><td>Country</td><td>Country</td><td></td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Customers/{customerId}/address": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Add Customer Address",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddressRequestDTO"
              },
              "example": {
                "addressType": "Billing",
                "addressLine1": "100 Main Street",
                "addressLine2": null,
                "city": "Santa Ana",
                "state": "CA",
                "postalCode": "90000",
                "phoneNumber": null,
                "email": null,
                "country": "US"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddressRequestDTO"
              },
              "example": {
                "addressType": "Billing",
                "addressLine1": "100 Main Street",
                "addressLine2": null,
                "city": "Santa Ana",
                "state": "CA",
                "postalCode": "90000",
                "phoneNumber": null,
                "email": null,
                "country": "US"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddressRequestDTO"
              },
              "example": {
                "addressType": "Billing",
                "addressLine1": "100 Main Street",
                "addressLine2": null,
                "city": "Santa Ana",
                "state": "CA",
                "postalCode": "90000",
                "phoneNumber": null,
                "email": null,
                "country": "US"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddressRequestDTO"
              },
              "example": {
                "addressType": "Billing",
                "addressLine1": "100 Main Street",
                "addressLine2": null,
                "city": "Santa Ana",
                "state": "CA",
                "postalCode": "90000",
                "phoneNumber": null,
                "email": null,
                "country": "US"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 0,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 0,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                },
                "example": {
                  "customerId": 1,
                  "merchantCustomerRefId": "1234-5678-9101",
                  "firstName": "John",
                  "lastName": "Doe",
                  "billingAddresses": [
                    {
                      "addressId": 0,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    }
                  ],
                  "shippingAddresses": [],
                  "taxAddresses": [],
                  "subscriptions": []
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "If the customer ID cannot be associated with an active customer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Append an address for a given Customer ID.</p><p></p><p>An address type (e.g. Shipping, Billing, etc.) must be provided.</p><p></p><p>Upon success, the operation will return the updated Customer object.</p><p></p><p>If a duplicate address/address type combination is supplied, a status of 400 (Bad Request) will be returned.</p><p></p><p>If no existing customer with the provided Customer ID is found, a status of 404 (Not Found) will be returned.</p><p></p><p>An address type (e.g. Shipping, Billing, Tax) must be provided. A required set of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>AddressType</td><td>Usage type of the address (e.g. shipping, billing or tax)</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>AddressLine1</td><td>Address Line 1</td><td>null</td></tr><tr><td>AddressLine2</td><td>Addresss's supplemental information</td><td>null</td></tr><tr><td>City</td><td>City</td><td>null</td></tr><tr><td>State</td><td>State</td><td>null</td></tr><tr><td>PostalCode</td><td>PostalCode</td><td>null</td></tr><tr><td>Country</td><td>Country</td><td>null</td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Customers/{customerId}/invoices": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Search Invoices for Customer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "merchantCustomerRefId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantInvoiceRefId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceDTO"
                  }
                },
                "example": [
                  {
                    "invoiceId": 1,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 60.99,
                    "tax": 5.4,
                    "total": 66.39,
                    "billingDate": "08-Aug-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  },
                  {
                    "invoiceId": 2,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 40.99,
                    "tax": 3.6,
                    "total": 43.59,
                    "billingDate": "08-Sep-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceDTO"
                  }
                },
                "example": [
                  {
                    "invoiceId": 1,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 60.99,
                    "tax": 5.4,
                    "total": 66.39,
                    "billingDate": "08-Aug-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  },
                  {
                    "invoiceId": 2,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 40.99,
                    "tax": 3.6,
                    "total": 43.59,
                    "billingDate": "08-Sep-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceDTO"
                  }
                },
                "example": [
                  {
                    "invoiceId": 1,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 60.99,
                    "tax": 5.4,
                    "total": 66.39,
                    "billingDate": "08-Aug-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  },
                  {
                    "invoiceId": 2,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 40.99,
                    "tax": 3.6,
                    "total": 43.59,
                    "billingDate": "08-Sep-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  }
                ]
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Retrieve invoices for a customer given their Customer ID.</p><p></p><p>Additionally, the following optional query string parameters can be applied to narrow the search results: merchantCustomerRefId, merchantInvoiceRefId, startDate, and endDate.</p><p></p><p>Given a start/end date, the invoices' billing date field will be compared to the provided date filter.</p><p></p><p>The Page query parameter represents the page number that could be used to navigate through the dataset. It starts from page 1, and subsequent pages are numbered accordingly. Default value is 1.</p><p>The PageSize query parameter determines the number of records to be displayed on a single page. It could be used to specify how many entries you want to retrieve per page. Default value is 100. Max value is ___.</p><p></p><p>Date filter query parameters should be entered in the form of 'YYYY-MM-dd' Upon finding matching results, the operation will return a status of 200 (OK).</p><p></p><p>If an invalid value is provided for the start or end date query parameter, a status code of 400 (Bad Request) will be returned instead.</p></div>"
      }
    },
    "/api/Customers/{customerId}/installments": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create Installment",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstallmentRequestDTO"
              },
              "example": {
                "merchantInstallmentRefId": "1234-5678-9101",
                "billingFrequency": {
                  "intervalType": 1,
                  "intervalCount": 1
                },
                "startDate": "2025-09-08T00:00:00Z",
                "trialDuration": 0,
                "trialDurationType": 1,
                "taxAddress": {
                  "addressId": null,
                  "addressLine1": "101 Update Street",
                  "addressLine2": null,
                  "city": "Irvine",
                  "state": "CA",
                  "postalCode": "92602",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "installmentItems": [
                  {
                    "name": "Billing Plan 1",
                    "value": 1000.0,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Billing Plan 2",
                    "value": 1200.0,
                    "valueType": "Standard"
                  }
                ],
                "downPayment": 200.0,
                "installmentType": "Amount",
                "installmentValue": 500.0,
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "billingFirstName": "John",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "paymentMethodAuthorizationId": null,
                "paymentMethodId": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstallmentRequestDTO"
              },
              "example": {
                "merchantInstallmentRefId": "1234-5678-9101",
                "billingFrequency": {
                  "intervalType": 1,
                  "intervalCount": 1
                },
                "startDate": "2025-09-08T00:00:00Z",
                "trialDuration": 0,
                "trialDurationType": 1,
                "taxAddress": {
                  "addressId": null,
                  "addressLine1": "101 Update Street",
                  "addressLine2": null,
                  "city": "Irvine",
                  "state": "CA",
                  "postalCode": "92602",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "installmentItems": [
                  {
                    "name": "Billing Plan 1",
                    "value": 1000.0,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Billing Plan 2",
                    "value": 1200.0,
                    "valueType": "Standard"
                  }
                ],
                "downPayment": 200.0,
                "installmentType": "Amount",
                "installmentValue": 500.0,
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "billingFirstName": "John",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "paymentMethodAuthorizationId": null,
                "paymentMethodId": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstallmentRequestDTO"
              },
              "example": {
                "merchantInstallmentRefId": "1234-5678-9101",
                "billingFrequency": {
                  "intervalType": 1,
                  "intervalCount": 1
                },
                "startDate": "2025-09-08T00:00:00Z",
                "trialDuration": 0,
                "trialDurationType": 1,
                "taxAddress": {
                  "addressId": null,
                  "addressLine1": "101 Update Street",
                  "addressLine2": null,
                  "city": "Irvine",
                  "state": "CA",
                  "postalCode": "92602",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "installmentItems": [
                  {
                    "name": "Billing Plan 1",
                    "value": 1000.0,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Billing Plan 2",
                    "value": 1200.0,
                    "valueType": "Standard"
                  }
                ],
                "downPayment": 200.0,
                "installmentType": "Amount",
                "installmentValue": 500.0,
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "billingFirstName": "John",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "paymentMethodAuthorizationId": null,
                "paymentMethodId": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstallmentRequestDTO"
              },
              "example": {
                "merchantInstallmentRefId": "1234-5678-9101",
                "billingFrequency": {
                  "intervalType": 1,
                  "intervalCount": 1
                },
                "startDate": "2025-09-08T00:00:00Z",
                "trialDuration": 0,
                "trialDurationType": 1,
                "taxAddress": {
                  "addressId": null,
                  "addressLine1": "101 Update Street",
                  "addressLine2": null,
                  "city": "Irvine",
                  "state": "CA",
                  "postalCode": "92602",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "installmentItems": [
                  {
                    "name": "Billing Plan 1",
                    "value": 1000.0,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Billing Plan 2",
                    "value": 1200.0,
                    "valueType": "Standard"
                  }
                ],
                "downPayment": 200.0,
                "installmentType": "Amount",
                "installmentValue": 500.0,
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "billingFirstName": "John",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "paymentMethodAuthorizationId": null,
                "paymentMethodId": null
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentDTO"
                },
                "example": {
                  "installmentId": 1,
                  "customerId": 1,
                  "merchantInstallmentRefId": "1234-5678-9101",
                  "billingFrequency": {
                    "intervalType": 1,
                    "intervalCount": 1
                  },
                  "installmentType": "Amount",
                  "installmentValue": 100.5,
                  "downPayment": 800.99,
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": {
                    "addressId": 1,
                    "addressLine1": "112 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "paymentMethodIds": [
                    1
                  ],
                  "installmentItems": [
                    {
                      "installmentItemId": 1,
                      "installmentId": 0,
                      "name": "Installment item 1",
                      "value": 1001.99,
                      "valueType": "Standard"
                    }
                  ],
                  "billingPlans": [
                    {
                      "installmentBillingPlanId": 1,
                      "installmentId": 1,
                      "name": "Installment item 1",
                      "value": 800.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": 0,
                      "cycleCount": 1,
                      "valueType": "Standart"
                    },
                    {
                      "installmentBillingPlanId": 2,
                      "installmentId": 1,
                      "name": "Installment item 1",
                      "value": 100.5,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": 1,
                      "cycleCount": 1,
                      "valueType": "Standart"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentDTO"
                },
                "example": {
                  "installmentId": 1,
                  "customerId": 1,
                  "merchantInstallmentRefId": "1234-5678-9101",
                  "billingFrequency": {
                    "intervalType": 1,
                    "intervalCount": 1
                  },
                  "installmentType": "Amount",
                  "installmentValue": 100.5,
                  "downPayment": 800.99,
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": {
                    "addressId": 1,
                    "addressLine1": "112 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "paymentMethodIds": [
                    1
                  ],
                  "installmentItems": [
                    {
                      "installmentItemId": 1,
                      "installmentId": 0,
                      "name": "Installment item 1",
                      "value": 1001.99,
                      "valueType": "Standard"
                    }
                  ],
                  "billingPlans": [
                    {
                      "installmentBillingPlanId": 1,
                      "installmentId": 1,
                      "name": "Installment item 1",
                      "value": 800.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": 0,
                      "cycleCount": 1,
                      "valueType": "Standart"
                    },
                    {
                      "installmentBillingPlanId": 2,
                      "installmentId": 1,
                      "name": "Installment item 1",
                      "value": 100.5,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": 1,
                      "cycleCount": 1,
                      "valueType": "Standart"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentDTO"
                },
                "example": {
                  "installmentId": 1,
                  "customerId": 1,
                  "merchantInstallmentRefId": "1234-5678-9101",
                  "billingFrequency": {
                    "intervalType": 1,
                    "intervalCount": 1
                  },
                  "installmentType": "Amount",
                  "installmentValue": 100.5,
                  "downPayment": 800.99,
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": {
                    "addressId": 1,
                    "addressLine1": "112 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "paymentMethodIds": [
                    1
                  ],
                  "installmentItems": [
                    {
                      "installmentItemId": 1,
                      "installmentId": 0,
                      "name": "Installment item 1",
                      "value": 1001.99,
                      "valueType": "Standard"
                    }
                  ],
                  "billingPlans": [
                    {
                      "installmentBillingPlanId": 1,
                      "installmentId": 1,
                      "name": "Installment item 1",
                      "value": 800.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": 0,
                      "cycleCount": 1,
                      "valueType": "Standart"
                    },
                    {
                      "installmentBillingPlanId": 2,
                      "installmentId": 1,
                      "name": "Installment item 1",
                      "value": 100.5,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": 1,
                      "cycleCount": 1,
                      "valueType": "Standart"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "PaymentMethodAuthorizationId is being processed in another request."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "PaymentMethodAuthorizationId is being processed in another request."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "PaymentMethodAuthorizationId is being processed in another request."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Create an installment for a customer (specified by Customer ID) with a Billing Frequency Type (Daily, Weekly, Biweekly, Monthly, Bimonthly, Quarterly, Semiannually, Yearly), Installment type (Interval, Amount), Installment value and Installment items. Payment method information (with billing address, billing first name, billing last name, payment method type (credit card, ach, google pay)) or an authorized payment method identifier or payment method identifier must be provided.</p><p></p><p>Optionally, a MerchantInstallmentRefId, TaxAddress, StartDate, TrailDuration and TrailDurationType (the same values as in Billing Frequency Type), DownPayment may be included.</p><p></p><p>Upon successful creation of the installment, a status code of 201 (Created) will be returned.</p><p></p><p>If the Customer ID provided does not exist, a status code of 404 (NotFound) will be returned.</p><p></p><p>If an installment cannot be created with the provided data, a status code of 400 (Bad Request) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>BillingFrequencyType</td><td>How often the subscription should be attempted for billing</td></tr><tr><td>InstallmentItems</td><td>The installment's individual billing items</td></tr><tr><td>InstallmentType</td><td>How the installment period will be divided by amount or number of intervals</td></tr><tr><td>InstallmentValue</td><td>The number of cycles if installment type is Interval or payment amount per settlement cycle if installment type is Amount</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantInstallmentRefId</td><td>Merchant's unique identifier for the installment</td><td>null</td></tr><tr><td>StartDate</td><td>Subscription's start date</td><td>Today</td></tr><tr><td>TrialDuration</td><td>The amount of trial duration time in the unit of TrialDurationType</td><td>0</td></tr><tr><td>TrialDurationType</td><td>The type of trial duration</td><td>Daily</td></tr><tr><td>TaxAddress</td><td>Address to be used for taxation purposes. Possible sets of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode</td><td>null</td></tr><tr><td>DownPayment</td><td>The payment a customer pays upfront</td><td>0</td></tr><tr><td>PaymentMethodAuthorizationId</td><td>Unique identifier for a previously pre-authorized payment method</td><td>null</td></tr><tr><td>PaymentMethod</td><td>The payment method information</td><td>null</td></tr><tr><td>PaymentMethodId</td><td>Unique identifier for the customer's payment information</td><td>null</td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Invoices",
        "parameters": [
          {
            "name": "merchantCustomerRefId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merchantInvoiceRefId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VwInvoice"
                  }
                },
                "example": [
                  {
                    "invoiceId": 1,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 60.99,
                    "tax": 5.4,
                    "total": 66.39,
                    "billingDate": "08-Aug-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  },
                  {
                    "invoiceId": 2,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 40.99,
                    "tax": 3.6,
                    "total": 43.59,
                    "billingDate": "08-Sep-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VwInvoice"
                  }
                },
                "example": [
                  {
                    "invoiceId": 1,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 60.99,
                    "tax": 5.4,
                    "total": 66.39,
                    "billingDate": "08-Aug-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  },
                  {
                    "invoiceId": 2,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 40.99,
                    "tax": 3.6,
                    "total": 43.59,
                    "billingDate": "08-Sep-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VwInvoice"
                  }
                },
                "example": [
                  {
                    "invoiceId": 1,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 60.99,
                    "tax": 5.4,
                    "total": 66.39,
                    "billingDate": "08-Aug-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  },
                  {
                    "invoiceId": 2,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 40.99,
                    "tax": 3.6,
                    "total": 43.59,
                    "billingDate": "08-Sep-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Search for invoices matching the following possible optional criteria: Merchant Customer Ref ID, Merchant Invoice Ref ID, start date, and end date.</p><p></p><p>Given a start/end date, the invoices' billing date field will be compared to the provided date filter.</p><p></p><p>The Page query parameter represents the page number that could be used to navigate through the dataset. It starts from page 1, and subsequent pages are numbered accordingly. Default value is 1.</p><p>The PageSize query parameter determines the number of records to be displayed on a single page. It could be used to specify how many entries you want to retrieve per page. Default value is 100. Max value is ___.</p><p></p><p>Date filter query parameters should be entered in the form of 'YYYY-MM-dd' Upon finding matching results, the operation will return a status of 200 (OK).</p><p></p><p>If an invalid value is provided for the start or end date query parameter, a status code of 400 (Bad Request) will be returned instead.</p><p></p><p>If the provided Customer ID does not exist, a status code of 404 (Not Found) will be returned.</p></div>"
      }
    },
    "/api/Invoices/v{version}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Invoices V1",
        "parameters": [
          {
            "name": "merchantCustomerRefId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingStartDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billingEndDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateStartDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateEndDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastAttemptOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeRawProcessorResponse",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/GetInvoicesV1OrderBy"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceDTO"
                  }
                },
                "example": [
                  {
                    "invoiceId": 1,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 60.99,
                    "tax": 5.4,
                    "total": 66.39,
                    "billingDate": "08-Aug-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  },
                  {
                    "invoiceId": 2,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 40.99,
                    "tax": 3.6,
                    "total": 43.59,
                    "billingDate": "08-Sep-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceDTO"
                  }
                },
                "example": [
                  {
                    "invoiceId": 1,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 60.99,
                    "tax": 5.4,
                    "total": 66.39,
                    "billingDate": "08-Aug-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  },
                  {
                    "invoiceId": 2,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 40.99,
                    "tax": 3.6,
                    "total": 43.59,
                    "billingDate": "08-Sep-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceDTO"
                  }
                },
                "example": [
                  {
                    "invoiceId": 1,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 60.99,
                    "tax": 5.4,
                    "total": 66.39,
                    "billingDate": "08-Aug-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  },
                  {
                    "invoiceId": 2,
                    "customerId": null,
                    "merchantInvoiceRefId": "1234-5678-9101",
                    "binNumber": "411111",
                    "last4Digit": "1111",
                    "invoiceStatus": "Pending",
                    "subtotal": 40.99,
                    "tax": 3.6,
                    "total": 43.59,
                    "billingDate": "08-Sep-25",
                    "merchantLegalName": null,
                    "merchantCustomerRefId": null,
                    "customerFirstName": null,
                    "customerLastName": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoices/{invoiceId}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Invoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "includeRawProcessorResponse",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                },
                "example": {
                  "invoiceId": 1,
                  "parentInvoiceId": null,
                  "customerId": null,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "paymentMethod": {
                    "paymentMethodId": 0,
                    "billingAddressId": 0,
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "merchantPaymentMethodRefId": null,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": null
                  },
                  "invoiceStatus": "Pending",
                  "subtotal": 73.1,
                  "tax": 6.48,
                  "total": 79.58,
                  "billingDate": "08-Sep-25",
                  "merchantLegalName": null,
                  "merchantCustomerRefId": null,
                  "customerFirstName": null,
                  "customerLastName": null,
                  "subscriptionId": null,
                  "installmentId": null,
                  "eligibilityFailReason": null,
                  "merchantSubscriptionRefId": null,
                  "networkTransactionId": null,
                  "currency": null,
                  "invoiceLineItems": [
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 1,
                      "name": "LineItem1",
                      "description": "Line Item 1 Description",
                      "value": 15.3,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 2,
                      "name": "LineItem2",
                      "description": "Line Item 2 Description",
                      "value": 25.5,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 3,
                      "name": "LineItem3",
                      "description": "Line Item 3 Description",
                      "value": 32.3,
                      "valueType": null
                    }
                  ],
                  "invoiceAttempts": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                },
                "example": {
                  "invoiceId": 1,
                  "parentInvoiceId": null,
                  "customerId": null,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "paymentMethod": {
                    "paymentMethodId": 0,
                    "billingAddressId": 0,
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "merchantPaymentMethodRefId": null,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": null
                  },
                  "invoiceStatus": "Pending",
                  "subtotal": 73.1,
                  "tax": 6.48,
                  "total": 79.58,
                  "billingDate": "08-Sep-25",
                  "merchantLegalName": null,
                  "merchantCustomerRefId": null,
                  "customerFirstName": null,
                  "customerLastName": null,
                  "subscriptionId": null,
                  "installmentId": null,
                  "eligibilityFailReason": null,
                  "merchantSubscriptionRefId": null,
                  "networkTransactionId": null,
                  "currency": null,
                  "invoiceLineItems": [
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 1,
                      "name": "LineItem1",
                      "description": "Line Item 1 Description",
                      "value": 15.3,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 2,
                      "name": "LineItem2",
                      "description": "Line Item 2 Description",
                      "value": 25.5,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 3,
                      "name": "LineItem3",
                      "description": "Line Item 3 Description",
                      "value": 32.3,
                      "valueType": null
                    }
                  ],
                  "invoiceAttempts": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                },
                "example": {
                  "invoiceId": 1,
                  "parentInvoiceId": null,
                  "customerId": null,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "paymentMethod": {
                    "paymentMethodId": 0,
                    "billingAddressId": 0,
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "merchantPaymentMethodRefId": null,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": null
                  },
                  "invoiceStatus": "Pending",
                  "subtotal": 73.1,
                  "tax": 6.48,
                  "total": 79.58,
                  "billingDate": "08-Sep-25",
                  "merchantLegalName": null,
                  "merchantCustomerRefId": null,
                  "customerFirstName": null,
                  "customerLastName": null,
                  "subscriptionId": null,
                  "installmentId": null,
                  "eligibilityFailReason": null,
                  "merchantSubscriptionRefId": null,
                  "networkTransactionId": null,
                  "currency": null,
                  "invoiceLineItems": [
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 1,
                      "name": "LineItem1",
                      "description": "Line Item 1 Description",
                      "value": 15.3,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 2,
                      "name": "LineItem2",
                      "description": "Line Item 2 Description",
                      "value": 25.5,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 3,
                      "name": "LineItem3",
                      "description": "Line Item 3 Description",
                      "value": 32.3,
                      "valueType": null
                    }
                  ],
                  "invoiceAttempts": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Retrieve an invoice given an Invoice ID.</p><p></p><p>Upon success, the operation will return a status code of 200 (OK). If no matching invoice can be associated with the given Invoice ID, a status code of 404 (Not Found) will be returned.</p></div>"
      },
      "patch": {
        "tags": [
          "Invoices"
        ],
        "summary": "Update Invoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceRequestDTO"
              },
              "example": {
                "merchantInvoiceRefId": "UpdatedMerchantInvoiceRefId",
                "invoiceStatusType": "Void"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceRequestDTO"
              },
              "example": {
                "merchantInvoiceRefId": "UpdatedMerchantInvoiceRefId",
                "invoiceStatusType": "Void"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceRequestDTO"
              },
              "example": {
                "merchantInvoiceRefId": "UpdatedMerchantInvoiceRefId",
                "invoiceStatusType": "Void"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceRequestDTO"
              },
              "example": {
                "merchantInvoiceRefId": "UpdatedMerchantInvoiceRefId",
                "invoiceStatusType": "Void"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                },
                "example": {
                  "invoiceId": 1,
                  "parentInvoiceId": null,
                  "customerId": null,
                  "merchantInvoiceRefId": "UpdatedMerchantInvoiceRefId",
                  "paymentMethod": null,
                  "invoiceStatus": "Pending",
                  "subtotal": 73.1,
                  "tax": 6.48,
                  "total": 79.58,
                  "billingDate": "08-Sep-25",
                  "merchantLegalName": null,
                  "merchantCustomerRefId": null,
                  "customerFirstName": null,
                  "customerLastName": null,
                  "subscriptionId": null,
                  "installmentId": null,
                  "eligibilityFailReason": null,
                  "merchantSubscriptionRefId": null,
                  "networkTransactionId": null,
                  "currency": null,
                  "invoiceLineItems": [
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 1,
                      "name": "LineItem1",
                      "description": "Line Item 1 Description",
                      "value": 15.3,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 2,
                      "name": "LineItem2",
                      "description": "Line Item 2 Description",
                      "value": 25.5,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 3,
                      "name": "LineItem3",
                      "description": "Line Item 3 Description",
                      "value": 32.3,
                      "valueType": null
                    }
                  ],
                  "invoiceAttempts": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                },
                "example": {
                  "invoiceId": 1,
                  "parentInvoiceId": null,
                  "customerId": null,
                  "merchantInvoiceRefId": "UpdatedMerchantInvoiceRefId",
                  "paymentMethod": null,
                  "invoiceStatus": "Pending",
                  "subtotal": 73.1,
                  "tax": 6.48,
                  "total": 79.58,
                  "billingDate": "08-Sep-25",
                  "merchantLegalName": null,
                  "merchantCustomerRefId": null,
                  "customerFirstName": null,
                  "customerLastName": null,
                  "subscriptionId": null,
                  "installmentId": null,
                  "eligibilityFailReason": null,
                  "merchantSubscriptionRefId": null,
                  "networkTransactionId": null,
                  "currency": null,
                  "invoiceLineItems": [
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 1,
                      "name": "LineItem1",
                      "description": "Line Item 1 Description",
                      "value": 15.3,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 2,
                      "name": "LineItem2",
                      "description": "Line Item 2 Description",
                      "value": 25.5,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 3,
                      "name": "LineItem3",
                      "description": "Line Item 3 Description",
                      "value": 32.3,
                      "valueType": null
                    }
                  ],
                  "invoiceAttempts": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                },
                "example": {
                  "invoiceId": 1,
                  "parentInvoiceId": null,
                  "customerId": null,
                  "merchantInvoiceRefId": "UpdatedMerchantInvoiceRefId",
                  "paymentMethod": null,
                  "invoiceStatus": "Pending",
                  "subtotal": 73.1,
                  "tax": 6.48,
                  "total": 79.58,
                  "billingDate": "08-Sep-25",
                  "merchantLegalName": null,
                  "merchantCustomerRefId": null,
                  "customerFirstName": null,
                  "customerLastName": null,
                  "subscriptionId": null,
                  "installmentId": null,
                  "eligibilityFailReason": null,
                  "merchantSubscriptionRefId": null,
                  "networkTransactionId": null,
                  "currency": null,
                  "invoiceLineItems": [
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 1,
                      "name": "LineItem1",
                      "description": "Line Item 1 Description",
                      "value": 15.3,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 2,
                      "name": "LineItem2",
                      "description": "Line Item 2 Description",
                      "value": 25.5,
                      "valueType": null
                    },
                    {
                      "invoiceId": 1,
                      "invoiceLineItemId": 3,
                      "name": "LineItem3",
                      "description": "Line Item 3 Description",
                      "value": 32.3,
                      "valueType": null
                    }
                  ],
                  "invoiceAttempts": null
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "If the invoice ID cannot be associated with an invoice",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Update an invoice status or/and MerchantInvoiceRefId.</p><p></p><p>Only fields present in the request will be updated.</p><p>Valid statuses: Paid, Void, Pending, Recycle, Noncollectable, Failed, Refund, MerchantPaid, MerchantCancelled, OneTimePaymentPending, PartialRefund, BatchPending, CapturePending, RefundPending, RefundDeclined, RefundFailed, RetryPending</p><p></p><p>Upon success the operation will return a status code of 200 (OK).</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><p></p><p>If an invalid Invoice ID is submitted, a status of 404 (Not Found) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantInvoiceRefId</td><td>Merchant's unique identifier for the invoice to be created</td><td></td></tr><tr><td>InvoiceStatus</td><td>The initial status for the invoice to be created</td><td></td></tr></tbody></table></div></div></div></div></div>"
      },
      "delete": {
        "tags": [
          "Invoices"
        ],
        "summary": "Delete Invoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "If the invoice ID cannot be associated with an invoice",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Delete an invoice (specified by Invoice ID) and its attached invoice line items.</p><p></p><p>Upon success, the operation will return a status code of 200 (OK).</p><p></p><p>If the Invoice ID cannot be associated with an active invoice, a status of 404 will be returned.</p></div>"
      }
    },
    "/api/Invoices/{invoiceId}/refund": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Refund Invoice",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RefundInvoiceRequestDTO"
              },
              "example": {
                "amount": 5.0
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundInvoiceRequestDTO"
              },
              "example": {
                "amount": 5.0
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundInvoiceRequestDTO"
              },
              "example": {
                "amount": 5.0
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefundInvoiceRequestDTO"
              },
              "example": {
                "amount": 5.0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RefundInvoiceResponseDTO"
                },
                "example": {
                  "invoice": {
                    "invoiceId": 2,
                    "parentInvoiceId": 1,
                    "customerId": 1,
                    "merchantInvoiceRefId": "3b986d35-133a-4f95-884c-afa9a154bb5d",
                    "paymentMethod": {
                      "paymentMethodId": 1,
                      "billingAddressId": 1,
                      "billingFirstName": "John",
                      "billingLastName": "Doe",
                      "merchantPaymentMethodRefId": null,
                      "billingAddress": {
                        "addressId": 1,
                        "addressLine1": "1 Default Street",
                        "addressLine2": null,
                        "city": "Los Angeles",
                        "state": "CA",
                        "postalCode": "90210",
                        "phoneNumber": null,
                        "email": null,
                        "country": "US"
                      },
                      "paymentMethodAchDetails": null,
                      "paymentMethodCreditCardDetails": null
                    },
                    "invoiceStatus": "PartialRefund",
                    "subtotal": 10.99,
                    "tax": 0.1,
                    "total": 11.09,
                    "billingDate": "07-Sep-25",
                    "merchantLegalName": "John Doe",
                    "merchantCustomerRefId": "c8d61ee9-5da8-4b33-9f2b-8e9fab2c5985",
                    "customerFirstName": "John",
                    "customerLastName": "Doe",
                    "subscriptionId": null,
                    "installmentId": null,
                    "eligibilityFailReason": null,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "currency": null,
                    "invoiceLineItems": null,
                    "invoiceAttempts": null
                  },
                  "refunds": [
                    {
                      "invoiceAttemptId": 1,
                      "amount": -3.99,
                      "invoiceAttemptStatus": "Success",
                      "invoiceAttemptDate": "2025-09-08T12:50:26.8315889Z",
                      "paymentProcessor": "BridgePay",
                      "processorTransactionId": null,
                      "responseCode": null,
                      "responseMessage": null,
                      "processorRawResponse": null,
                      "paymentMethod": {
                        "paymentMethodId": 0,
                        "billingAddressId": 0,
                        "billingAddress": null,
                        "billingFirstName": null,
                        "billingLastName": null,
                        "merchantPaymentMethodRefId": null,
                        "paymentMethodAchDetails": null,
                        "paymentMethodCreditCardDetails": null
                      },
                      "descriptor": {
                        "subMerchantId": null,
                        "subMerchantName": null,
                        "subMerchantPhone": null,
                        "countryCode": null,
                        "city": null
                      },
                      "eligibilityCheckOrderCode": null,
                      "processorMerchantId": null,
                      "processingMethod": "None"
                    }
                  ],
                  "refundedSubtotal": 5.99,
                  "refundedTax": 0.05,
                  "refundedTotal": 6.04
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundInvoiceResponseDTO"
                },
                "example": {
                  "invoice": {
                    "invoiceId": 2,
                    "parentInvoiceId": 1,
                    "customerId": 1,
                    "merchantInvoiceRefId": "3b986d35-133a-4f95-884c-afa9a154bb5d",
                    "paymentMethod": {
                      "paymentMethodId": 1,
                      "billingAddressId": 1,
                      "billingFirstName": "John",
                      "billingLastName": "Doe",
                      "merchantPaymentMethodRefId": null,
                      "billingAddress": {
                        "addressId": 1,
                        "addressLine1": "1 Default Street",
                        "addressLine2": null,
                        "city": "Los Angeles",
                        "state": "CA",
                        "postalCode": "90210",
                        "phoneNumber": null,
                        "email": null,
                        "country": "US"
                      },
                      "paymentMethodAchDetails": null,
                      "paymentMethodCreditCardDetails": null
                    },
                    "invoiceStatus": "PartialRefund",
                    "subtotal": 10.99,
                    "tax": 0.1,
                    "total": 11.09,
                    "billingDate": "07-Sep-25",
                    "merchantLegalName": "John Doe",
                    "merchantCustomerRefId": "c8d61ee9-5da8-4b33-9f2b-8e9fab2c5985",
                    "customerFirstName": "John",
                    "customerLastName": "Doe",
                    "subscriptionId": null,
                    "installmentId": null,
                    "eligibilityFailReason": null,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "currency": null,
                    "invoiceLineItems": null,
                    "invoiceAttempts": null
                  },
                  "refunds": [
                    {
                      "invoiceAttemptId": 1,
                      "amount": -3.99,
                      "invoiceAttemptStatus": "Success",
                      "invoiceAttemptDate": "2025-09-08T12:50:26.8315889Z",
                      "paymentProcessor": "BridgePay",
                      "processorTransactionId": null,
                      "responseCode": null,
                      "responseMessage": null,
                      "processorRawResponse": null,
                      "paymentMethod": {
                        "paymentMethodId": 0,
                        "billingAddressId": 0,
                        "billingAddress": null,
                        "billingFirstName": null,
                        "billingLastName": null,
                        "merchantPaymentMethodRefId": null,
                        "paymentMethodAchDetails": null,
                        "paymentMethodCreditCardDetails": null
                      },
                      "descriptor": {
                        "subMerchantId": null,
                        "subMerchantName": null,
                        "subMerchantPhone": null,
                        "countryCode": null,
                        "city": null
                      },
                      "eligibilityCheckOrderCode": null,
                      "processorMerchantId": null,
                      "processingMethod": "None"
                    }
                  ],
                  "refundedSubtotal": 5.99,
                  "refundedTax": 0.05,
                  "refundedTotal": 6.04
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundInvoiceResponseDTO"
                },
                "example": {
                  "invoice": {
                    "invoiceId": 2,
                    "parentInvoiceId": 1,
                    "customerId": 1,
                    "merchantInvoiceRefId": "3b986d35-133a-4f95-884c-afa9a154bb5d",
                    "paymentMethod": {
                      "paymentMethodId": 1,
                      "billingAddressId": 1,
                      "billingFirstName": "John",
                      "billingLastName": "Doe",
                      "merchantPaymentMethodRefId": null,
                      "billingAddress": {
                        "addressId": 1,
                        "addressLine1": "1 Default Street",
                        "addressLine2": null,
                        "city": "Los Angeles",
                        "state": "CA",
                        "postalCode": "90210",
                        "phoneNumber": null,
                        "email": null,
                        "country": "US"
                      },
                      "paymentMethodAchDetails": null,
                      "paymentMethodCreditCardDetails": null
                    },
                    "invoiceStatus": "PartialRefund",
                    "subtotal": 10.99,
                    "tax": 0.1,
                    "total": 11.09,
                    "billingDate": "07-Sep-25",
                    "merchantLegalName": "John Doe",
                    "merchantCustomerRefId": "c8d61ee9-5da8-4b33-9f2b-8e9fab2c5985",
                    "customerFirstName": "John",
                    "customerLastName": "Doe",
                    "subscriptionId": null,
                    "installmentId": null,
                    "eligibilityFailReason": null,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "currency": null,
                    "invoiceLineItems": null,
                    "invoiceAttempts": null
                  },
                  "refunds": [
                    {
                      "invoiceAttemptId": 1,
                      "amount": -3.99,
                      "invoiceAttemptStatus": "Success",
                      "invoiceAttemptDate": "2025-09-08T12:50:26.8315889Z",
                      "paymentProcessor": "BridgePay",
                      "processorTransactionId": null,
                      "responseCode": null,
                      "responseMessage": null,
                      "processorRawResponse": null,
                      "paymentMethod": {
                        "paymentMethodId": 0,
                        "billingAddressId": 0,
                        "billingAddress": null,
                        "billingFirstName": null,
                        "billingLastName": null,
                        "merchantPaymentMethodRefId": null,
                        "paymentMethodAchDetails": null,
                        "paymentMethodCreditCardDetails": null
                      },
                      "descriptor": {
                        "subMerchantId": null,
                        "subMerchantName": null,
                        "subMerchantPhone": null,
                        "countryCode": null,
                        "city": null
                      },
                      "eligibilityCheckOrderCode": null,
                      "processorMerchantId": null,
                      "processingMethod": "None"
                    }
                  ],
                  "refundedSubtotal": 5.99,
                  "refundedTax": 0.05,
                  "refundedTotal": 6.04
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "If the invoice ID cannot be associated with an invoice",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Refund the total amount of an invoice (specified by Invoice ID) with empty body, or partial refund by providing a body with the amount.</p><p></p><p>Upon successful refund, the refunds array will contain an item with \"responseMessage\": \"Approved\". You can pay attention also to the invoiceStatus field, if the refund was successful, the status of the invoice will be “Refund” or “PartialRefund\".</p><p></p><p>If the refund amount exceeds the remaining amount for the refund, or an invalid field or value is submitted, then a status code of 400 (Bad Request) will be returned.</p><p></p><p>If the Invoice ID cannot be associated with an active invoice, a status of 404 (Not Found) will be returned.</p><p></p><p>If the refund cannot be completed, the operation will return a status of 422 (Unprocessable Entity).</p><p></p><p>Refunds potentially might not be completed because of an invalid payment method e.g. a deleted payment method or the payment processor rejected the refund.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>RefundAmount</td><td>Dollar amount to be refunded. If no amount is provided, value defaults to invoice total</td><td></td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Invoices/payment": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "One Time Payment Without Subscription",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OneTimePaymentWithoutSubscriptionRequestDTO"
              },
              "example": {
                "customerId": 1,
                "firstName": null,
                "lastName": null,
                "merchantCustomerRefId": null,
                "email": null,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "invoiceLineItems": [
                    {
                      "name": "LineItem1",
                      "description": "Line Item 1 Description",
                      "value": 10.0,
                      "valueType": "Standard"
                    },
                    {
                      "name": "LineItem2",
                      "description": "Line Item 2 Description",
                      "value": 20.0,
                      "valueType": "Standard"
                    },
                    {
                      "name": "LineItem3",
                      "description": "Line Item 3 Description",
                      "value": 30.0,
                      "valueType": "Standard"
                    }
                  ]
                },
                "dynamicDescriptor": {
                  "subMerchantId": null,
                  "subMerchantName": "REV*revolv3",
                  "subMerchantPhone": "00442030513031",
                  "countryCode": null,
                  "city": null
                },
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "paymentMethodAuthorizationId": null,
                "paymentMethodId": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OneTimePaymentWithoutSubscriptionRequestDTO"
              },
              "example": {
                "customerId": 1,
                "firstName": null,
                "lastName": null,
                "merchantCustomerRefId": null,
                "email": null,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "invoiceLineItems": [
                    {
                      "name": "LineItem1",
                      "description": "Line Item 1 Description",
                      "value": 10.0,
                      "valueType": "Standard"
                    },
                    {
                      "name": "LineItem2",
                      "description": "Line Item 2 Description",
                      "value": 20.0,
                      "valueType": "Standard"
                    },
                    {
                      "name": "LineItem3",
                      "description": "Line Item 3 Description",
                      "value": 30.0,
                      "valueType": "Standard"
                    }
                  ]
                },
                "dynamicDescriptor": {
                  "subMerchantId": null,
                  "subMerchantName": "REV*revolv3",
                  "subMerchantPhone": "00442030513031",
                  "countryCode": null,
                  "city": null
                },
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "paymentMethodAuthorizationId": null,
                "paymentMethodId": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OneTimePaymentWithoutSubscriptionRequestDTO"
              },
              "example": {
                "customerId": 1,
                "firstName": null,
                "lastName": null,
                "merchantCustomerRefId": null,
                "email": null,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "invoiceLineItems": [
                    {
                      "name": "LineItem1",
                      "description": "Line Item 1 Description",
                      "value": 10.0,
                      "valueType": "Standard"
                    },
                    {
                      "name": "LineItem2",
                      "description": "Line Item 2 Description",
                      "value": 20.0,
                      "valueType": "Standard"
                    },
                    {
                      "name": "LineItem3",
                      "description": "Line Item 3 Description",
                      "value": 30.0,
                      "valueType": "Standard"
                    }
                  ]
                },
                "dynamicDescriptor": {
                  "subMerchantId": null,
                  "subMerchantName": "REV*revolv3",
                  "subMerchantPhone": "00442030513031",
                  "countryCode": null,
                  "city": null
                },
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "paymentMethodAuthorizationId": null,
                "paymentMethodId": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OneTimePaymentWithoutSubscriptionRequestDTO"
              },
              "example": {
                "customerId": 1,
                "firstName": null,
                "lastName": null,
                "merchantCustomerRefId": null,
                "email": null,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "invoiceLineItems": [
                    {
                      "name": "LineItem1",
                      "description": "Line Item 1 Description",
                      "value": 10.0,
                      "valueType": "Standard"
                    },
                    {
                      "name": "LineItem2",
                      "description": "Line Item 2 Description",
                      "value": 20.0,
                      "valueType": "Standard"
                    },
                    {
                      "name": "LineItem3",
                      "description": "Line Item 3 Description",
                      "value": 30.0,
                      "valueType": "Standard"
                    }
                  ]
                },
                "dynamicDescriptor": {
                  "subMerchantId": null,
                  "subMerchantName": "REV*revolv3",
                  "subMerchantPhone": "00442030513031",
                  "countryCode": null,
                  "city": null
                },
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "paymentMethodAuthorizationId": null,
                "paymentMethodId": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OneTimePaymentWithoutSubscriptionResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "123456789",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approve",
                  "subtotal": 11.97,
                  "taxAmount": 1.2,
                  "total": 13.17,
                  "paymentMethodId": 1
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OneTimePaymentWithoutSubscriptionResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "123456789",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approve",
                  "subtotal": 11.97,
                  "taxAmount": 1.2,
                  "total": 13.17,
                  "paymentMethodId": 1
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OneTimePaymentWithoutSubscriptionResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "123456789",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approve",
                  "subtotal": 11.97,
                  "taxAmount": 1.2,
                  "total": 13.17,
                  "paymentMethodId": 1
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "PaymentMethodAuthorizationId is being processed in another request."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "PaymentMethodAuthorizationId is being processed in another request."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "PaymentMethodAuthorizationId is being processed in another request."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>A one-time payment without a subscription allows you to both authorize and capture funds in a single transaction, as well as capture previously authorized amounts. You can also send a partial capture if needed. The required arguments for this endpoint are customer ID or customer information, payment method details or authorized payment method ID or payment method ID (previously created and tokenized payment method), and an invoice with invoice line items.</p></div>"
      }
    },
    "/api/onboarding/merchant": {
      "post": {
        "tags": [
          "MerchantOnboardings"
        ],
        "summary": "Create Onboarding Merchant",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOnboardingMerchantRequestDTO"
              },
              "example": {
                "company": "ACME, Inc",
                "dbaName": "ACME",
                "country": "US",
                "state": "CA",
                "city": "Santa Ana",
                "postalCode": "92602",
                "timezone": "America/Toronto",
                "address1": "100 Main Street",
                "address2": "Unit 101",
                "url": "www.site.com",
                "firstname": "John",
                "lastname": "Doe",
                "email": "someone@example.com",
                "phoneNumber": "5555555555",
                "defaultOrderProcessingChannelType": 0
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOnboardingMerchantRequestDTO"
              },
              "example": {
                "company": "ACME, Inc",
                "dbaName": "ACME",
                "country": "US",
                "state": "CA",
                "city": "Santa Ana",
                "postalCode": "92602",
                "timezone": "America/Toronto",
                "address1": "100 Main Street",
                "address2": "Unit 101",
                "url": "www.site.com",
                "firstname": "John",
                "lastname": "Doe",
                "email": "someone@example.com",
                "phoneNumber": "5555555555",
                "defaultOrderProcessingChannelType": 0
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOnboardingMerchantRequestDTO"
              },
              "example": {
                "company": "ACME, Inc",
                "dbaName": "ACME",
                "country": "US",
                "state": "CA",
                "city": "Santa Ana",
                "postalCode": "92602",
                "timezone": "America/Toronto",
                "address1": "100 Main Street",
                "address2": "Unit 101",
                "url": "www.site.com",
                "firstname": "John",
                "lastname": "Doe",
                "email": "someone@example.com",
                "phoneNumber": "5555555555",
                "defaultOrderProcessingChannelType": 0
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOnboardingMerchantRequestDTO"
              },
              "example": {
                "company": "ACME, Inc",
                "dbaName": "ACME",
                "country": "US",
                "state": "CA",
                "city": "Santa Ana",
                "postalCode": "92602",
                "timezone": "America/Toronto",
                "address1": "100 Main Street",
                "address2": "Unit 101",
                "url": "www.site.com",
                "firstname": "John",
                "lastname": "Doe",
                "email": "someone@example.com",
                "phoneNumber": "5555555555",
                "defaultOrderProcessingChannelType": 0
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOnboardingMerchantResponse"
                },
                "example": {
                  "merchantId": 1
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOnboardingMerchantResponse"
                },
                "example": {
                  "merchantId": 1
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOnboardingMerchantResponse"
                },
                "example": {
                  "merchantId": 1
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/processors/adyen": {
      "post": {
        "tags": [
          "MerchantOnboardings"
        ],
        "summary": "Create Onboarding Adyen Processor",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertAdyenOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "apiKey": "API_KEY",
                  "merchantAccount": "MERCHANT_ACCOUNT",
                  "accountHolderCode": "33988585",
                  "merchantCategoryCode": "3939",
                  "transactionDescriptor": "Transaction Descriptor",
                  "phone": "5555555555",
                  "accountUpdaterId": 2,
                  "accountCode": "393833"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertAdyenOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "apiKey": "API_KEY",
                  "merchantAccount": "MERCHANT_ACCOUNT",
                  "accountHolderCode": "33988585",
                  "merchantCategoryCode": "3939",
                  "transactionDescriptor": "Transaction Descriptor",
                  "phone": "5555555555",
                  "accountUpdaterId": 2,
                  "accountCode": "393833"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertAdyenOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "apiKey": "API_KEY",
                  "merchantAccount": "MERCHANT_ACCOUNT",
                  "accountHolderCode": "33988585",
                  "merchantCategoryCode": "3939",
                  "transactionDescriptor": "Transaction Descriptor",
                  "phone": "5555555555",
                  "accountUpdaterId": 2,
                  "accountCode": "393833"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertAdyenOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "apiKey": "API_KEY",
                  "merchantAccount": "MERCHANT_ACCOUNT",
                  "accountHolderCode": "33988585",
                  "merchantCategoryCode": "3939",
                  "transactionDescriptor": "Transaction Descriptor",
                  "phone": "5555555555",
                  "accountUpdaterId": 2,
                  "accountCode": "393833"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdyenOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 4,
                  "processorName": "Adyen",
                  "merchantId": 1,
                  "processorFields": {
                    "apiKey": "API_KEY",
                    "merchantAccount": "MERCHANT_ACCOUNT",
                    "accountHolderCode": "33988585",
                    "merchantCategoryCode": "3939",
                    "transactionDescriptor": "Transaction Descriptor",
                    "phone": "5555555555",
                    "accountUpdaterId": 2,
                    "accountCode": "393833"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdyenOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 4,
                  "processorName": "Adyen",
                  "merchantId": 1,
                  "processorFields": {
                    "apiKey": "API_KEY",
                    "merchantAccount": "MERCHANT_ACCOUNT",
                    "accountHolderCode": "33988585",
                    "merchantCategoryCode": "3939",
                    "transactionDescriptor": "Transaction Descriptor",
                    "phone": "5555555555",
                    "accountUpdaterId": 2,
                    "accountCode": "393833"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdyenOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 4,
                  "processorName": "Adyen",
                  "merchantId": 1,
                  "processorFields": {
                    "apiKey": "API_KEY",
                    "merchantAccount": "MERCHANT_ACCOUNT",
                    "accountHolderCode": "33988585",
                    "merchantCategoryCode": "3939",
                    "transactionDescriptor": "Transaction Descriptor",
                    "phone": "5555555555",
                    "accountUpdaterId": 2,
                    "accountCode": "393833"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "The merchant ID cannot be associated with an active merchant",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/processors/worldpay": {
      "post": {
        "tags": [
          "MerchantOnboardings"
        ],
        "summary": "Create Onboarding WorldPay Processor",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertWorldPayOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "username": "nbi33id",
                  "password": "jfj@#kfk",
                  "transactionDescriptor": "Transaction Descriptor",
                  "worldPayMerchantId": "3939393",
                  "accountUpdaterId": 2,
                  "merchantPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertWorldPayOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "username": "nbi33id",
                  "password": "jfj@#kfk",
                  "transactionDescriptor": "Transaction Descriptor",
                  "worldPayMerchantId": "3939393",
                  "accountUpdaterId": 2,
                  "merchantPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertWorldPayOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "username": "nbi33id",
                  "password": "jfj@#kfk",
                  "transactionDescriptor": "Transaction Descriptor",
                  "worldPayMerchantId": "3939393",
                  "accountUpdaterId": 2,
                  "merchantPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertWorldPayOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "username": "nbi33id",
                  "password": "jfj@#kfk",
                  "transactionDescriptor": "Transaction Descriptor",
                  "worldPayMerchantId": "3939393",
                  "accountUpdaterId": 2,
                  "merchantPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorldPayOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 3,
                  "processorName": "WorldPay",
                  "merchantId": 1,
                  "processorFields": {
                    "username": "nbi33id",
                    "password": "jfj@#kfk",
                    "transactionDescriptor": "Transaction Descriptor",
                    "worldPayMerchantId": "3939393",
                    "accountUpdaterId": 2,
                    "merchantPhone": "5555555555"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorldPayOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 3,
                  "processorName": "WorldPay",
                  "merchantId": 1,
                  "processorFields": {
                    "username": "nbi33id",
                    "password": "jfj@#kfk",
                    "transactionDescriptor": "Transaction Descriptor",
                    "worldPayMerchantId": "3939393",
                    "accountUpdaterId": 2,
                    "merchantPhone": "5555555555"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorldPayOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 3,
                  "processorName": "WorldPay",
                  "merchantId": 1,
                  "processorFields": {
                    "username": "nbi33id",
                    "password": "jfj@#kfk",
                    "transactionDescriptor": "Transaction Descriptor",
                    "worldPayMerchantId": "3939393",
                    "accountUpdaterId": 2,
                    "merchantPhone": "5555555555"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "The merchant ID cannot be associated with an active merchant",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/processors/epx": {
      "post": {
        "tags": [
          "MerchantOnboardings"
        ],
        "summary": "Create Onboarding Epx Processor",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertEpxOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "customerNumber": "11111111",
                  "dbaNumber": "Dba_name",
                  "merchantNumber": "3383883",
                  "terminalNumber": "12111",
                  "transactionDescriptor": "Transaction Descriptor",
                  "customerSupportPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertEpxOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "customerNumber": "11111111",
                  "dbaNumber": "Dba_name",
                  "merchantNumber": "3383883",
                  "terminalNumber": "12111",
                  "transactionDescriptor": "Transaction Descriptor",
                  "customerSupportPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertEpxOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "customerNumber": "11111111",
                  "dbaNumber": "Dba_name",
                  "merchantNumber": "3383883",
                  "terminalNumber": "12111",
                  "transactionDescriptor": "Transaction Descriptor",
                  "customerSupportPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertEpxOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "customerNumber": "11111111",
                  "dbaNumber": "Dba_name",
                  "merchantNumber": "3383883",
                  "terminalNumber": "12111",
                  "transactionDescriptor": "Transaction Descriptor",
                  "customerSupportPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EpxOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 7,
                  "processorName": "Epx",
                  "merchantId": 1,
                  "processorFields": {
                    "customerNumber": "11111111",
                    "dbaNumber": "Dba_name",
                    "merchantNumber": "3383883",
                    "terminalNumber": "12111",
                    "transactionDescriptor": "Transaction Descriptor",
                    "customerSupportPhone": "5555555555"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpxOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 7,
                  "processorName": "Epx",
                  "merchantId": 1,
                  "processorFields": {
                    "customerNumber": "11111111",
                    "dbaNumber": "Dba_name",
                    "merchantNumber": "3383883",
                    "terminalNumber": "12111",
                    "transactionDescriptor": "Transaction Descriptor",
                    "customerSupportPhone": "5555555555"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpxOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 7,
                  "processorName": "Epx",
                  "merchantId": 1,
                  "processorFields": {
                    "customerNumber": "11111111",
                    "dbaNumber": "Dba_name",
                    "merchantNumber": "3383883",
                    "terminalNumber": "12111",
                    "transactionDescriptor": "Transaction Descriptor",
                    "customerSupportPhone": "5555555555"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "The merchant ID cannot be associated with an active merchant",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/processors/tsys": {
      "post": {
        "tags": [
          "MerchantOnboardings"
        ],
        "summary": "Create Onboarding Tsys Processor",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertTsysOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "merchantName": "TsysMerchant",
                  "customerSupportPhone": "5555555555",
                  "merchantNumber": "3939393",
                  "vNumber": "66668",
                  "merchantCategoryCode": "3333",
                  "acquirerBin": "333",
                  "agentChainNumber": "353233",
                  "agentBankNumber": "111",
                  "storeNumber": "3333",
                  "terminalNumber": "111111",
                  "locationNumber": "6677",
                  "authenticationCode": "3222"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertTsysOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "merchantName": "TsysMerchant",
                  "customerSupportPhone": "5555555555",
                  "merchantNumber": "3939393",
                  "vNumber": "66668",
                  "merchantCategoryCode": "3333",
                  "acquirerBin": "333",
                  "agentChainNumber": "353233",
                  "agentBankNumber": "111",
                  "storeNumber": "3333",
                  "terminalNumber": "111111",
                  "locationNumber": "6677",
                  "authenticationCode": "3222"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertTsysOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "merchantName": "TsysMerchant",
                  "customerSupportPhone": "5555555555",
                  "merchantNumber": "3939393",
                  "vNumber": "66668",
                  "merchantCategoryCode": "3333",
                  "acquirerBin": "333",
                  "agentChainNumber": "353233",
                  "agentBankNumber": "111",
                  "storeNumber": "3333",
                  "terminalNumber": "111111",
                  "locationNumber": "6677",
                  "authenticationCode": "3222"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertTsysOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "merchantName": "TsysMerchant",
                  "customerSupportPhone": "5555555555",
                  "merchantNumber": "3939393",
                  "vNumber": "66668",
                  "merchantCategoryCode": "3333",
                  "acquirerBin": "333",
                  "agentChainNumber": "353233",
                  "agentBankNumber": "111",
                  "storeNumber": "3333",
                  "terminalNumber": "111111",
                  "locationNumber": "6677",
                  "authenticationCode": "3222"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TsysOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 6,
                  "processorName": "Tsys",
                  "merchantId": 1,
                  "processorFields": {
                    "merchantName": "TsysMerchant",
                    "customerSupportPhone": "5555555555",
                    "merchantNumber": "3939393",
                    "vNumber": "66668",
                    "merchantCategoryCode": "3333",
                    "acquirerBin": "333",
                    "agentChainNumber": "353233",
                    "agentBankNumber": "111",
                    "storeNumber": "3333",
                    "terminalNumber": "111111",
                    "locationNumber": "6677",
                    "authenticationCode": "3222"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TsysOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 6,
                  "processorName": "Tsys",
                  "merchantId": 1,
                  "processorFields": {
                    "merchantName": "TsysMerchant",
                    "customerSupportPhone": "5555555555",
                    "merchantNumber": "3939393",
                    "vNumber": "66668",
                    "merchantCategoryCode": "3333",
                    "acquirerBin": "333",
                    "agentChainNumber": "353233",
                    "agentBankNumber": "111",
                    "storeNumber": "3333",
                    "terminalNumber": "111111",
                    "locationNumber": "6677",
                    "authenticationCode": "3222"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TsysOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 6,
                  "processorName": "Tsys",
                  "merchantId": 1,
                  "processorFields": {
                    "merchantName": "TsysMerchant",
                    "customerSupportPhone": "5555555555",
                    "merchantNumber": "3939393",
                    "vNumber": "66668",
                    "merchantCategoryCode": "3333",
                    "acquirerBin": "333",
                    "agentChainNumber": "353233",
                    "agentBankNumber": "111",
                    "storeNumber": "3333",
                    "terminalNumber": "111111",
                    "locationNumber": "6677",
                    "authenticationCode": "3222"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "The merchant ID cannot be associated with an active merchant",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/processors/nuvei": {
      "post": {
        "tags": [
          "MerchantOnboardings"
        ],
        "summary": "Create Onboarding Nuvei Processor",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertNuveiOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantKey": "dkdk3k3Ak0395kD",
                  "nuveiMerchantId": "959959595959",
                  "merchantSiteId": "23494",
                  "merchantPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertNuveiOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantKey": "dkdk3k3Ak0395kD",
                  "nuveiMerchantId": "959959595959",
                  "merchantSiteId": "23494",
                  "merchantPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertNuveiOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantKey": "dkdk3k3Ak0395kD",
                  "nuveiMerchantId": "959959595959",
                  "merchantSiteId": "23494",
                  "merchantPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertNuveiOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantKey": "dkdk3k3Ak0395kD",
                  "nuveiMerchantId": "959959595959",
                  "merchantSiteId": "23494",
                  "merchantPhone": "5555555555"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NuveiOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 8,
                  "processorName": "Nuvei",
                  "merchantId": 1,
                  "processorFields": {
                    "transactionDescriptor": "Transaction Descriptor",
                    "merchantKey": "dkdk3k3Ak0395kD",
                    "nuveiMerchantId": "959959595959",
                    "merchantSiteId": "23494",
                    "merchantPhone": "5555555555"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NuveiOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 8,
                  "processorName": "Nuvei",
                  "merchantId": 1,
                  "processorFields": {
                    "transactionDescriptor": "Transaction Descriptor",
                    "merchantKey": "dkdk3k3Ak0395kD",
                    "nuveiMerchantId": "959959595959",
                    "merchantSiteId": "23494",
                    "merchantPhone": "5555555555"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NuveiOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 8,
                  "processorName": "Nuvei",
                  "merchantId": 1,
                  "processorFields": {
                    "transactionDescriptor": "Transaction Descriptor",
                    "merchantKey": "dkdk3k3Ak0395kD",
                    "nuveiMerchantId": "959959595959",
                    "merchantSiteId": "23494",
                    "merchantPhone": "5555555555"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "The merchant ID cannot be associated with an active merchant",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/processors/paymentlync": {
      "post": {
        "tags": [
          "MerchantOnboardings"
        ],
        "summary": "Create Onboarding PaymentLync Processor",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertPaymentLyncOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "apiKey": "bXlfYXBpX2tleQo=",
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantPhone": null
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertPaymentLyncOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "apiKey": "bXlfYXBpX2tleQo=",
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantPhone": null
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertPaymentLyncOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "apiKey": "bXlfYXBpX2tleQo=",
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantPhone": null
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertPaymentLyncOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "apiKey": "bXlfYXBpX2tleQo=",
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantPhone": null
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DecryptedPaymentLyncConfigurationMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 10,
                  "processorName": "PaymentLync",
                  "merchantId": 1,
                  "processorFields": {
                    "apiKey": "bXlfYXBpX2tleQo=",
                    "transactionDescriptor": null,
                    "useDynamicDescriptor": false,
                    "payFacPrefix": null,
                    "merchantPhone": null
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecryptedPaymentLyncConfigurationMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 10,
                  "processorName": "PaymentLync",
                  "merchantId": 1,
                  "processorFields": {
                    "apiKey": "bXlfYXBpX2tleQo=",
                    "transactionDescriptor": null,
                    "useDynamicDescriptor": false,
                    "payFacPrefix": null,
                    "merchantPhone": null
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecryptedPaymentLyncConfigurationMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 10,
                  "processorName": "PaymentLync",
                  "merchantId": 1,
                  "processorFields": {
                    "apiKey": "bXlfYXBpX2tleQo=",
                    "transactionDescriptor": null,
                    "useDynamicDescriptor": false,
                    "payFacPrefix": null,
                    "merchantPhone": null
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "The merchant ID cannot be associated with an active merchant",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/processors/paymentech": {
      "post": {
        "tags": [
          "MerchantOnboardings"
        ],
        "summary": "Create Onboarding Paymentech Processor",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertPaymentechOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "paymentechMerchantId": "393928388212",
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantPhone": null,
                  "accountUpdaterId": 1
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertPaymentechOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "paymentechMerchantId": "393928388212",
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantPhone": null,
                  "accountUpdaterId": 1
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertPaymentechOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "paymentechMerchantId": "393928388212",
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantPhone": null,
                  "accountUpdaterId": 1
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertPaymentechOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "paymentechMerchantId": "393928388212",
                  "transactionDescriptor": "Transaction Descriptor",
                  "merchantPhone": null,
                  "accountUpdaterId": 1
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentechOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 9,
                  "processorName": "Paymentech",
                  "merchantId": 1,
                  "processorFields": {
                    "paymentechMerchantId": "393928388212",
                    "transactionDescriptor": "Transaction Descriptor",
                    "merchantPhone": null,
                    "accountUpdaterId": 1
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentechOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 9,
                  "processorName": "Paymentech",
                  "merchantId": 1,
                  "processorFields": {
                    "paymentechMerchantId": "393928388212",
                    "transactionDescriptor": "Transaction Descriptor",
                    "merchantPhone": null,
                    "accountUpdaterId": 1
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentechOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 9,
                  "processorName": "Paymentech",
                  "merchantId": 1,
                  "processorFields": {
                    "paymentechMerchantId": "393928388212",
                    "transactionDescriptor": "Transaction Descriptor",
                    "merchantPhone": null,
                    "accountUpdaterId": 1
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "The merchant ID cannot be associated with an active merchant",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        }
      }
    },
    "/api/onboarding/processors/bridgepay": {
      "post": {
        "tags": [
          "MerchantOnboardings"
        ],
        "summary": "Create Onboarding BridgePay Processor",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertBridgePayOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "username": "Username",
                  "password": "Password",
                  "merchantCode": "12345001",
                  "merchantAccountCode": "54321001"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertBridgePayOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "username": "Username",
                  "password": "Password",
                  "merchantCode": "12345001",
                  "merchantAccountCode": "54321001"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertBridgePayOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "username": "Username",
                  "password": "Password",
                  "merchantCode": "12345001",
                  "merchantAccountCode": "54321001"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertBridgePayOnboardingMerchantProcessorRequestDto"
              },
              "example": {
                "processorFields": {
                  "username": "Username",
                  "password": "Password",
                  "merchantCode": "12345001",
                  "merchantAccountCode": "54321001"
                },
                "currencies": [
                  "USD"
                ],
                "merchantId": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BridgePayOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 1,
                  "processorName": "BridgePay",
                  "merchantId": 1,
                  "processorFields": {
                    "username": "Username",
                    "password": "Password",
                    "merchantCode": "12345001",
                    "merchantAccountCode": "54321001"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BridgePayOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 1,
                  "processorName": "BridgePay",
                  "merchantId": 1,
                  "processorFields": {
                    "username": "Username",
                    "password": "Password",
                    "merchantCode": "12345001",
                    "merchantAccountCode": "54321001"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BridgePayOnboardingConfigurationDtoMerchantProcessorResponseDto"
                },
                "example": {
                  "objectType": "processorConfig",
                  "merchantProcessorId": 1,
                  "processorId": 1,
                  "processorName": "BridgePay",
                  "merchantId": 1,
                  "processorFields": {
                    "username": "Username",
                    "password": "Password",
                    "merchantCode": "12345001",
                    "merchantAccountCode": "54321001"
                  },
                  "currencies": [
                    "USD"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "The merchant ID cannot be associated with an active merchant",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        }
      }
    },
    "/api/PaymentMethod": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Create Payment Method",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodRequestDTO"
              },
              "example": {
                "paymentMethodTypes": [
                  1
                ],
                "billingAddress": {
                  "addressId": null,
                  "addressLine1": "100 Main Street",
                  "addressLine2": null,
                  "city": "Santa Ana",
                  "state": "CA",
                  "postalCode": "90000",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "creditCard": {
                  "paymentAccountNumber": "4111111111111111",
                  "expirationDate": "1025",
                  "securityCode": null,
                  "networkToken": null,
                  "processingMethodType": 5
                },
                "ach": null,
                "googlePay": null,
                "applePay": null,
                "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                "billingFirstName": "John",
                "billingLastName": "Smith",
                "billingFullName": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodRequestDTO"
              },
              "example": {
                "paymentMethodTypes": [
                  1
                ],
                "billingAddress": {
                  "addressId": null,
                  "addressLine1": "100 Main Street",
                  "addressLine2": null,
                  "city": "Santa Ana",
                  "state": "CA",
                  "postalCode": "90000",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "creditCard": {
                  "paymentAccountNumber": "4111111111111111",
                  "expirationDate": "1025",
                  "securityCode": null,
                  "networkToken": null,
                  "processingMethodType": 5
                },
                "ach": null,
                "googlePay": null,
                "applePay": null,
                "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                "billingFirstName": "John",
                "billingLastName": "Smith",
                "billingFullName": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodRequestDTO"
              },
              "example": {
                "paymentMethodTypes": [
                  1
                ],
                "billingAddress": {
                  "addressId": null,
                  "addressLine1": "100 Main Street",
                  "addressLine2": null,
                  "city": "Santa Ana",
                  "state": "CA",
                  "postalCode": "90000",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "creditCard": {
                  "paymentAccountNumber": "4111111111111111",
                  "expirationDate": "1025",
                  "securityCode": null,
                  "networkToken": null,
                  "processingMethodType": 5
                },
                "ach": null,
                "googlePay": null,
                "applePay": null,
                "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                "billingFirstName": "John",
                "billingLastName": "Smith",
                "billingFullName": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodRequestDTO"
              },
              "example": {
                "paymentMethodTypes": [
                  1
                ],
                "billingAddress": {
                  "addressId": null,
                  "addressLine1": "100 Main Street",
                  "addressLine2": null,
                  "city": "Santa Ana",
                  "state": "CA",
                  "postalCode": "90000",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "creditCard": {
                  "paymentAccountNumber": "4111111111111111",
                  "expirationDate": "1025",
                  "securityCode": null,
                  "networkToken": null,
                  "processingMethodType": 5
                },
                "ach": null,
                "googlePay": null,
                "applePay": null,
                "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                "billingFirstName": "John",
                "billingLastName": "Smith",
                "billingFullName": null
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The payment method was successfully created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodDTO"
                },
                "example": {
                  "paymentMethodId": 1,
                  "billingAddressId": 1,
                  "billingAddress": {
                    "addressId": 1,
                    "addressLine1": "123 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "paymentMethodAchDetails": null,
                  "paymentMethodCreditCardDetails": {
                    "binNumber": "411111",
                    "paymentLast4Digit": "1111",
                    "paymentExpirationDate": "1025",
                    "accountUpdateMessage": null,
                    "accountUpdateDateTime": null
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodDTO"
                },
                "example": {
                  "paymentMethodId": 1,
                  "billingAddressId": 1,
                  "billingAddress": {
                    "addressId": 1,
                    "addressLine1": "123 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "paymentMethodAchDetails": null,
                  "paymentMethodCreditCardDetails": {
                    "binNumber": "411111",
                    "paymentLast4Digit": "1111",
                    "paymentExpirationDate": "1025",
                    "accountUpdateMessage": null,
                    "accountUpdateDateTime": null
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodDTO"
                },
                "example": {
                  "paymentMethodId": 1,
                  "billingAddressId": 1,
                  "billingAddress": {
                    "addressId": 1,
                    "addressLine1": "123 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "paymentMethodAchDetails": null,
                  "paymentMethodCreditCardDetails": {
                    "binNumber": "411111",
                    "paymentLast4Digit": "1111",
                    "paymentExpirationDate": "1025",
                    "accountUpdateMessage": null,
                    "accountUpdateDateTime": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "If an invalid field or value is submitted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Create a payment method with a billing address ID, first name, last name, credit card or debit card number and its expiration date (MMYY)</p></div>"
      }
    },
    "/api/PaymentMethod/{paymentMethodId}": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Get Payment Method",
        "parameters": [
          {
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodDTO"
                },
                "example": {
                  "paymentMethodId": 1,
                  "billingAddressId": 1,
                  "billingAddress": {
                    "addressId": 1,
                    "addressLine1": "123 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "paymentMethodAchDetails": null,
                  "paymentMethodCreditCardDetails": {
                    "binNumber": "411111",
                    "paymentLast4Digit": "1111",
                    "paymentExpirationDate": "1025",
                    "accountUpdateMessage": null,
                    "accountUpdateDateTime": null
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodDTO"
                },
                "example": {
                  "paymentMethodId": 1,
                  "billingAddressId": 1,
                  "billingAddress": {
                    "addressId": 1,
                    "addressLine1": "123 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "paymentMethodAchDetails": null,
                  "paymentMethodCreditCardDetails": {
                    "binNumber": "411111",
                    "paymentLast4Digit": "1111",
                    "paymentExpirationDate": "1025",
                    "accountUpdateMessage": null,
                    "accountUpdateDateTime": null
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodDTO"
                },
                "example": {
                  "paymentMethodId": 1,
                  "billingAddressId": 1,
                  "billingAddress": {
                    "addressId": 1,
                    "addressLine1": "123 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "paymentMethodAchDetails": null,
                  "paymentMethodCreditCardDetails": {
                    "binNumber": "411111",
                    "paymentLast4Digit": "1111",
                    "paymentExpirationDate": "1025",
                    "accountUpdateMessage": null,
                    "accountUpdateDateTime": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Retrieve information for a payment method by the ID.</p><p></p><p>If no payment method with the provided PaymentMethod ID is found, a status of 404 (Not Found) will be returned.</p></div>"
      },
      "patch": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Update Payment Method Billing Address",
        "parameters": [
          {
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBillingAddressRequestDTO"
              },
              "example": {
                "billingAddress": {
                  "addressId": null,
                  "addressLine1": "100 Main Street",
                  "addressLine2": null,
                  "city": "Santa Ana",
                  "state": "CA",
                  "postalCode": "90000",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "billingFirstName": "John",
                "billingLastName": null,
                "billingFullName": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBillingAddressRequestDTO"
              },
              "example": {
                "billingAddress": {
                  "addressId": null,
                  "addressLine1": "100 Main Street",
                  "addressLine2": null,
                  "city": "Santa Ana",
                  "state": "CA",
                  "postalCode": "90000",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "billingFirstName": "John",
                "billingLastName": null,
                "billingFullName": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBillingAddressRequestDTO"
              },
              "example": {
                "billingAddress": {
                  "addressId": null,
                  "addressLine1": "100 Main Street",
                  "addressLine2": null,
                  "city": "Santa Ana",
                  "state": "CA",
                  "postalCode": "90000",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "billingFirstName": "John",
                "billingLastName": null,
                "billingFullName": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBillingAddressRequestDTO"
              },
              "example": {
                "billingAddress": {
                  "addressId": null,
                  "addressLine1": "100 Main Street",
                  "addressLine2": null,
                  "city": "Santa Ana",
                  "state": "CA",
                  "postalCode": "90000",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "billingFirstName": "John",
                "billingLastName": null,
                "billingFullName": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodDTO"
                },
                "example": {
                  "paymentMethodId": 1,
                  "billingAddressId": 1,
                  "billingAddress": {
                    "addressId": 1,
                    "addressLine1": "123 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "paymentMethodAchDetails": null,
                  "paymentMethodCreditCardDetails": {
                    "binNumber": "411111",
                    "paymentLast4Digit": "1111",
                    "paymentExpirationDate": "1025",
                    "accountUpdateMessage": null,
                    "accountUpdateDateTime": null
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodDTO"
                },
                "example": {
                  "paymentMethodId": 1,
                  "billingAddressId": 1,
                  "billingAddress": {
                    "addressId": 1,
                    "addressLine1": "123 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "paymentMethodAchDetails": null,
                  "paymentMethodCreditCardDetails": {
                    "binNumber": "411111",
                    "paymentLast4Digit": "1111",
                    "paymentExpirationDate": "1025",
                    "accountUpdateMessage": null,
                    "accountUpdateDateTime": null
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodDTO"
                },
                "example": {
                  "paymentMethodId": 1,
                  "billingAddressId": 1,
                  "billingAddress": {
                    "addressId": 1,
                    "addressLine1": "123 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "paymentMethodAchDetails": null,
                  "paymentMethodCreditCardDetails": {
                    "binNumber": "411111",
                    "paymentLast4Digit": "1111",
                    "paymentExpirationDate": "1025",
                    "accountUpdateMessage": null,
                    "accountUpdateDateTime": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Update a payment method billing address by its PaymentMethodId.</p><p></p><p></p><p></p><p>This action can include any combination of fields. </p><p>Only the fields specified in the request will be updated. AddressId and BillingAddress object are mutually exclusive. </p><p></p><p></p><p></p><p>Upon successful update, a status code of 200 (Success) will be returned. If no existing payment method with the provided PaymentMethodId or existing address with the provided AddressId is found a status code of 404 (Not Found) will be returned. If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p></div>"
      },
      "delete": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Delete Payment Method",
        "parameters": [
          {
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Delete a payment method by its PaymentMethodID.</p><p></p><p>If no payment method with the provided PaymentMethodId is found, a status of 404 (Not Found) will be returned.</p></div>"
      }
    },
    "/api/PaymentMethod/authorize": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Authorize Payment Method",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizePaymentMethodCommandRequestDTO"
              },
              "example": {
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": "",
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "billingFullName": null
                },
                "paymentMethodId": null,
                "amount": 5.0,
                "processorType": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizePaymentMethodCommandRequestDTO"
              },
              "example": {
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": "",
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "billingFullName": null
                },
                "paymentMethodId": null,
                "amount": 5.0,
                "processorType": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizePaymentMethodCommandRequestDTO"
              },
              "example": {
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": "",
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "billingFullName": null
                },
                "paymentMethodId": null,
                "amount": 5.0,
                "processorType": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizePaymentMethodCommandRequestDTO"
              },
              "example": {
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": "",
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "90000",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "John",
                  "billingLastName": "Smith",
                  "billingFullName": null
                },
                "paymentMethodId": null,
                "amount": 5.0,
                "processorType": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizePaymentMethodCommandResponseDTO"
                },
                "example": {
                  "paymentMethodAuthorizationId": 1,
                  "paymentMethod": {
                    "paymentMethodId": 1,
                    "billingAddressId": 1,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "123 Main",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "billingFirstName": "John",
                    "billingLastName": "Smith",
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": {
                      "binNumber": "411111",
                      "paymentLast4Digit": "1111",
                      "paymentExpirationDate": "1025",
                      "accountUpdateMessage": null,
                      "accountUpdateDateTime": null
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizePaymentMethodCommandResponseDTO"
                },
                "example": {
                  "paymentMethodAuthorizationId": 1,
                  "paymentMethod": {
                    "paymentMethodId": 1,
                    "billingAddressId": 1,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "123 Main",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "billingFirstName": "John",
                    "billingLastName": "Smith",
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": {
                      "binNumber": "411111",
                      "paymentLast4Digit": "1111",
                      "paymentExpirationDate": "1025",
                      "accountUpdateMessage": null,
                      "accountUpdateDateTime": null
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizePaymentMethodCommandResponseDTO"
                },
                "example": {
                  "paymentMethodAuthorizationId": 1,
                  "paymentMethod": {
                    "paymentMethodId": 1,
                    "billingAddressId": 1,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "123 Main",
                      "addressLine2": null,
                      "city": "Santa Ana",
                      "state": "CA",
                      "postalCode": "90000",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "billingFirstName": "John",
                    "billingLastName": "Smith",
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": {
                      "binNumber": "411111",
                      "paymentLast4Digit": "1111",
                      "paymentExpirationDate": "1025",
                      "accountUpdateMessage": null,
                      "accountUpdateDateTime": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Authorize a payment method with a specified amount.</p><p>        If PaymentMethod specified, then new payment method will be created and authorized.</p><p>        If PaymentMethodId specified, then existing payment method will be used for authorization.</p><p></p><p>Upon success the operation will return a status code of 200 (OK).</p><p></p><p>If the request contains invalid or insufficient information, the operation will return a status code of 400 (Bad Request).</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>AuthorizationAmount</td><td>Dollar amount to be authorized</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>PaymentMethod</td><td>Payment card information to be used for authorization</td><td>null</td></tr><tr><td>PaymentMethodId</td><td>Unique identifier for the customer's payment information</td><td>null</td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/PaymentMethod/reverse-auth": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Reverse Authorization",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReverseAuthorizationCommandRequestDTO"
              },
              "example": {
                "paymentMethodAuthorizationId": 76,
                "reason": "Merchant requested reversal of auth",
                "amount": 45.0
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReverseAuthorizationCommandRequestDTO"
              },
              "example": {
                "paymentMethodAuthorizationId": 76,
                "reason": "Merchant requested reversal of auth",
                "amount": 45.0
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReverseAuthorizationCommandRequestDTO"
              },
              "example": {
                "paymentMethodAuthorizationId": 76,
                "reason": "Merchant requested reversal of auth",
                "amount": 45.0
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReverseAuthorizationCommandRequestDTO"
              },
              "example": {
                "paymentMethodAuthorizationId": 76,
                "reason": "Merchant requested reversal of auth",
                "amount": 45.0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReverseAuthorizationCommandResponseDTO"
                },
                "example": {
                  "paymentProcessor": 4,
                  "referenceNumber": "5287H65D567",
                  "message": "Approved"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReverseAuthorizationCommandResponseDTO"
                },
                "example": {
                  "paymentProcessor": 4,
                  "referenceNumber": "5287H65D567",
                  "message": "Approved"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReverseAuthorizationCommandResponseDTO"
                },
                "example": {
                  "paymentProcessor": 4,
                  "referenceNumber": "5287H65D567",
                  "message": "Approved"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Reverse the authorization of a payment method. </p><p>Upon successful reversal, the operation will return a status code of 200 (OK).</p><p></p><p>If the PaymentAuthorizationId cannot be associated with an active Payment Authorization, status of 404 (Not Found) will be returned. </p><p> </p><p>If the reversal could not be processed, the operation will return a status of 422 (UnprocessableEntity) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>PaymentMethodAuthorizationId</td><td>Unique identifier for a previously pre-authorized payment method</td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Payments/sale": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Sale With Payment Method Details",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaleWithPaymentMethodRawRequestDTO"
              },
              "example": {
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "customerId": 1,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleWithPaymentMethodRawRequestDTO"
              },
              "example": {
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "customerId": 1,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleWithPaymentMethodRawRequestDTO"
              },
              "example": {
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "customerId": 1,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaleWithPaymentMethodRawRequestDTO"
              },
              "example": {
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "customerId": 1,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "merchantPaymentMethodRefId": null,
                  "networkTransactionId": "043e7d21-2a6f-4d3d-a837-94ba074ad1e0",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approved",
                  "amount": {
                    "currency": "USD",
                    "value": 30.99
                  },
                  "paymentMethodId": 1,
                  "paymentMethodTypeId": 0,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "rawResponse": "Processor raw response (without parsing on revolv3 side)"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "merchantPaymentMethodRefId": null,
                  "networkTransactionId": "043e7d21-2a6f-4d3d-a837-94ba074ad1e0",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approved",
                  "amount": {
                    "currency": "USD",
                    "value": 30.99
                  },
                  "paymentMethodId": 1,
                  "paymentMethodTypeId": 0,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "rawResponse": "Processor raw response (without parsing on revolv3 side)"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "merchantPaymentMethodRefId": null,
                  "networkTransactionId": "043e7d21-2a6f-4d3d-a837-94ba074ad1e0",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approved",
                  "amount": {
                    "currency": "USD",
                    "value": 30.99
                  },
                  "paymentMethodId": 1,
                  "paymentMethodTypeId": 0,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "rawResponse": "Processor raw response (without parsing on revolv3 side)"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Initiate a payment. The payment can be either one-time or it can include data to define the initial transaction in a recurring or installment stream. This allows the networks to tie subsequent transactions back to the original approval, ensuring a seamless and efficient payment process.</p><p></p><p></p><p>The required argument for this endpoint are payment method information and invoice.</p></div>"
      }
    },
    "/api/Payments/sale/{paymentMethodId}": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Sale With Payment Method Id",
        "parameters": [
          {
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaleWithPaymentMethodRequestDTO"
              },
              "example": {
                "customerId": 1,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleWithPaymentMethodRequestDTO"
              },
              "example": {
                "customerId": 1,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleWithPaymentMethodRequestDTO"
              },
              "example": {
                "customerId": 1,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaleWithPaymentMethodRequestDTO"
              },
              "example": {
                "customerId": 1,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": "123456789",
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "merchantPaymentMethodRefId": null,
                  "networkTransactionId": "c413cacb-a64c-43d1-9a39-476f07be2db6",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approved",
                  "amount": {
                    "currency": "USD",
                    "value": 30.99
                  },
                  "paymentMethodId": 1,
                  "paymentMethodTypeId": 0,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "rawResponse": "Processor raw response (without parsing on revolv3 side)"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "merchantPaymentMethodRefId": null,
                  "networkTransactionId": "c413cacb-a64c-43d1-9a39-476f07be2db6",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approved",
                  "amount": {
                    "currency": "USD",
                    "value": 30.99
                  },
                  "paymentMethodId": 1,
                  "paymentMethodTypeId": 0,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "rawResponse": "Processor raw response (without parsing on revolv3 side)"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "merchantPaymentMethodRefId": null,
                  "networkTransactionId": "c413cacb-a64c-43d1-9a39-476f07be2db6",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approved",
                  "amount": {
                    "currency": "USD",
                    "value": 30.99
                  },
                  "paymentMethodId": 1,
                  "paymentMethodTypeId": 0,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "rawResponse": "Processor raw response (without parsing on revolv3 side)"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Initiate a payment. The payment can be either one-time or it can include data to define the initial transaction in a recurring or installment stream. This allows the networks to tie subsequent transactions back to the original approval, ensuring a seamless and efficient payment process.</p><p></p><p></p><p>The required argument for this endpoint are payment method ID and invoice.</p></div>"
      }
    },
    "/api/Payments/capture/{paymentMethodAuthorizationId}": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Capture",
        "parameters": [
          {
            "name": "paymentMethodAuthorizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaleRequestDTO"
              },
              "example": {
                "customerId": null,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": null,
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleRequestDTO"
              },
              "example": {
                "customerId": null,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": null,
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleRequestDTO"
              },
              "example": {
                "customerId": null,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": null,
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaleRequestDTO"
              },
              "example": {
                "customerId": null,
                "includeRawProcessorResponse": false,
                "invoice": {
                  "merchantInvoiceRefId": null,
                  "orderProcessingChannel": null,
                  "amount": {
                    "currency": 1,
                    "value": 30.99
                  }
                },
                "dynamicDescriptor": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "merchantPaymentMethodRefId": null,
                  "networkTransactionId": "43b550ff-094c-43fc-90f8-1d399e3a01d4",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approved",
                  "amount": {
                    "currency": "USD",
                    "value": 30.99
                  },
                  "paymentMethodId": 1,
                  "paymentMethodTypeId": 0,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "rawResponse": "Processor raw response (without parsing on revolv3 side)"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "merchantPaymentMethodRefId": null,
                  "networkTransactionId": "43b550ff-094c-43fc-90f8-1d399e3a01d4",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approved",
                  "amount": {
                    "currency": "USD",
                    "value": 30.99
                  },
                  "paymentMethodId": 1,
                  "paymentMethodTypeId": 0,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "rawResponse": "Processor raw response (without parsing on revolv3 side)"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleResponseDTO"
                },
                "example": {
                  "customerId": 1,
                  "invoiceId": 1,
                  "merchantInvoiceRefId": "1234-5678-9101",
                  "merchantPaymentMethodRefId": null,
                  "networkTransactionId": "43b550ff-094c-43fc-90f8-1d399e3a01d4",
                  "invoiceStatus": "Paid",
                  "invoiceAttemptStatus": "Success",
                  "message": "Approved",
                  "amount": {
                    "currency": "USD",
                    "value": 30.99
                  },
                  "paymentMethodId": 1,
                  "paymentMethodTypeId": 0,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "rawResponse": "Processor raw response (without parsing on revolv3 side)"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Сapture the previous authorization. A capture can be performed on the amount equal to or less than the amount of the referenced authorization.</p><p></p><p></p><p>The required argument for this endpoint are authorized payment method ID and invoice.</p></div>"
      }
    },
    "/api/Payments/authorization": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Authorize With Payment Method Details",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeWithPaymentMethodRawRequestDTO"
              },
              "example": {
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "amount": {
                  "currency": 1,
                  "value": 30.99
                },
                "orderProcessingChannel": null,
                "dynamicDescriptor": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeWithPaymentMethodRawRequestDTO"
              },
              "example": {
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "amount": {
                  "currency": 1,
                  "value": 30.99
                },
                "orderProcessingChannel": null,
                "dynamicDescriptor": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeWithPaymentMethodRawRequestDTO"
              },
              "example": {
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "amount": {
                  "currency": 1,
                  "value": 30.99
                },
                "orderProcessingChannel": null,
                "dynamicDescriptor": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeWithPaymentMethodRawRequestDTO"
              },
              "example": {
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main",
                    "addressLine2": null,
                    "city": "Santa Ana",
                    "state": "CA",
                    "postalCode": "91111",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "Joe",
                  "billingLastName": "Doe",
                  "billingFullName": null
                },
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "amount": {
                  "currency": 1,
                  "value": 30.99
                },
                "orderProcessingChannel": null,
                "dynamicDescriptor": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeResponseDTO"
                },
                "example": {
                  "networkTransactionId": "55c6fa63-7fdb-4a12-bd9b-657b15ab9ab9",
                  "paymentMethodAuthorizationId": 1,
                  "paymentMethod": {
                    "paymentMethodId": 1,
                    "billingAddressId": 1,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "1 Default Street",
                      "addressLine2": null,
                      "city": "Los Angeles",
                      "state": "CA",
                      "postalCode": "90210",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "merchantPaymentMethodRefId": null,
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": null
                  },
                  "paymentProcessor": null,
                  "processorMerchantId": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeResponseDTO"
                },
                "example": {
                  "networkTransactionId": "55c6fa63-7fdb-4a12-bd9b-657b15ab9ab9",
                  "paymentMethodAuthorizationId": 1,
                  "paymentMethod": {
                    "paymentMethodId": 1,
                    "billingAddressId": 1,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "1 Default Street",
                      "addressLine2": null,
                      "city": "Los Angeles",
                      "state": "CA",
                      "postalCode": "90210",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "merchantPaymentMethodRefId": null,
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": null
                  },
                  "paymentProcessor": null,
                  "processorMerchantId": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeResponseDTO"
                },
                "example": {
                  "networkTransactionId": "55c6fa63-7fdb-4a12-bd9b-657b15ab9ab9",
                  "paymentMethodAuthorizationId": 1,
                  "paymentMethod": {
                    "paymentMethodId": 1,
                    "billingAddressId": 1,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "1 Default Street",
                      "addressLine2": null,
                      "city": "Los Angeles",
                      "state": "CA",
                      "postalCode": "90210",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "merchantPaymentMethodRefId": null,
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": null
                  },
                  "paymentProcessor": null,
                  "processorMerchantId": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Authorize a payment method with a specified amount. A new payment method will be created and authorized.</p></div>"
      }
    },
    "/api/Payments/authorization/{paymentMethodId}": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Authorize With Payment Method Id",
        "parameters": [
          {
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeRequestDTO"
              },
              "example": {
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "amount": {
                  "currency": 1,
                  "value": 30.99
                },
                "orderProcessingChannel": null,
                "dynamicDescriptor": null
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeRequestDTO"
              },
              "example": {
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "amount": {
                  "currency": 1,
                  "value": 30.99
                },
                "orderProcessingChannel": null,
                "dynamicDescriptor": null
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeRequestDTO"
              },
              "example": {
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "amount": {
                  "currency": 1,
                  "value": 30.99
                },
                "orderProcessingChannel": null,
                "dynamicDescriptor": null
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeRequestDTO"
              },
              "example": {
                "networkProcessing": {
                  "processingType": 1,
                  "originalNetworkTransactionId": null
                },
                "amount": {
                  "currency": 1,
                  "value": 30.99
                },
                "orderProcessingChannel": null,
                "dynamicDescriptor": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeResponseDTO"
                },
                "example": {
                  "networkTransactionId": "6c27431e-3790-47fc-9ccc-e0d067fc5cd9",
                  "paymentMethodAuthorizationId": 1,
                  "paymentMethod": {
                    "paymentMethodId": 1,
                    "billingAddressId": 1,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "1 Default Street",
                      "addressLine2": null,
                      "city": "Los Angeles",
                      "state": "CA",
                      "postalCode": "90210",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "merchantPaymentMethodRefId": null,
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": null
                  },
                  "paymentProcessor": null,
                  "processorMerchantId": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeResponseDTO"
                },
                "example": {
                  "networkTransactionId": "6c27431e-3790-47fc-9ccc-e0d067fc5cd9",
                  "paymentMethodAuthorizationId": 1,
                  "paymentMethod": {
                    "paymentMethodId": 1,
                    "billingAddressId": 1,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "1 Default Street",
                      "addressLine2": null,
                      "city": "Los Angeles",
                      "state": "CA",
                      "postalCode": "90210",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "merchantPaymentMethodRefId": null,
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": null
                  },
                  "paymentProcessor": null,
                  "processorMerchantId": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeResponseDTO"
                },
                "example": {
                  "networkTransactionId": "6c27431e-3790-47fc-9ccc-e0d067fc5cd9",
                  "paymentMethodAuthorizationId": 1,
                  "paymentMethod": {
                    "paymentMethodId": 1,
                    "billingAddressId": 1,
                    "billingAddress": {
                      "addressId": 1,
                      "addressLine1": "1 Default Street",
                      "addressLine2": null,
                      "city": "Los Angeles",
                      "state": "CA",
                      "postalCode": "90210",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "merchantPaymentMethodRefId": null,
                    "paymentMethodAchDetails": null,
                    "paymentMethodCreditCardDetails": null
                  },
                  "paymentProcessor": null,
                  "processorMerchantId": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to process this operation."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Authorize an existing payment method by its id with a specified amount.</p></div>"
      }
    },
    "/api/Subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscriptions",
        "parameters": [
          {
            "name": "merchantSubscriptionRefId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": [
                  {
                    "subscriptionId": 1,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Days",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": {
                      "addressId": 0,
                      "addressLine1": "101 Update Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodIds": [
                      1
                    ],
                    "cancelledAt": null,
                    "billingPlans": [
                      {
                        "subscriptionBillingPlanId": 1,
                        "subscriptionId": 0,
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": -1,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      },
                      {
                        "subscriptionBillingPlanId": 2,
                        "subscriptionId": 0,
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": 12,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      }
                    ],
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  },
                  {
                    "subscriptionId": 2,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Months",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "recycled",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": null,
                    "paymentMethodIds": null,
                    "cancelledAt": null,
                    "billingPlans": null,
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": [
                  {
                    "subscriptionId": 1,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Days",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": {
                      "addressId": 0,
                      "addressLine1": "101 Update Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodIds": [
                      1
                    ],
                    "cancelledAt": null,
                    "billingPlans": [
                      {
                        "subscriptionBillingPlanId": 1,
                        "subscriptionId": 0,
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": -1,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      },
                      {
                        "subscriptionBillingPlanId": 2,
                        "subscriptionId": 0,
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": 12,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      }
                    ],
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  },
                  {
                    "subscriptionId": 2,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Months",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "recycled",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": null,
                    "paymentMethodIds": null,
                    "cancelledAt": null,
                    "billingPlans": null,
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": [
                  {
                    "subscriptionId": 1,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Days",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": {
                      "addressId": 0,
                      "addressLine1": "101 Update Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodIds": [
                      1
                    ],
                    "cancelledAt": null,
                    "billingPlans": [
                      {
                        "subscriptionBillingPlanId": 1,
                        "subscriptionId": 0,
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": -1,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      },
                      {
                        "subscriptionBillingPlanId": 2,
                        "subscriptionId": 0,
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": 12,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      }
                    ],
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  },
                  {
                    "subscriptionId": 2,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Months",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "recycled",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": null,
                    "paymentMethodIds": null,
                    "cancelledAt": null,
                    "billingPlans": null,
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Retrieve subscriptions for a merchant with a status code of 200 (OK).</p><p></p><p>Additionally, an optional filter Merchant Subscription Ref ID can be used to narrow results.</p><p></p><p>If no matching subscriptions exist for the merchant, a status code of 204 (No Content) will be returned.</p><p></p><p>If the Customer ID cannot be associated with an active subscription, a status code of 204 will be returned.</p><p></p><p>If the provided Customer ID does not exist, a status code of 404 (Not Found) will be returned.</p></div>"
      },
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create Subscription",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequestDTO"
              },
              "example": {
                "paymentMethods": [
                  {
                    "paymentMethodTypes": [
                      1
                    ],
                    "priority": 0,
                    "taxAmount": 2.56,
                    "originalNetworkTransactionId": "102656693ac3ca6e0cdafbfe89ab99",
                    "billingAddress": {
                      "addressId": null,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "creditCard": {
                      "paymentAccountNumber": "4111111111111111",
                      "expirationDate": "1025",
                      "securityCode": null,
                      "networkToken": null,
                      "processingMethodType": 5
                    },
                    "ach": null,
                    "googlePay": null,
                    "applePay": null,
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-44d",
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "billingFullName": null
                  },
                  {
                    "paymentMethodTypes": [
                      1
                    ],
                    "priority": 1,
                    "taxAmount": 1.34,
                    "originalNetworkTransactionId": null,
                    "billingAddress": {
                      "addressId": null,
                      "addressLine1": "100 Main Street 2",
                      "addressLine2": null,
                      "city": "Irvine ",
                      "state": "CA",
                      "postalCode": "9260e",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "creditCard": {
                      "paymentAccountNumber": "5555555555554444",
                      "expirationDate": "03/2030",
                      "securityCode": null,
                      "networkToken": null,
                      "processingMethodType": 5
                    },
                    "ach": null,
                    "googlePay": null,
                    "applePay": null,
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4344",
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "billingFullName": null
                  }
                ],
                "existingPaymentMethod": null,
                "merchantSubscriptionRefId": "1234-5678-9101",
                "billingFrequency": {
                  "intervalType": 1,
                  "intervalCount": 1
                },
                "subscriptionStatusType": "current",
                "subscriptionCancelType": "immediate",
                "startDate": "2025-09-08T00:00:00Z",
                "trialDuration": 0,
                "trialDurationType": 1,
                "taxAddress": {
                  "addressId": null,
                  "addressLine1": "101 Update Street",
                  "addressLine2": null,
                  "city": "Irvine",
                  "state": "CA",
                  "postalCode": "92602",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "includeRawProcessorResponse": false,
                "customer": {
                  "id": 1,
                  "firstName": null,
                  "lastName": null
                },
                "subscriptionBillingPlans": [
                  {
                    "name": "Billing Plan 1",
                    "value": 10.99,
                    "cycleCount": -1,
                    "valueType": "Standard",
                    "startCycleDelay": 0
                  },
                  {
                    "name": "Billing Plan 2",
                    "value": 14.99,
                    "cycleCount": 12,
                    "valueType": "Standard",
                    "startCycleDelay": 1
                  }
                ],
                "recycleImmediatePayment": false,
                "currency": 1
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequestDTO"
              },
              "example": {
                "paymentMethods": [
                  {
                    "paymentMethodTypes": [
                      1
                    ],
                    "priority": 0,
                    "taxAmount": 2.56,
                    "originalNetworkTransactionId": "102656693ac3ca6e0cdafbfe89ab99",
                    "billingAddress": {
                      "addressId": null,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "creditCard": {
                      "paymentAccountNumber": "4111111111111111",
                      "expirationDate": "1025",
                      "securityCode": null,
                      "networkToken": null,
                      "processingMethodType": 5
                    },
                    "ach": null,
                    "googlePay": null,
                    "applePay": null,
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-44d",
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "billingFullName": null
                  },
                  {
                    "paymentMethodTypes": [
                      1
                    ],
                    "priority": 1,
                    "taxAmount": 1.34,
                    "originalNetworkTransactionId": null,
                    "billingAddress": {
                      "addressId": null,
                      "addressLine1": "100 Main Street 2",
                      "addressLine2": null,
                      "city": "Irvine ",
                      "state": "CA",
                      "postalCode": "9260e",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "creditCard": {
                      "paymentAccountNumber": "5555555555554444",
                      "expirationDate": "03/2030",
                      "securityCode": null,
                      "networkToken": null,
                      "processingMethodType": 5
                    },
                    "ach": null,
                    "googlePay": null,
                    "applePay": null,
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4344",
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "billingFullName": null
                  }
                ],
                "existingPaymentMethod": null,
                "merchantSubscriptionRefId": "1234-5678-9101",
                "billingFrequency": {
                  "intervalType": 1,
                  "intervalCount": 1
                },
                "subscriptionStatusType": "current",
                "subscriptionCancelType": "immediate",
                "startDate": "2025-09-08T00:00:00Z",
                "trialDuration": 0,
                "trialDurationType": 1,
                "taxAddress": {
                  "addressId": null,
                  "addressLine1": "101 Update Street",
                  "addressLine2": null,
                  "city": "Irvine",
                  "state": "CA",
                  "postalCode": "92602",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "includeRawProcessorResponse": false,
                "customer": {
                  "id": 1,
                  "firstName": null,
                  "lastName": null
                },
                "subscriptionBillingPlans": [
                  {
                    "name": "Billing Plan 1",
                    "value": 10.99,
                    "cycleCount": -1,
                    "valueType": "Standard",
                    "startCycleDelay": 0
                  },
                  {
                    "name": "Billing Plan 2",
                    "value": 14.99,
                    "cycleCount": 12,
                    "valueType": "Standard",
                    "startCycleDelay": 1
                  }
                ],
                "recycleImmediatePayment": false,
                "currency": 1
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequestDTO"
              },
              "example": {
                "paymentMethods": [
                  {
                    "paymentMethodTypes": [
                      1
                    ],
                    "priority": 0,
                    "taxAmount": 2.56,
                    "originalNetworkTransactionId": "102656693ac3ca6e0cdafbfe89ab99",
                    "billingAddress": {
                      "addressId": null,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "creditCard": {
                      "paymentAccountNumber": "4111111111111111",
                      "expirationDate": "1025",
                      "securityCode": null,
                      "networkToken": null,
                      "processingMethodType": 5
                    },
                    "ach": null,
                    "googlePay": null,
                    "applePay": null,
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-44d",
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "billingFullName": null
                  },
                  {
                    "paymentMethodTypes": [
                      1
                    ],
                    "priority": 1,
                    "taxAmount": 1.34,
                    "originalNetworkTransactionId": null,
                    "billingAddress": {
                      "addressId": null,
                      "addressLine1": "100 Main Street 2",
                      "addressLine2": null,
                      "city": "Irvine ",
                      "state": "CA",
                      "postalCode": "9260e",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "creditCard": {
                      "paymentAccountNumber": "5555555555554444",
                      "expirationDate": "03/2030",
                      "securityCode": null,
                      "networkToken": null,
                      "processingMethodType": 5
                    },
                    "ach": null,
                    "googlePay": null,
                    "applePay": null,
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4344",
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "billingFullName": null
                  }
                ],
                "existingPaymentMethod": null,
                "merchantSubscriptionRefId": "1234-5678-9101",
                "billingFrequency": {
                  "intervalType": 1,
                  "intervalCount": 1
                },
                "subscriptionStatusType": "current",
                "subscriptionCancelType": "immediate",
                "startDate": "2025-09-08T00:00:00Z",
                "trialDuration": 0,
                "trialDurationType": 1,
                "taxAddress": {
                  "addressId": null,
                  "addressLine1": "101 Update Street",
                  "addressLine2": null,
                  "city": "Irvine",
                  "state": "CA",
                  "postalCode": "92602",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "includeRawProcessorResponse": false,
                "customer": {
                  "id": 1,
                  "firstName": null,
                  "lastName": null
                },
                "subscriptionBillingPlans": [
                  {
                    "name": "Billing Plan 1",
                    "value": 10.99,
                    "cycleCount": -1,
                    "valueType": "Standard",
                    "startCycleDelay": 0
                  },
                  {
                    "name": "Billing Plan 2",
                    "value": 14.99,
                    "cycleCount": 12,
                    "valueType": "Standard",
                    "startCycleDelay": 1
                  }
                ],
                "recycleImmediatePayment": false,
                "currency": 1
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequestDTO"
              },
              "example": {
                "paymentMethods": [
                  {
                    "paymentMethodTypes": [
                      1
                    ],
                    "priority": 0,
                    "taxAmount": 2.56,
                    "originalNetworkTransactionId": "102656693ac3ca6e0cdafbfe89ab99",
                    "billingAddress": {
                      "addressId": null,
                      "addressLine1": "100 Main Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "creditCard": {
                      "paymentAccountNumber": "4111111111111111",
                      "expirationDate": "1025",
                      "securityCode": null,
                      "networkToken": null,
                      "processingMethodType": 5
                    },
                    "ach": null,
                    "googlePay": null,
                    "applePay": null,
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-44d",
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "billingFullName": null
                  },
                  {
                    "paymentMethodTypes": [
                      1
                    ],
                    "priority": 1,
                    "taxAmount": 1.34,
                    "originalNetworkTransactionId": null,
                    "billingAddress": {
                      "addressId": null,
                      "addressLine1": "100 Main Street 2",
                      "addressLine2": null,
                      "city": "Irvine ",
                      "state": "CA",
                      "postalCode": "9260e",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "creditCard": {
                      "paymentAccountNumber": "5555555555554444",
                      "expirationDate": "03/2030",
                      "securityCode": null,
                      "networkToken": null,
                      "processingMethodType": 5
                    },
                    "ach": null,
                    "googlePay": null,
                    "applePay": null,
                    "merchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4344",
                    "billingFirstName": "John",
                    "billingLastName": "Doe",
                    "billingFullName": null
                  }
                ],
                "existingPaymentMethod": null,
                "merchantSubscriptionRefId": "1234-5678-9101",
                "billingFrequency": {
                  "intervalType": 1,
                  "intervalCount": 1
                },
                "subscriptionStatusType": "current",
                "subscriptionCancelType": "immediate",
                "startDate": "2025-09-08T00:00:00Z",
                "trialDuration": 0,
                "trialDurationType": 1,
                "taxAddress": {
                  "addressId": null,
                  "addressLine1": "101 Update Street",
                  "addressLine2": null,
                  "city": "Irvine",
                  "state": "CA",
                  "postalCode": "92602",
                  "phoneNumber": null,
                  "email": null,
                  "country": "US"
                },
                "includeRawProcessorResponse": false,
                "customer": {
                  "id": 1,
                  "firstName": null,
                  "lastName": null
                },
                "subscriptionBillingPlans": [
                  {
                    "name": "Billing Plan 1",
                    "value": 10.99,
                    "cycleCount": -1,
                    "valueType": "Standard",
                    "startCycleDelay": 0
                  },
                  {
                    "name": "Billing Plan 2",
                    "value": 14.99,
                    "cycleCount": 12,
                    "valueType": "Standard",
                    "startCycleDelay": 1
                  }
                ],
                "recycleImmediatePayment": false,
                "currency": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "PaymentMethodAuthorizationId is being processed in another request."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "PaymentMethodAuthorizationId is being processed in another request."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "PaymentMethodAuthorizationId is being processed in another request."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Create a subscription for a customer with a Billing Frequency Type (Daily, Weekly, Biweekly, Monthly, Bimonthly, Quarterly, Semiannually, Yearly), subscription Billing Plans items, the payment method objects list with priorities and tax amount (each object with billing address, billing first name, billing last name, payment method type (credit card, ach, google pay)) or existing payment method object with tax amount (with an authorized payment method id or payment method id) must be provided.</p><p></p><p>Optionally, a Merchant Subscription Ref ID, Tax Address, Start Date, Trial Duration, Trial Duration Type (the same values as in Billing Frequency Type), Subscription Status Type (Current, Recycle) and Subscription Cancel Type (Immediate, EndOfCycle) may be included.</p><p></p><p>Upon successful creation of the subscription, a status code of 201 (Created) will be returned.</p><p></p><p>If the provided Customer ID does not exist, a status code of 404 (Not Found) will be returned.</p><p></p><p>If a subscription cannot be created with the provided data, a status code of 400 (Bad Request) will be returned.</p></div>"
      }
    },
    "/api/Subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Retrieve a subscription (specified with Subscription ID) with a status code of 200 (OK).</p><p></p><p>If the Subscription ID cannot be associated with an active subscription, a status code of 404 will be returned.</p></div>"
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Delete Subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Delete a subscription (specified with Subscription ID) with a status code of 200 (OK).</p><p></p><p>If the Subscription ID cannot be associated with an active subscription, a status code of 404 will be returned.</p></div>"
      },
      "patch": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Update Subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionRequestDTO"
              },
              "example": {
                "merchantSubscriptionRefId": "1234-5678-9101",
                "intervalType": 3,
                "intervalCount": 1,
                "subscriptionStatusType": null,
                "subscriptionCancelType": "immediate",
                "nextBillDate": "08-Sep-25"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionRequestDTO"
              },
              "example": {
                "merchantSubscriptionRefId": "1234-5678-9101",
                "intervalType": 3,
                "intervalCount": 1,
                "subscriptionStatusType": null,
                "subscriptionCancelType": "immediate",
                "nextBillDate": "08-Sep-25"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionRequestDTO"
              },
              "example": {
                "merchantSubscriptionRefId": "1234-5678-9101",
                "intervalType": 3,
                "intervalCount": 1,
                "subscriptionStatusType": null,
                "subscriptionCancelType": "immediate",
                "nextBillDate": "08-Sep-25"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionRequestDTO"
              },
              "example": {
                "merchantSubscriptionRefId": "1234-5678-9101",
                "intervalType": 3,
                "intervalCount": 1,
                "subscriptionStatusType": null,
                "subscriptionCancelType": "immediate",
                "nextBillDate": "08-Sep-25"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Update a subscription (specified with Subscription ID) with a status code of 200 (OK).</p><p>This action currently accepts any number of the following fields: Merchant Subscription Ref ID, billing frequency type ID, subscription status ID, and next bill date.</p><p>Only fields present in the request will be updated.</p><p>Upon success, this operation returns a status of 200 (OK).</p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><p>If the Subscription ID cannot be associated with an active subscription, a status code of 404 will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantSubscriptionRefId</td><td>Merchant's unique identifier for the subscription</td><td></td></tr><tr><td>BillingFrequencyType</td><td>How often the subscription should be attempted for billing</td><td></td></tr><tr><td>SubscriptionStatusType</td><td>The subscription's current standing (e.g. Current, Recycle, Cancelled, PendingCancellation)</td><td></td></tr><tr><td>SubscriptionCancelType</td><td>The circumstances under which a subscription must be cancelled (e.g. Immediate or EndOfCycle)</td><td></td></tr><tr><td>NextBillDate</td><td>The subscription's next date of billing attempt</td><td></td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Subscriptions/pan-lookup": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscriptions By PAN",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubscriptionsByPANRequestDTO"
              },
              "example": {
                "paymentAccountNumber": "4111111111111111"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubscriptionsByPANRequestDTO"
              },
              "example": {
                "paymentAccountNumber": "4111111111111111"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubscriptionsByPANRequestDTO"
              },
              "example": {
                "paymentAccountNumber": "4111111111111111"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetSubscriptionsByPANRequestDTO"
              },
              "example": {
                "paymentAccountNumber": "4111111111111111"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": [
                  {
                    "subscriptionId": 1,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Days",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": {
                      "addressId": 0,
                      "addressLine1": "101 Update Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodIds": [
                      1
                    ],
                    "cancelledAt": null,
                    "billingPlans": [
                      {
                        "subscriptionBillingPlanId": 1,
                        "subscriptionId": 0,
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": -1,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      },
                      {
                        "subscriptionBillingPlanId": 2,
                        "subscriptionId": 0,
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": 12,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      }
                    ],
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  },
                  {
                    "subscriptionId": 2,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Months",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "recycled",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": null,
                    "paymentMethodIds": null,
                    "cancelledAt": null,
                    "billingPlans": null,
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  }
                ]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": [
                  {
                    "subscriptionId": 1,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Days",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": {
                      "addressId": 0,
                      "addressLine1": "101 Update Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodIds": [
                      1
                    ],
                    "cancelledAt": null,
                    "billingPlans": [
                      {
                        "subscriptionBillingPlanId": 1,
                        "subscriptionId": 0,
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": -1,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      },
                      {
                        "subscriptionBillingPlanId": 2,
                        "subscriptionId": 0,
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": 12,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      }
                    ],
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  },
                  {
                    "subscriptionId": 2,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Months",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "recycled",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": null,
                    "paymentMethodIds": null,
                    "cancelledAt": null,
                    "billingPlans": null,
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  }
                ]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                },
                "example": [
                  {
                    "subscriptionId": 1,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Days",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "current",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": {
                      "addressId": 0,
                      "addressLine1": "101 Update Street",
                      "addressLine2": null,
                      "city": "Irvine",
                      "state": "CA",
                      "postalCode": "92602",
                      "phoneNumber": null,
                      "email": null,
                      "country": "US"
                    },
                    "paymentMethodIds": [
                      1
                    ],
                    "cancelledAt": null,
                    "billingPlans": [
                      {
                        "subscriptionBillingPlanId": 1,
                        "subscriptionId": 0,
                        "name": "Billing Plan 1",
                        "value": 10.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": -1,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      },
                      {
                        "subscriptionBillingPlanId": 2,
                        "subscriptionId": 0,
                        "name": "Billing Plan 2",
                        "value": 14.99,
                        "startDate": "08-Sep-25",
                        "cyclesRemaining": 12,
                        "cycleCount": 0,
                        "valueType": "Standard"
                      }
                    ],
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  },
                  {
                    "subscriptionId": 2,
                    "customerId": 3,
                    "merchantSubscriptionRefId": null,
                    "networkTransactionId": null,
                    "billingIntervalType": "Months",
                    "billingIntervalCount": 1,
                    "subscriptionStatusType": "recycled",
                    "subscriptionCancelType": null,
                    "initialBillDate": "08-Sep-25",
                    "nextBillDate": "09-Sep-25",
                    "taxAddress": null,
                    "paymentMethodIds": null,
                    "cancelledAt": null,
                    "billingPlans": null,
                    "message": null,
                    "paymentProcessor": null,
                    "processorMerchantId": null,
                    "processorRawResponse": null,
                    "currency": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Get all subscriptions that has the given payment account number as one of its payment methods.</p><p></p><p>Upon success, this operation returns a status of 200 (OK) and a list of subscription objects.</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><p></p><p>If the payment account number is not within the payment methods of any subscription, a status code of 404 will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>PaymentAccountNumber</td><td>Payment card number</td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Subscriptions/{subscriptionId}/payment-method": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Replace Subscription Primary Payment Method",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceSubscriptionPrimaryPaymentMethodRequestDTO"
              },
              "example": {
                "existingPaymentMethod": null,
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "taxAmount": 2.57,
                  "originalNetworkTransactionId": "test-transaction-id",
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "John",
                  "billingLastName": "Doe",
                  "billingFullName": null
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceSubscriptionPrimaryPaymentMethodRequestDTO"
              },
              "example": {
                "existingPaymentMethod": null,
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "taxAmount": 2.57,
                  "originalNetworkTransactionId": "test-transaction-id",
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "John",
                  "billingLastName": "Doe",
                  "billingFullName": null
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceSubscriptionPrimaryPaymentMethodRequestDTO"
              },
              "example": {
                "existingPaymentMethod": null,
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "taxAmount": 2.57,
                  "originalNetworkTransactionId": "test-transaction-id",
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "John",
                  "billingLastName": "Doe",
                  "billingFullName": null
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceSubscriptionPrimaryPaymentMethodRequestDTO"
              },
              "example": {
                "existingPaymentMethod": null,
                "paymentMethod": {
                  "paymentMethodTypes": [
                    1
                  ],
                  "taxAmount": 2.57,
                  "originalNetworkTransactionId": "test-transaction-id",
                  "billingAddress": {
                    "addressId": null,
                    "addressLine1": "100 Main Street",
                    "addressLine2": null,
                    "city": "Irvine",
                    "state": "CA",
                    "postalCode": "92602",
                    "phoneNumber": null,
                    "email": null,
                    "country": "US"
                  },
                  "creditCard": {
                    "paymentAccountNumber": "4111111111111111",
                    "expirationDate": "1025",
                    "securityCode": null,
                    "networkToken": null,
                    "processingMethodType": 5
                  },
                  "ach": null,
                  "googlePay": null,
                  "applePay": null,
                  "merchantPaymentMethodRefId": null,
                  "billingFirstName": "John",
                  "billingLastName": "Doe",
                  "billingFullName": null
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Replace primary payment method for a given subscription.</p><p></p><p>The payment method information or existing payment method info with tax amount (authorized payment method ID or payment method ID) must be provided.</p><p></p><p>Upon success, the operation will return a status code of 200 (OK).</p><p>If an invalid fields or values are submitted, a status of 400 (Bad Request) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>PaymentMethod</td><td>The subscription primary payment information with tax amount, that will be used during the subscription invoice generation</td><td>null</td></tr><tr><td>ExistingPaymentMethod</td><td>The existing payment method info (payment method id or payment method authorization id), tax amount and original network transaction id</td><td>null</td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Subscriptions/{subscriptionId}/address": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Update Subscription Tax Address",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressRequestDTO"
              },
              "example": {
                "addressId": null,
                "addressLine1": "101 Update Street",
                "addressLine2": null,
                "city": "Irvine",
                "state": "CA",
                "postalCode": "92602",
                "phoneNumber": null,
                "email": null,
                "country": "US"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressRequestDTO"
              },
              "example": {
                "addressId": null,
                "addressLine1": "101 Update Street",
                "addressLine2": null,
                "city": "Irvine",
                "state": "CA",
                "postalCode": "92602",
                "phoneNumber": null,
                "email": null,
                "country": "US"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressRequestDTO"
              },
              "example": {
                "addressId": null,
                "addressLine1": "101 Update Street",
                "addressLine2": null,
                "city": "Irvine",
                "state": "CA",
                "postalCode": "92602",
                "phoneNumber": null,
                "email": null,
                "country": "US"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressRequestDTO"
              },
              "example": {
                "addressId": null,
                "addressLine1": "101 Update Street",
                "addressLine2": null,
                "city": "Irvine",
                "state": "CA",
                "postalCode": "92602",
                "phoneNumber": null,
                "email": null,
                "country": "US"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Update the tax address for a given subscription specified with Subscription ID. Upon success, the operation returns a status code of 200 (OK).</p><p></p><p>If using an Address ID in the request, the Address ID must be a currently active address among the subscription's customer's addresses.</p><p></p><p>Providing a set of address details will result in a new address being created. Supplying an empty request will result in setting the tax address to null, effectively removing the existing tax address from the subscription.</p><p></p><p>A required set of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>AddressId</td><td>Unique identifier for a previously created billing address</td><td>null</td></tr><tr><td>AddressLine1</td><td>Address Line 1</td><td>null</td></tr><tr><td>AddressLine2</td><td>Addresss's supplemental information</td><td>null</td></tr><tr><td>City</td><td>City</td><td>null</td></tr><tr><td>State</td><td>State</td><td>null</td></tr><tr><td>PostalCode</td><td>PostalCode</td><td>null</td></tr><tr><td>Country</td><td>Country</td><td>null</td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Subscriptions/{subscriptionId}/billing-plans": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create Subscription Billing Plan",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionBillingPlanRequestDTO"
              },
              "example": {
                "name": "New Billing Plan",
                "value": 5.99,
                "cycleCount": 12,
                "valueType": "Standard",
                "startCycleDelay": 0
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionBillingPlanRequestDTO"
              },
              "example": {
                "name": "New Billing Plan",
                "value": 5.99,
                "cycleCount": 12,
                "valueType": "Standard",
                "startCycleDelay": 0
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionBillingPlanRequestDTO"
              },
              "example": {
                "name": "New Billing Plan",
                "value": 5.99,
                "cycleCount": 12,
                "valueType": "Standard",
                "startCycleDelay": 0
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionBillingPlanRequestDTO"
              },
              "example": {
                "name": "New Billing Plan",
                "value": 5.99,
                "cycleCount": 12,
                "valueType": "Standard",
                "startCycleDelay": 0
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Creates a subscription billing plan for the given Subscription ID.</p><p></p><p>Upon success, the operation returns a status code of 201 (Created).</p><p></p><p>If an invalid field or value is submitted, a status code of 400 (Bad Request) will be returned.</p><p></p><p>If the Subscription ID cannot be associated with an active subscription, a status code of 404 (Not Found) will be returned.</p><p></p><p>Value and ValueType work in conjunction to provide Revolv3 with information on how to act.</p><p></p><p>A subscription billing plan with a Value of 10.00 and a ValueType of 'standard' indicate the subscription should be billed for $10.00.</p><p></p><p>A subscription billing plan with a Value of 10.00 and a ValueType of 'discountPercentage' indicate the subscription should receive a 10% discount.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>BillingPlanName</td><td>The subscription's primary payment information</td></tr><tr><td>BillingPlanValue</td><td>Value for which the billing plan should be executed for</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>BillingPlanCycleCount</td><td>The number of times the billing plan should be billed before expiration</td><td>-1</td></tr><tr><td>BillingPlanValueType</td><td>A qualifier for how the value should be interpreted (e.g. standard, discount, discountPercentage, finalDiscount, or priceOverride)</td><td>Standard</td></tr><tr><td>BillingPlanStartCycleDelay</td><td>Amount of subscription cycle to delay the start date of the billing plan</td><td>0</td></tr></tbody></table></div></div></div></div></div>"
      }
    },
    "/api/Subscriptions/{subscriptionId}/billing-plans/{subscriptionBillingPlanId}": {
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Delete Subscription Billing Plan",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subscriptionBillingPlanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 1,
                  "merchantSubscriptionRefId": "1234-5678-9101",
                  "networkTransactionId": null,
                  "billingIntervalType": "Months",
                  "billingIntervalCount": 1,
                  "subscriptionStatusType": "Current",
                  "subscriptionCancelType": "Immediate",
                  "initialBillDate": "08-Sep-25",
                  "nextBillDate": "08-Oct-25",
                  "taxAddress": null,
                  "paymentMethodIds": [
                    1,
                    2
                  ],
                  "cancelledAt": null,
                  "billingPlans": [
                    {
                      "subscriptionBillingPlanId": 1,
                      "subscriptionId": 0,
                      "name": "Billing Plan 1",
                      "value": 10.99,
                      "startDate": "08-Sep-25",
                      "cyclesRemaining": -1,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    },
                    {
                      "subscriptionBillingPlanId": 2,
                      "subscriptionId": 0,
                      "name": "Billing Plan 2",
                      "value": 14.99,
                      "startDate": "08-Oct-25",
                      "cyclesRemaining": 12,
                      "cycleCount": 0,
                      "valueType": "Standard"
                    }
                  ],
                  "message": null,
                  "paymentProcessor": null,
                  "processorMerchantId": null,
                  "processorRawResponse": null,
                  "currency": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Delete a subscription billing plan for a given Subscription ID and Subscription Billing Plan ID.</p><p></p><p>Upon success, the operation returns a status code of 200 (OK).</p><p></p><p>If the Subscription ID cannot be associated to an active subscription or the Subscription Billing Plan ID cannot be associated to an active billing plan under the subscription, the operation returns a status code of 404 (Not Found).</p></div>"
      }
    },
    "/api/Subscriptions/{subscriptionId}/payment": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create One Time Payment",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOneTimePaymentRequestDTO"
              },
              "example": {
                "merchantInvoiceRefId": "e0792414-596c-4dc5-9877-6ca711b48a0a",
                "invoiceLineItems": [
                  {
                    "name": "Invoice Line Item 1",
                    "description": null,
                    "value": 10.99,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Invoice Line Item 2",
                    "description": null,
                    "value": 11.99,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Invoice Line Item 3",
                    "description": null,
                    "value": 12.99,
                    "valueType": "Standard"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOneTimePaymentRequestDTO"
              },
              "example": {
                "merchantInvoiceRefId": "e0792414-596c-4dc5-9877-6ca711b48a0a",
                "invoiceLineItems": [
                  {
                    "name": "Invoice Line Item 1",
                    "description": null,
                    "value": 10.99,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Invoice Line Item 2",
                    "description": null,
                    "value": 11.99,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Invoice Line Item 3",
                    "description": null,
                    "value": 12.99,
                    "valueType": "Standard"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOneTimePaymentRequestDTO"
              },
              "example": {
                "merchantInvoiceRefId": "e0792414-596c-4dc5-9877-6ca711b48a0a",
                "invoiceLineItems": [
                  {
                    "name": "Invoice Line Item 1",
                    "description": null,
                    "value": 10.99,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Invoice Line Item 2",
                    "description": null,
                    "value": 11.99,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Invoice Line Item 3",
                    "description": null,
                    "value": 12.99,
                    "valueType": "Standard"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOneTimePaymentRequestDTO"
              },
              "example": {
                "merchantInvoiceRefId": "e0792414-596c-4dc5-9877-6ca711b48a0a",
                "invoiceLineItems": [
                  {
                    "name": "Invoice Line Item 1",
                    "description": null,
                    "value": 10.99,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Invoice Line Item 2",
                    "description": null,
                    "value": 11.99,
                    "valueType": "Standard"
                  },
                  {
                    "name": "Invoice Line Item 3",
                    "description": null,
                    "value": 12.99,
                    "valueType": "Standard"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOneTimePaymentResponseDTO"
                },
                "example": {
                  "invoiceId": 1,
                  "merchantInvoiceRefId": null,
                  "invoiceStatus": 0,
                  "invoiceAttemptStatus": "Success",
                  "message": null,
                  "subtotal": 10.99,
                  "taxAmount": 0.98,
                  "total": 11.97,
                  "paymentMethodTypeId": 0,
                  "processorRawResponse": null
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOneTimePaymentResponseDTO"
                },
                "example": {
                  "invoiceId": 1,
                  "merchantInvoiceRefId": null,
                  "invoiceStatus": 0,
                  "invoiceAttemptStatus": "Success",
                  "message": null,
                  "subtotal": 10.99,
                  "taxAmount": 0.98,
                  "total": 11.97,
                  "paymentMethodTypeId": 0,
                  "processorRawResponse": null
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOneTimePaymentResponseDTO"
                },
                "example": {
                  "invoiceId": 1,
                  "merchantInvoiceRefId": null,
                  "invoiceStatus": 0,
                  "invoiceAttemptStatus": "Success",
                  "message": null,
                  "subtotal": 10.99,
                  "taxAmount": 0.98,
                  "total": 11.97,
                  "paymentMethodTypeId": 0,
                  "processorRawResponse": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Create a one time payment for a given subscription ID.</p><p></p><p>Internally, this operation generates an invoice and submits the total amount for payment processing.</p><p></p><p>The given subscription must have an active payment method associate or an error status 404 (NotFound) will be returned.</p><p></p><p>If the payment processing is attempted, regardless of the success or failure of the processing, this operation will return a status code of 200 with the status of the payment processing stated in the InvoiceAttemptStatus field.</p><p></p><p>The invoice ID will be returned as well, allowing users to view the invoice generated.</p></div>"
      }
    },
    "/api/Subscriptions/{subscriptionId}/cancel": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Cancel Subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CancelSubscriptionResponseDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 3,
                  "subscriptionStatus": "Cancelled",
                  "cancelledAt": "2025-09-08T12:50:26.8674638Z"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelSubscriptionResponseDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 3,
                  "subscriptionStatus": "Cancelled",
                  "cancelledAt": "2025-09-08T12:50:26.8674638Z"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelSubscriptionResponseDTO"
                },
                "example": {
                  "subscriptionId": 1,
                  "customerId": 3,
                  "subscriptionStatus": "Cancelled",
                  "cancelledAt": "2025-09-08T12:50:26.8674638Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to perform the request action with provided data."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Attempted to perform an unauthorized operation."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                },
                "example": {
                  "message": "Unable to find an entity with the provided data."
                }
              }
            }
          }
        },
        "description": "<div><p></p><p>Cancel the target subscription.</p></div>"
      }
    }
  },
  "components": {
    "schemas": {
      "AchDTO": {
        "type": "object",
        "properties": {
          "routingNumber": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "type": "string",
            "nullable": true
          },
          "processingMethodType": {
            "$ref": "#/components/schemas/ProcessingMethodTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "AchDetailsDto": {
        "type": "object",
        "properties": {
          "accountNumberLast4Digits": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AchPaymentAccountVerificationDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/CreateAddressRequestDTO"
          },
          "ach": {
            "$ref": "#/components/schemas/AchDTO"
          }
        },
        "additionalProperties": false
      },
      "AchViewDTO": {
        "type": "object",
        "properties": {
          "accountNumberLast4Digits": {
            "type": "string",
            "nullable": true
          },
          "accountNumberLength": {
            "type": "integer",
            "format": "int32"
          },
          "accountType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressDTO": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "format": "int64"
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressRequestDTO": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdyenOnboardingConfigurationDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "merchantAccount": {
            "type": "string",
            "nullable": true
          },
          "accountHolderCode": {
            "type": "string",
            "nullable": true
          },
          "merchantCategoryCode": {
            "type": "string",
            "nullable": true
          },
          "transactionDescriptor": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "accountUpdaterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdyenOnboardingConfigurationDtoMerchantProcessorResponseDto": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "merchantProcessorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorName": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "processorFields": {
            "$ref": "#/components/schemas/AdyenOnboardingConfigurationDto"
          },
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmountDTO": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/CurrencyEnum"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AmountResponseDTO": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplePayDto": {
        "type": "object",
        "properties": {
          "applePayToken": {
            "type": "string",
            "nullable": true
          },
          "processingMethodType": {
            "$ref": "#/components/schemas/ProcessingMethodTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "AuthorizePaymentMethodCommandRequestDTO": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "$ref": "#/components/schemas/CreatePaymentMethodRequestDTO"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "processorType": {
            "$ref": "#/components/schemas/ProcessorType"
          }
        },
        "additionalProperties": false
      },
      "AuthorizePaymentMethodCommandResponseDTO": {
        "type": "object",
        "properties": {
          "paymentMethodAuthorizationId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodDTO"
          }
        },
        "additionalProperties": false
      },
      "AuthorizeRequestDTO": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "networkProcessing": {
            "$ref": "#/components/schemas/NetworkProcessingDTO"
          },
          "amount": {
            "$ref": "#/components/schemas/AmountDTO"
          },
          "orderProcessingChannel": {
            "$ref": "#/components/schemas/OrderProcessingChannelTypeEnum"
          },
          "dynamicDescriptor": {
            "$ref": "#/components/schemas/TransactionDescriptorDTO"
          }
        },
        "additionalProperties": false
      },
      "AuthorizeResponseDTO": {
        "type": "object",
        "properties": {
          "networkTransactionId": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodAuthorizationId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodDTO"
          },
          "paymentProcessor": {
            "type": "string",
            "nullable": true
          },
          "processorMerchantId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthorizeWithPaymentMethodRawRequestDTO": {
        "required": [
          "amount",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "networkProcessing": {
            "$ref": "#/components/schemas/NetworkProcessingDTO"
          },
          "amount": {
            "$ref": "#/components/schemas/AmountDTO"
          },
          "orderProcessingChannel": {
            "$ref": "#/components/schemas/OrderProcessingChannelTypeEnum"
          },
          "dynamicDescriptor": {
            "$ref": "#/components/schemas/TransactionDescriptorDTO"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/CreatePaymentMethodRequestDTO"
          }
        },
        "additionalProperties": false
      },
      "BillInvoiceResponseDTO": {
        "type": "object",
        "properties": {
          "invoiceAttemptStatus": {
            "$ref": "#/components/schemas/InvoiceAttemptStatusEnum"
          },
          "invoiceStatus": {
            "$ref": "#/components/schemas/InvoiceStatusEnum"
          },
          "processorTransactionId": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceAttemptDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceAttemptStatusCode": {
            "type": "string",
            "nullable": true
          },
          "invoiceAttemptResponseCode": {
            "type": "string",
            "nullable": true
          },
          "invoiceAttemptMessage": {
            "type": "string",
            "nullable": true
          },
          "paymentProcessorTransactionId": {
            "type": "string",
            "nullable": true
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionTypeEnum"
          },
          "invoiceAttemptAmount": {
            "type": "number",
            "format": "double"
          },
          "billedViaCapture": {
            "type": "boolean"
          },
          "networkTransactionId": {
            "type": "string",
            "nullable": true
          },
          "originalNetworkTransactionId": {
            "type": "string",
            "nullable": true
          },
          "paymentProcessingType": {
            "$ref": "#/components/schemas/PaymentProcessingTypeEnum"
          },
          "orderCode": {
            "type": "string",
            "nullable": true
          },
          "processorType": {
            "$ref": "#/components/schemas/ProcessorType"
          },
          "rawDataContainer": {
            "$ref": "#/components/schemas/RawDataContainer"
          }
        },
        "additionalProperties": false
      },
      "BillingFrequency": {
        "type": "object",
        "properties": {
          "intervalType": {
            "$ref": "#/components/schemas/IntervalEnum"
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BillingValueTypeEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "BridgePayOnboardingConfigurationDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "merchantCode": {
            "type": "string",
            "nullable": true
          },
          "merchantAccountCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BridgePayOnboardingConfigurationDtoMerchantProcessorResponseDto": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "merchantProcessorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorName": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "processorFields": {
            "$ref": "#/components/schemas/BridgePayOnboardingConfigurationDto"
          },
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelSubscriptionResponseDTO": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "subscriptionStatus": {
            "type": "string",
            "nullable": true
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CheckoutCustomerDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckoutInvoiceAttemptDto": {
        "type": "object",
        "properties": {
          "invoiceAttemptId": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "invoiceAttemptStatus": {
            "type": "string",
            "nullable": true
          },
          "invoiceAttemptDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentProcessor": {
            "type": "string",
            "nullable": true
          },
          "processorTransactionId": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckoutInvoiceDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceStatus": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "billingDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/CheckoutPaymentMethodDto"
          },
          "invoiceAttempts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckoutInvoiceAttemptDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckoutLineItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckoutLineItemRequestDto": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "valueType": {
            "type": "string",
            "default": "Standard",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckoutOneTimePaymentDto": {
        "required": [
          "checkoutLineItems"
        ],
        "type": "object",
        "properties": {
          "checkoutLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckoutLineItemRequestDto"
            }
          }
        },
        "additionalProperties": false
      },
      "CheckoutPaymentMethodDto": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "billingFirstName": {
            "type": "string",
            "nullable": true
          },
          "billingLastName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "achDetails": {
            "$ref": "#/components/schemas/AchDetailsDto"
          },
          "creditCardDetails": {
            "$ref": "#/components/schemas/CreditCardDetailsDto"
          }
        },
        "additionalProperties": false
      },
      "CreateAddressRequestDTO": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCheckoutLinkRequestDto": {
        "required": [
          "oneTimePayment"
        ],
        "type": "object",
        "properties": {
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "oneTimePayment": {
            "$ref": "#/components/schemas/CheckoutOneTimePaymentDto"
          }
        },
        "additionalProperties": false
      },
      "CreateCheckoutLinkResponseDto": {
        "type": "object",
        "properties": {
          "checkoutId": {
            "type": "string",
            "nullable": true
          },
          "checkoutLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCustomerRequestDTO": {
        "type": "object",
        "properties": {
          "merchantCustomerRefId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "billingAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateAddressRequestDTO"
            },
            "nullable": true
          },
          "shippingAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateAddressRequestDTO"
            },
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSubscriptionRequestDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateInstallmentItemRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateInstallmentRequestDTO": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "$ref": "#/components/schemas/CreatePaymentMethodRequestDTO"
          },
          "paymentMethodAuthorizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "merchantInstallmentRefId": {
            "type": "string",
            "nullable": true
          },
          "billingFrequency": {
            "$ref": "#/components/schemas/BillingFrequency"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "trialDuration": {
            "type": "integer",
            "format": "int32"
          },
          "trialDurationType": {
            "$ref": "#/components/schemas/IntervalEnum"
          },
          "taxAddress": {
            "$ref": "#/components/schemas/CreateAddressRequestDTO"
          },
          "installmentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateInstallmentItemRequestDTO"
            },
            "nullable": true
          },
          "downPayment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "installmentType": {
            "type": "string",
            "nullable": true
          },
          "installmentValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateInvoiceForWithoutSubscriptionOneTimePaymentRequestDTO": {
        "required": [
          "invoiceLineItems"
        ],
        "type": "object",
        "properties": {
          "merchantInvoiceRefId": {
            "type": "string",
            "nullable": true
          },
          "invoiceLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateInvoiceLineItemRequestDTO"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateInvoiceLineItemRequestDTO": {
        "required": [
          "name",
          "value",
          "valueType"
        ],
        "type": "object",
        "properties": {
          "invoiceLineItemId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "valueType": {
            "minLength": 1,
            "type": "string"
          },
          "billingValueType": {
            "$ref": "#/components/schemas/BillingValueTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "CreateOnboardingMerchantRequestDTO": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "nullable": true
          },
          "dbaName": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "defaultOrderProcessingChannelType": {
            "$ref": "#/components/schemas/OrderProcessingChannelTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "CreateOnboardingMerchantResponse": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CreateOneTimePaymentRequestDTO": {
        "type": "object",
        "properties": {
          "merchantInvoiceRefId": {
            "type": "string",
            "nullable": true
          },
          "invoiceLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateInvoiceLineItemRequestDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOneTimePaymentResponseDTO": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantInvoiceRefId": {
            "type": "string",
            "nullable": true
          },
          "invoiceStatus": {
            "$ref": "#/components/schemas/InvoiceStatusEnum"
          },
          "invoiceAttemptStatus": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "processorRawResponse": {
            "type": "string",
            "nullable": true
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "billInvoiceResponse": {
            "$ref": "#/components/schemas/BillInvoiceResponseDTO"
          }
        },
        "additionalProperties": false
      },
      "CreatePaymentMethodRequestDTO": {
        "type": "object",
        "properties": {
          "billingFirstName": {
            "type": "string",
            "nullable": true
          },
          "billingLastName": {
            "type": "string",
            "nullable": true
          },
          "billingFullName": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/CreateAddressRequestDTO"
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCardDTO"
          },
          "ach": {
            "$ref": "#/components/schemas/AchDTO"
          },
          "googlePay": {
            "$ref": "#/components/schemas/GooglePayDTO"
          },
          "applePay": {
            "$ref": "#/components/schemas/ApplePayDto"
          },
          "merchantPaymentMethodRefId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSubscriptionBillingPlanRequestDTO": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "cycleCount": {
            "type": "integer",
            "format": "int32",
            "default": -1,
            "nullable": true
          },
          "valueType": {
            "type": "string",
            "default": "Standard",
            "nullable": true
          },
          "startCycleDelay": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSubscriptionCustomerDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSubscriptionPaymentMethodRequestDTO": {
        "type": "object",
        "properties": {
          "billingFirstName": {
            "type": "string",
            "nullable": true
          },
          "billingLastName": {
            "type": "string",
            "nullable": true
          },
          "billingFullName": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/CreateAddressRequestDTO"
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCardDTO"
          },
          "ach": {
            "$ref": "#/components/schemas/AchDTO"
          },
          "googlePay": {
            "$ref": "#/components/schemas/GooglePayDTO"
          },
          "applePay": {
            "$ref": "#/components/schemas/ApplePayDto"
          },
          "merchantPaymentMethodRefId": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "originalNetworkTransactionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSubscriptionRequestDTO": {
        "required": [
          "billingFrequency",
          "customer",
          "subscriptionBillingPlans"
        ],
        "type": "object",
        "properties": {
          "paymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSubscriptionPaymentMethodRequestDTO"
            },
            "nullable": true
          },
          "existingPaymentMethod": {
            "$ref": "#/components/schemas/ExistingPaymentMethodDTO"
          },
          "merchantSubscriptionRefId": {
            "type": "string",
            "nullable": true
          },
          "billingFrequency": {
            "$ref": "#/components/schemas/BillingFrequency"
          },
          "subscriptionStatusType": {
            "type": "string",
            "default": "Current",
            "nullable": true
          },
          "subscriptionCancelType": {
            "type": "string",
            "default": "EndOfCycle",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "default": "Today's date",
            "nullable": true
          },
          "trialDuration": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "nullable": true
          },
          "trialDurationType": {
            "$ref": "#/components/schemas/IntervalEnum"
          },
          "taxAddress": {
            "$ref": "#/components/schemas/CreateAddressRequestDTO"
          },
          "includeRawProcessorResponse": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/CreateSubscriptionCustomerDTO"
          },
          "subscriptionBillingPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSubscriptionBillingPlanRequestDTO"
            }
          },
          "recycleImmediatePayment": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyEnum"
          }
        },
        "additionalProperties": false
      },
      "CreditCardDTO": {
        "type": "object",
        "properties": {
          "paymentAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "nullable": true
          },
          "securityCode": {
            "type": "string",
            "nullable": true
          },
          "networkToken": {
            "$ref": "#/components/schemas/NetworkTokenDto"
          },
          "processingMethodType": {
            "$ref": "#/components/schemas/ProcessingMethodTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "CreditCardDetailsDto": {
        "type": "object",
        "properties": {
          "last4Digit": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreditCardViewDTO": {
        "type": "object",
        "properties": {
          "binNumber": {
            "type": "string",
            "nullable": true
          },
          "paymentLast4Digit": {
            "type": "string",
            "nullable": true
          },
          "paymentExpirationDate": {
            "type": "string",
            "nullable": true
          },
          "accountUpdateMessage": {
            "type": "string",
            "nullable": true
          },
          "accountUpdateDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156
        ],
        "type": "integer",
        "format": "int32"
      },
      "CustomerAddressRequestDTO": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerDTO": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantCustomerRefId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "billingAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDTO"
            },
            "nullable": true
          },
          "shippingAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDTO"
            },
            "nullable": true
          },
          "taxAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDTO"
            },
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecryptedPaymentLyncConfiguration": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "transactionDescriptor": {
            "type": "string",
            "nullable": true
          },
          "useDynamicDescriptor": {
            "type": "boolean"
          },
          "payFacPrefix": {
            "type": "string",
            "nullable": true
          },
          "merchantPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecryptedPaymentLyncConfigurationMerchantProcessorResponseDto": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "merchantProcessorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorName": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "processorFields": {
            "$ref": "#/components/schemas/DecryptedPaymentLyncConfiguration"
          },
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EpxOnboardingConfigurationDto": {
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string",
            "nullable": true
          },
          "dbaNumber": {
            "type": "string",
            "nullable": true
          },
          "merchantNumber": {
            "type": "string",
            "nullable": true
          },
          "terminalNumber": {
            "type": "string",
            "nullable": true
          },
          "transactionDescriptor": {
            "type": "string",
            "nullable": true
          },
          "customerSupportPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EpxOnboardingConfigurationDtoMerchantProcessorResponseDto": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "merchantProcessorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorName": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "processorFields": {
            "$ref": "#/components/schemas/EpxOnboardingConfigurationDto"
          },
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExistingPaymentMethodDTO": {
        "type": "object",
        "properties": {
          "paymentMethodAuthorizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "originalNetworkTransactionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAzureAdTokenRequestDTO": {
        "required": [
          "clientId",
          "clientSecret"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "minLength": 1,
            "type": "string"
          },
          "clientSecret": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetCompleteCheckoutInformationResponseDto": {
        "type": "object",
        "properties": {
          "checkoutId": {
            "type": "string",
            "nullable": true
          },
          "checkoutStatus": {
            "type": "string",
            "nullable": true
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "completionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/CheckoutCustomerDto"
          },
          "invoice": {
            "$ref": "#/components/schemas/CheckoutInvoiceDto"
          },
          "checkoutLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckoutLineItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetCustomersQueryResultDTO": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantCustomerRefId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetInvoicesV1OrderBy": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "GetSubscriptionsByPANRequestDTO": {
        "type": "object",
        "properties": {
          "paymentAccountNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GooglePayDTO": {
        "type": "object",
        "properties": {
          "googlePayPaymentDataResponse": {
            "type": "string",
            "nullable": true
          },
          "processingMethodType": {
            "$ref": "#/components/schemas/ProcessingMethodTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "InstallmentBillingPlanDTO": {
        "type": "object",
        "properties": {
          "installmentBillingPlanId": {
            "type": "integer",
            "format": "int64"
          },
          "installmentId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "cyclesRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "cycleCount": {
            "type": "integer",
            "format": "int32"
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstallmentDTO": {
        "type": "object",
        "properties": {
          "installmentId": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantInstallmentRefId": {
            "type": "string",
            "nullable": true
          },
          "billingFrequency": {
            "$ref": "#/components/schemas/BillingFrequency"
          },
          "installmentType": {
            "type": "string",
            "nullable": true
          },
          "installmentValue": {
            "type": "number",
            "format": "double"
          },
          "downPayment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "initialBillDate": {
            "type": "string",
            "nullable": true
          },
          "nextBillDate": {
            "type": "string",
            "nullable": true
          },
          "taxAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "paymentMethodIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "installmentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstallmentItemDTO"
            },
            "nullable": true
          },
          "billingPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstallmentBillingPlanDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstallmentItemDTO": {
        "type": "object",
        "properties": {
          "installmentItemId": {
            "type": "integer",
            "format": "int64"
          },
          "installmentId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IntervalEnum": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "InvoiceAttemptDTO": {
        "type": "object",
        "properties": {
          "invoiceAttemptId": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "invoiceAttemptStatus": {
            "type": "string",
            "nullable": true
          },
          "invoiceAttemptDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentProcessor": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "processorTransactionId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "responseMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "processorRawResponse": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodDTO"
          },
          "descriptor": {
            "$ref": "#/components/schemas/TransactionDescriptorDto"
          },
          "eligibilityCheckOrderCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "processorMerchantId": {
            "type": "string",
            "nullable": true
          },
          "processingMethod": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceAttemptStatusEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "InvoiceDTO": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "parentInvoiceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "merchantInvoiceRefId": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/InvoicePaymentMethodDTO"
          },
          "invoiceStatus": {
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "billingDate": {
            "type": "string",
            "nullable": true
          },
          "merchantLegalName": {
            "type": "string",
            "nullable": true
          },
          "merchantCustomerRefId": {
            "type": "string",
            "nullable": true
          },
          "customerFirstName": {
            "type": "string",
            "nullable": true
          },
          "customerLastName": {
            "type": "string",
            "nullable": true
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "installmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "eligibilityFailReason": {
            "type": "string",
            "nullable": true
          },
          "merchantSubscriptionRefId": {
            "type": "string",
            "nullable": true
          },
          "networkTransactionId": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "invoiceLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItemDTO"
            },
            "nullable": true
          },
          "invoiceAttempts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceAttemptDTO"
            },
            "nullable": true
          },
          "invoiceStatusEnum": {
            "$ref": "#/components/schemas/InvoiceStatusEnum"
          }
        },
        "additionalProperties": false
      },
      "InvoiceDetailsDTO": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "merchantInvoiceRefId": {
            "type": "string",
            "nullable": true
          },
          "orderProcessingChannel": {
            "$ref": "#/components/schemas/OrderProcessingChannelTypeEnum"
          },
          "amount": {
            "$ref": "#/components/schemas/AmountDTO"
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineItemDTO": {
        "type": "object",
        "properties": {
          "invoiceLineItemId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "billingValueType": {
            "$ref": "#/components/schemas/BillingValueTypeEnum"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "InvoicePaymentMethodDTO": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "billingAddressId": {
            "type": "integer",
            "format": "int64"
          },
          "billingFirstName": {
            "type": "string",
            "nullable": true
          },
          "billingLastName": {
            "type": "string",
            "nullable": true
          },
          "merchantPaymentMethodRefId": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "paymentMethodAchDetails": {
            "$ref": "#/components/schemas/AchViewDTO"
          },
          "paymentMethodCreditCardDetails": {
            "$ref": "#/components/schemas/CreditCardViewDTO"
          }
        },
        "additionalProperties": false
      },
      "InvoiceStatusEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19
        ],
        "type": "integer",
        "format": "int32"
      },
      "NetworkProcessingDTO": {
        "type": "object",
        "properties": {
          "processingType": {
            "$ref": "#/components/schemas/PaymentProcessingTypeEnum"
          },
          "originalNetworkTransactionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NetworkTokenDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "cryptogram": {
            "type": "string",
            "nullable": true
          },
          "electronicCommerceIndicator": {
            "type": "string",
            "nullable": true
          },
          "paymentAccountReference": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "nullable": true
          },
          "processingMethodType": {
            "$ref": "#/components/schemas/ProcessingMethodTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "NuveiOnboardingConfigurationDto": {
        "type": "object",
        "properties": {
          "transactionDescriptor": {
            "type": "string",
            "nullable": true
          },
          "merchantKey": {
            "type": "string",
            "nullable": true
          },
          "nuveiMerchantId": {
            "type": "string",
            "nullable": true
          },
          "merchantSiteId": {
            "type": "string",
            "nullable": true
          },
          "merchantPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NuveiOnboardingConfigurationDtoMerchantProcessorResponseDto": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "merchantProcessorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorName": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "processorFields": {
            "$ref": "#/components/schemas/NuveiOnboardingConfigurationDto"
          },
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OneTimePaymentWithoutSubscriptionRequestDTO": {
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "paymentMethod": {
            "$ref": "#/components/schemas/CreatePaymentMethodRequestDTO"
          },
          "paymentMethodAuthorizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "merchantCustomerRefId": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "invoice": {
            "$ref": "#/components/schemas/CreateInvoiceForWithoutSubscriptionOneTimePaymentRequestDTO"
          },
          "dynamicDescriptor": {
            "$ref": "#/components/schemas/TransactionDescriptorDTO"
          }
        },
        "additionalProperties": false
      },
      "OneTimePaymentWithoutSubscriptionResponseDTO": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantInvoiceRefId": {
            "type": "string",
            "nullable": true
          },
          "invoiceStatus": {
            "type": "string",
            "nullable": true
          },
          "invoiceAttemptStatus": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentMethodTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderProcessingChannelTypeEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentLyncOnboardingConfigurationDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "transactionDescriptor": {
            "type": "string",
            "nullable": true
          },
          "merchantPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodDTO": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "billingAddressId": {
            "type": "integer",
            "format": "int64"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "billingFirstName": {
            "type": "string",
            "nullable": true
          },
          "billingLastName": {
            "type": "string",
            "nullable": true
          },
          "merchantPaymentMethodRefId": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodAchDetails": {
            "$ref": "#/components/schemas/AchViewDTO"
          },
          "paymentMethodCreditCardDetails": {
            "$ref": "#/components/schemas/CreditCardViewDTO"
          }
        },
        "additionalProperties": false
      },
      "PaymentProcessingTypeEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentechOnboardingConfigurationDto": {
        "type": "object",
        "properties": {
          "paymentechMerchantId": {
            "type": "string",
            "nullable": true
          },
          "transactionDescriptor": {
            "type": "string",
            "nullable": true
          },
          "merchantPhone": {
            "type": "string",
            "nullable": true
          },
          "accountUpdaterId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentechOnboardingConfigurationDtoMerchantProcessorResponseDto": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "merchantProcessorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorName": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "processorFields": {
            "$ref": "#/components/schemas/PaymentechOnboardingConfigurationDto"
          },
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessingMethodTypeEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProcessorType": {
        "enum": [
          1,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "format": "int32"
      },
      "RawDataContainer": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/RawDataPutResult"
          },
          "response": {
            "$ref": "#/components/schemas/RawDataPutResult"
          }
        },
        "additionalProperties": false
      },
      "RawDataPutResult": {
        "type": "object",
        "properties": {
          "storageId": {
            "type": "string",
            "nullable": true
          },
          "rawData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundInvoiceRequestDTO": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundInvoiceResponseDTO": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDTO"
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceAttemptDTO"
            },
            "nullable": true
          },
          "refundedSubtotal": {
            "type": "number",
            "format": "double"
          },
          "refundedTax": {
            "type": "number",
            "format": "double"
          },
          "refundedTotal": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ReplaceSubscriptionPrimaryPaymentMethodDTO": {
        "type": "object",
        "properties": {
          "billingFirstName": {
            "type": "string",
            "nullable": true
          },
          "billingLastName": {
            "type": "string",
            "nullable": true
          },
          "billingFullName": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/CreateAddressRequestDTO"
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCardDTO"
          },
          "ach": {
            "$ref": "#/components/schemas/AchDTO"
          },
          "googlePay": {
            "$ref": "#/components/schemas/GooglePayDTO"
          },
          "applePay": {
            "$ref": "#/components/schemas/ApplePayDto"
          },
          "merchantPaymentMethodRefId": {
            "type": "string",
            "nullable": true
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "originalNetworkTransactionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReplaceSubscriptionPrimaryPaymentMethodRequestDTO": {
        "type": "object",
        "properties": {
          "existingPaymentMethod": {
            "$ref": "#/components/schemas/ExistingPaymentMethodDTO"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/ReplaceSubscriptionPrimaryPaymentMethodDTO"
          }
        },
        "additionalProperties": false
      },
      "ReverseAuthorizationCommandRequestDTO": {
        "type": "object",
        "properties": {
          "paymentMethodAuthorizationId": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReverseAuthorizationCommandResponseDTO": {
        "type": "object",
        "properties": {
          "paymentProcessor": {
            "$ref": "#/components/schemas/ProcessorType"
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleRequestDTO": {
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "includeRawProcessorResponse": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDetailsDTO"
          },
          "dynamicDescriptor": {
            "$ref": "#/components/schemas/TransactionDescriptorDTO"
          }
        },
        "additionalProperties": false
      },
      "SaleResponseDTO": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantInvoiceRefId": {
            "type": "string",
            "nullable": true
          },
          "merchantPaymentMethodRefId": {
            "type": "string",
            "nullable": true
          },
          "networkTransactionId": {
            "type": "string",
            "nullable": true
          },
          "invoiceStatus": {
            "type": "string",
            "nullable": true
          },
          "invoiceAttemptStatus": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "$ref": "#/components/schemas/AmountResponseDTO"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentMethodTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentProcessor": {
            "type": "string",
            "nullable": true
          },
          "processorMerchantId": {
            "type": "string",
            "nullable": true
          },
          "rawResponse": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleWithPaymentMethodRawRequestDTO": {
        "required": [
          "invoice",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "includeRawProcessorResponse": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDetailsDTO"
          },
          "dynamicDescriptor": {
            "$ref": "#/components/schemas/TransactionDescriptorDTO"
          },
          "networkProcessing": {
            "$ref": "#/components/schemas/NetworkProcessingDTO"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/CreatePaymentMethodRequestDTO"
          }
        },
        "additionalProperties": false
      },
      "SaleWithPaymentMethodRequestDTO": {
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "includeRawProcessorResponse": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDetailsDTO"
          },
          "dynamicDescriptor": {
            "$ref": "#/components/schemas/TransactionDescriptorDTO"
          },
          "networkProcessing": {
            "$ref": "#/components/schemas/NetworkProcessingDTO"
          }
        },
        "additionalProperties": false
      },
      "Severity": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "SimpleObjectResult": {
        "type": "object",
        "properties": {
          "response": {
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusMessageResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fluentValidatorErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationFailure"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionBillingPlanDTO": {
        "type": "object",
        "properties": {
          "subscriptionBillingPlanId": {
            "type": "integer",
            "format": "int64"
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "cyclesRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "cycleCount": {
            "type": "integer",
            "format": "int32"
          },
          "valueType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionDTO": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantSubscriptionRefId": {
            "type": "string",
            "nullable": true
          },
          "networkTransactionId": {
            "type": "string",
            "nullable": true
          },
          "billingIntervalType": {
            "type": "string",
            "nullable": true
          },
          "billingIntervalCount": {
            "type": "integer",
            "format": "int32"
          },
          "subscriptionStatusType": {
            "type": "string",
            "nullable": true
          },
          "subscriptionCancelType": {
            "type": "string",
            "nullable": true
          },
          "initialBillDate": {
            "type": "string",
            "nullable": true
          },
          "nextBillDate": {
            "type": "string",
            "nullable": true
          },
          "taxAddress": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "paymentMethodIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "billingPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionBillingPlanDTO"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "paymentProcessor": {
            "type": "string",
            "nullable": true
          },
          "processorMerchantId": {
            "type": "string",
            "nullable": true
          },
          "processorRawResponse": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "token_type": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "format": "int64"
          },
          "ext_expires_in": {
            "type": "integer",
            "format": "int64"
          },
          "access_token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionDescriptorDTO": {
        "type": "object",
        "properties": {
          "subMerchantId": {
            "type": "string",
            "nullable": true
          },
          "subMerchantName": {
            "type": "string",
            "nullable": true
          },
          "subMerchantPhone": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionDescriptorDto": {
        "type": "object",
        "properties": {
          "subMerchantId": {
            "type": "string",
            "nullable": true
          },
          "subMerchantName": {
            "type": "string",
            "nullable": true
          },
          "subMerchantPhone": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionTypeEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "TsysOnboardingConfigurationDto": {
        "type": "object",
        "properties": {
          "merchantName": {
            "type": "string",
            "nullable": true
          },
          "customerSupportPhone": {
            "type": "string",
            "nullable": true
          },
          "merchantNumber": {
            "type": "string",
            "nullable": true
          },
          "vNumber": {
            "type": "string",
            "nullable": true
          },
          "merchantCategoryCode": {
            "type": "string",
            "nullable": true
          },
          "acquirerBin": {
            "type": "string",
            "nullable": true
          },
          "agentChainNumber": {
            "type": "string",
            "nullable": true
          },
          "agentBankNumber": {
            "type": "string",
            "nullable": true
          },
          "storeNumber": {
            "type": "string",
            "nullable": true
          },
          "terminalNumber": {
            "type": "string",
            "nullable": true
          },
          "locationNumber": {
            "type": "string",
            "nullable": true
          },
          "authenticationCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TsysOnboardingConfigurationDtoMerchantProcessorResponseDto": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "merchantProcessorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorName": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "processorFields": {
            "$ref": "#/components/schemas/TsysOnboardingConfigurationDto"
          },
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBillingAddressRequestDTO": {
        "type": "object",
        "properties": {
          "billingFirstName": {
            "type": "string",
            "nullable": true
          },
          "billingLastName": {
            "type": "string",
            "nullable": true
          },
          "billingFullName": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/CreateAddressRequestDTO"
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomerRequestDTO": {
        "type": "object",
        "properties": {
          "merchantCustomerRefId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateInvoiceRequestDTO": {
        "type": "object",
        "properties": {
          "merchantInvoiceRefId": {
            "type": "string",
            "nullable": true
          },
          "invoiceStatusType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSubscriptionRequestDTO": {
        "type": "object",
        "properties": {
          "merchantSubscriptionRefId": {
            "type": "string",
            "nullable": true
          },
          "intervalType": {
            "$ref": "#/components/schemas/IntervalEnum"
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subscriptionStatusType": {
            "type": "string",
            "nullable": true
          },
          "subscriptionCancelType": {
            "type": "string",
            "nullable": true
          },
          "nextBillDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpsertAdyenOnboardingMerchantProcessorRequestDto": {
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "adyenOnboardingConfiguration": {
            "$ref": "#/components/schemas/AdyenOnboardingConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "UpsertBridgePayOnboardingMerchantProcessorRequestDto": {
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "bridgePayOnboardingConfiguration": {
            "$ref": "#/components/schemas/BridgePayOnboardingConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "UpsertEpxOnboardingMerchantProcessorRequestDto": {
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "epxOnboardingConfiguration": {
            "$ref": "#/components/schemas/EpxOnboardingConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "UpsertNuveiOnboardingMerchantProcessorRequestDto": {
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "nuveiOnboardingConfiguration": {
            "$ref": "#/components/schemas/NuveiOnboardingConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "UpsertPaymentLyncOnboardingMerchantProcessorRequestDto": {
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentLyncOnboardingConfiguration": {
            "$ref": "#/components/schemas/PaymentLyncOnboardingConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "UpsertPaymentechOnboardingMerchantProcessorRequestDto": {
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentechOnboardingConfiguration": {
            "$ref": "#/components/schemas/PaymentechOnboardingConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "UpsertTsysOnboardingMerchantProcessorRequestDto": {
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "tsysOnboardingConfiguration": {
            "$ref": "#/components/schemas/TsysOnboardingConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "UpsertWorldPayOnboardingMerchantProcessorRequestDto": {
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "worldPayOnboardingConfiguration": {
            "$ref": "#/components/schemas/WorldPayOnboardingConfigurationDto"
          }
        },
        "additionalProperties": false
      },
      "ValidationFailure": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "attemptedValue": {
            "nullable": true
          },
          "customState": {
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/Severity"
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "formattedMessagePlaceholderValues": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyAchAccountResponse": {
        "type": "object",
        "properties": {
          "isVerified": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VwInvoice": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "merchantInvoiceRefId": {
            "type": "string",
            "nullable": true
          },
          "binNumber": {
            "type": "string",
            "nullable": true
          },
          "last4Digit": {
            "type": "string",
            "nullable": true
          },
          "invoiceStatus": {
            "type": "string",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "billingDate": {
            "type": "string",
            "nullable": true
          },
          "merchantLegalName": {
            "type": "string",
            "nullable": true
          },
          "merchantCustomerRefId": {
            "type": "string",
            "nullable": true
          },
          "customerFirstName": {
            "type": "string",
            "nullable": true
          },
          "customerLastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorldPayOnboardingConfigurationDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "transactionDescriptor": {
            "type": "string",
            "nullable": true
          },
          "worldPayMerchantId": {
            "type": "string",
            "nullable": true
          },
          "accountUpdaterId": {
            "type": "integer",
            "format": "int32"
          },
          "merchantPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorldPayOnboardingConfigurationDtoMerchantProcessorResponseDto": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "merchantProcessorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorId": {
            "type": "integer",
            "format": "int64"
          },
          "processorName": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "processorFields": {
            "$ref": "#/components/schemas/WorldPayOnboardingConfigurationDto"
          },
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}